name: Test on known CVEs

on:
  workflow_dispatch:
    inputs:

      chart_folder:
        description: 'The path to the Helm Chart folder'
        required: true
        default: 'mysql'
        type: string

      kernel_version:
        description: 'Version of Linux Kernel'
        required: true
        default: '5.4.0'
        type: string

      docker_version:
        description: 'Version of Docker'
        required: true
        default: '20.10.21'
        type: string

      resource_path:
        description: 'Document`s path in the YAML document'
        default: 'StatefulSet/default/release-name-mysql'
        type: string
  
      obj_path:
        description: 'Container`s path in the YAML document'
        default: 'spec/template/spec/containers/0'
        type: string

      iteration:
        description: 'Iteration number'
        required: true
        default: '1'
        type: string

jobs:

  test_on_cves:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
        with:
          ref: 'main'

      - uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Generate chart template
        if: ${{ inputs.iteration == '1'}}
        shell: bash
        run: helm template ${{ inputs.chart_folder }} > templates/${{ inputs.chart_folder }}_template.yaml

      - name: Print chart template
        if: ${{ inputs.iteration == '1'}}
        shell: bash
        run: cat templates/${{ inputs.chart_folder }}_template.yaml

      - name: Install python packages
        shell: bash
        run: |
          cd .github/scripts
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Generate Docker run command
      #   shell: bash
      #   run: python .github/scripts/main.py --docker-run
      #   env:
      #     chart_folder: ${{ inputs.chart_folder }}
      #     resource_path: ${{ inputs.resource_path }}
      #     obj_path: ${{ inputs.obj_path }}

      # Generate Docker run command
      - name: Generate first Docker run command
        if: ${{ inputs.iteration == '1'}}
        shell: bash
        run: echo "docker run --name mysql --user 1001 -p 3306:3306 --env ALLOW_EMPTY_PASSWORD=yes docker.io/bitnami/mysql:8.0.32-debian-11-r21"

      # Generate Docker run command
      - name: Generate second Docker run command
        if: ${{ inputs.iteration == '2'}}
        shell: bash
        run: echo "docker run --name mysql --cap-drop all --user 25000 --read-only --security-opt=no-new-privileges -p 3306:3306 --env ALLOW_EMPTY_PASSWORD=yes docker.io/bitnami/mysql:8.0.32-debian-11-r21"

      - name: Print Docker version
        shell: bash
        run: echo "Docker version ${{ inputs.docker_version }}"

      - name: Print Linux kernel version
        shell: bash
        run: echo "Linux kernel version ${{ inputs.kernel_version }}"

      # Manually run the ContainerGraph tool
      # https://github.com/fminna/ContainerGraph

      # Docker & Kernel versions: build_infrastructure.py
      # By default, ignore ALL CVEs: vuln_tree_traversal.py []

      # Print CVEs outcome
      - name: Print number of CVEs
        if: ${{ inputs.iteration == '1'}}
        shell: bash
        run: echo "The container is vulnerable to 18 CVEs (CVE-2015-8543, CVE-2015-2925, CVE-2015-5157, CVE-2015-3290, CVE-2016-4998, CVE-2016-3134, CVE-2016-2383, CVE-2015-4036, CVE-2017-16939, CVE-2017-14489, CVE-2015-3627, CVE-2015-3630, CVE-2019-13509, CVE-2022-24769, CVE-2021-21334, CVE-2022-31030, CVE-2021-43784, CVE-2022-29162)."

      # Print CVEs outcome
      - name: Print number of CVEs
        if: ${{ inputs.iteration == '2'}}
        shell: bash
        run: echo "The container is vulnerable to 16 CVEs (CVE-2015-8543, CVE-2015-2925, CVE-2015-5157, CVE-2016-3134, CVE-2016-2383, CVE-2015-4036, CVE-2017-16939, CVE-2017-14489, CVE-2015-3627, CVE-2015-3630, CVE-2019-13509, CVE-2022-24769, CVE-2021-21334, CVE-2022-31030, CVE-2021-43784, CVE-2022-29162)."

      - name: Commit and push changes
        shell: bash
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add templates/${{ inputs.chart_folder }}_template.yaml
          git commit -m "Fixed ${{ inputs.chart_folder }} template chart"
          git push
        continue-on-error: true
