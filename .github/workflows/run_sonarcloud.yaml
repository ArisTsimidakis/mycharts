name: Run SonarCloud

on:
  workflow_call:
    inputs:

      iteration:
        required: true
        type: string

      chart_folder:
        required: true
        type: string
    
    secrets:
      
        SONAR_TOKEN: 
          description: 'SonarCloud API token'
          required: true

jobs:

  run_sonarcloud:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Define template chart folder - original
        if: ${{ inputs.iteration == '1'}}
        run: echo "TEMPLATE=templates/${{ inputs.chart_folder }}_template.yaml" >> $GITHUB_ENV

      - name: Define template chart folder - fixed
        if: ${{ inputs.iteration == '2'}}
        run: echo "TEMPLATE=fixed_templates/${{ inputs.chart_folder }}_${{ inputs.first_tool }}_fixed_template.yaml" >> $GITHUB_ENV

      - name: Define template chart folder - functionalities
        if: ${{ inputs.iteration == '3'}}
        run: echo "TEMPLATE=functionality_templates/${{ inputs.chart_folder }}_func_template.yaml" >> $GITHUB_ENV

      - name: Create sonar-project.properties
        shell: bash
        run: |
          echo "sonar.organization=aristsimidakis" > ${{ inputs.chart_folder }}/sonar-project.properties
          echo "sonar.projectKey=ArisTsimidakis_mycharts" >> ${{ inputs.chart_folder }}/sonar-project.properties
          echo "sonar.projectName=mycharts" >> ${{ inputs.chart_folder }}/sonar-project.properties


      - name: Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3.1
        with:
          projectBaseDir: ${{ inputs.chart_folder }} 
          args: >
            -Dsonar.verbose=true
            -Dsonar.log_level=DEBUG
            -Dsonar.scanner.dumpToFile=sonar-scanner-dump.log
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
        - name: Fetch SonarCloud Report
          shell: bash
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
          PROJECT_KEY="ArisTsimidakis_mycharts"
          SONAR_API="https://sonarcloud.io/api/issues/search?componentKeys=$PROJECT_KEY"

          curl -u "$SONAR_TOKEN:" "$SONAR_API" > ${{ inputs.chart_folder }}/sonar-results.json

      
      - name: Clean up sonar-project.properties
        shell: bash
        run: rm ${{ inputs.chart_folder }}/sonar-project.properties


      
