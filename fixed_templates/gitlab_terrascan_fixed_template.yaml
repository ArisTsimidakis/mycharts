apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-gitaly
  namespace: default
  labels:
    app: gitaly
    chart: gitaly-7.0.3
    release: release-name
    heritage: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: gitaly
      release: release-name
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-gitlab-shell
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.0.3
    release: release-name
    heritage: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: gitlab-shell
      release: release-name
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-kas
  namespace: default
  labels:
    app: kas
    chart: kas-7.0.3
    release: release-name
    heritage: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: kas
      release: release-name
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-sidekiq-all-in-1-v1
  namespace: default
  labels:
    app: sidekiq
    chart: sidekiq-7.0.3
    release: release-name
    heritage: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: sidekiq
      release: release-name
      queue-pod-name: all-in-1
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-webservice-default
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.0.3
    release: release-name
    heritage: Helm
    gitlab.com/webservice-name: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: webservice
      release: release-name
      gitlab.com/webservice-name: default
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-minio-v1
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: release-name
    heritage: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: minio
      release: release-name
      component: app
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-nginx-ingress-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app: nginx-ingress
      release: release-name
      component: controller
  minAvailable: 1
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-registry-v1
  namespace: default
  labels:
    app: registry
    chart: registry-0.7.0
    release: release-name
    heritage: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: registry
      release: release-name
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-certmanager-issuer
  namespace: default
  labels:
    app: certmanager-issuer
    chart: certmanager-issuer-0.1.0
    release: release-name
    heritage: Helm
  annotations:
    namespace: default
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: release-name-certmanager-cainjector
  namespace: default
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: release-name-certmanager
  namespace: default
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: release-name-certmanager-webhook
  namespace: default
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gitlab-runner
  namespace: default
  labels:
    app: release-name-gitlab-runner
    chart: gitlab-runner-0.52.0
    release: release-name
    heritage: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-nginx-ingress
  namespace: default
automountServiceAccountToken: false
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.18.0
    heritage: Helm
  name: release-name-prometheus-server
  namespace: default
  annotations: {}
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: release-name-redis
  namespace: default
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-certmanager-issuer-certmanager
  namespace: default
  labels:
    app: certmanager-issuer
    chart: certmanager-issuer-0.1.0
    release: release-name
    heritage: Helm
data:
  create-issuer: "#!/bin/bash\nset -e ;\n\nissuer_file=$1\nnamespace=default\n\necho\
    \ \"Creating the certmanager issuer...\"\nset +e ; # The CRD may not exist yet.\
    \ We need to retry until this passes\nwhile ! kubectl --namespace=$namespace apply\
    \ -f ${issuer_file:=issuer.yml}; do\n  sleep 1;\ndone ;\nset -e ; # reset `e`\
    \ as active\n"
  issuer.yml: "apiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: release-name-issuer\n\
    \  namespace: default\n  labels:\n    app: certmanager-issuer\n    chart: certmanager-issuer-0.1.0\n\
    \    release: release-name\n    heritage: Helm\n    \nspec:\n  acme:\n    # The\
    \ ACME server URL\n    server: \"https://acme-v02.api.letsencrypt.org/directory\"\
    \n    # Email address used for ACME registration\n    email: \"email@example.com\"\
    \n    # Name of a secret used to store the ACME account private key\n    privateKeySecretRef:\n\
    \      name: release-name-acme-key\n    # Enable the HTTP-01 challenge provider\n\
    \    solvers:\n    - selector: {}\n      http01:\n        ingress:\n         \
    \ class: release-name-nginx\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-certmanager-webhook
  namespace: default
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
data: null
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-gitlab-runner
  namespace: default
  labels:
    app: release-name-gitlab-runner
    chart: gitlab-runner-0.52.0
    release: release-name
    heritage: Helm
data:
  entrypoint: "#!/bin/bash\nset -e\n\nmkdir -p /home/gitlab-runner/.gitlab-runner/\n\
    \ncp /configmaps/config.toml /home/gitlab-runner/.gitlab-runner/\n\n# Set up environment\
    \ variables for cache\nif [[ -f /secrets/accesskey && -f /secrets/secretkey ]];\
    \ then\n  export CACHE_S3_ACCESS_KEY=$(cat /secrets/accesskey)\n  export CACHE_S3_SECRET_KEY=$(cat\
    \ /secrets/secretkey)\nfi\n\nif [[ -f /secrets/gcs-applicaton-credentials-file\
    \ ]]; then\n  export GOOGLE_APPLICATION_CREDENTIALS=\"/secrets/gcs-applicaton-credentials-file\"\
    \nelif [[ -f /secrets/gcs-application-credentials-file ]]; then\n  export GOOGLE_APPLICATION_CREDENTIALS=\"\
    /secrets/gcs-application-credentials-file\"\nelse\n  if [[ -f /secrets/gcs-access-id\
    \ && -f /secrets/gcs-private-key ]]; then\n    export CACHE_GCS_ACCESS_ID=$(cat\
    \ /secrets/gcs-access-id)\n    # echo -e used to make private key multiline (in\
    \ google json auth key private key is oneline with \\n)\n    export CACHE_GCS_PRIVATE_KEY=$(echo\
    \ -e $(cat /secrets/gcs-private-key))\n  fi\nfi\n\nif [[ -f /secrets/azure-account-name\
    \ && -f /secrets/azure-account-key ]]; then\n  export CACHE_AZURE_ACCOUNT_NAME=$(cat\
    \ /secrets/azure-account-name)\n  export CACHE_AZURE_ACCOUNT_KEY=$(cat /secrets/azure-account-key)\n\
    fi\n\nif [[ -f /secrets/runner-registration-token ]]; then\n  export REGISTRATION_TOKEN=$(cat\
    \ /secrets/runner-registration-token)\nfi\n\nif [[ -f /secrets/runner-token ]];\
    \ then\n  export CI_SERVER_TOKEN=$(cat /secrets/runner-token)\nfi\n\n# Validate\
    \ this also at runtime in case the user has set a custom secret\nif [[ ! -z \"\
    $CI_SERVER_TOKEN\" && \"1\" -ne \"1\" ]]; then\n  echo \"Using a runner token\
    \ with more than 1 replica is not supported.\"\n  exit 1\nfi\n\n# Register the\
    \ runner\nif ! sh /configmaps/register-the-runner; then\n  exit 1\nfi\n\n# Run\
    \ pre-entrypoint-script\nif ! bash /configmaps/pre-entrypoint-script; then\n \
    \ exit 1\nfi\n\n# Start the runner\nexec /entrypoint run --user=gitlab-runner\
    \ \\\n  --working-directory=/home/gitlab-runner\n"
  config.toml: 'concurrent = 10

    check_interval = 30

    log_level = "info"

    '
  config.template.toml: "[[runners]]\n  [runners.kubernetes]\n  image = \"ubuntu:22.04\"\
    \n  [runners.cache]\n    Type = \"s3\"\n    Path = \"gitlab-runner\"\n    Shared\
    \ = true\n    [runners.cache.s3]\n      ServerAddress = \"minio.example.com\"\n\
    \      BucketName = \"runner-cache\"\n      BucketLocation = \"us-east-1\"\n \
    \     Insecure = false\n  \n"
  register-the-runner: "#!/bin/bash\nMAX_REGISTER_ATTEMPTS=30\n\nfor i in $(seq 1\
    \ \"${MAX_REGISTER_ATTEMPTS}\"); do\n  echo \"Registration attempt ${i} of ${MAX_REGISTER_ATTEMPTS}\"\
    \n  /entrypoint register \\\n    --template-config /configmaps/config.template.toml\
    \ \\\n    --non-interactive\n\n  retval=$?\n\n  if [ ${retval} = 0 ]; then\n \
    \   break\n  elif [ ${i} = ${MAX_REGISTER_ATTEMPTS} ]; then\n    exit 1\n  fi\n\
    \n  sleep 5\ndone\n\nexit 0\n"
  check-live: "#!/bin/bash\nif /usr/bin/pgrep -f .*register-the-runner; then\n  exit\
    \ 0\nelif /usr/bin/pgrep gitlab.*runner; then\n  exit 0\nelse\n  exit 1\nfi\n"
  pre-entrypoint-script: ''
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-gitaly
  namespace: default
  labels:
    app: gitaly
    chart: gitaly-7.0.3
    release: release-name
    heritage: Helm
data:
  configure: 'set -e

    mkdir -p /init-secrets/gitaly /init-secrets/shell

    cp -v -r -L /init-config/.gitlab_shell_secret  /init-secrets/shell/.gitlab_shell_secret

    cp -v -r -L /init-config/gitaly_token  /init-secrets/gitaly/gitaly_token

    '
  config.toml.erb: '# The directory where Gitaly''s executables are stored

    bin_dir = "/usr/local/bin"


    # listen on a TCP socket. This is insecure (no authentication)

    listen_addr = "0.0.0.0:8075"


    # Directory where internal sockets reside

    # note: no value will result in a `/tmp/gitlab-internal-*` path

    # internal_socket_dir = "/home/git"


    # If metrics collection is enabled, inform gitaly about that

    prometheus_listen_addr = "0.0.0.0:9236"


    <% @storages = [  "default",  ] %>


    <% @index=`echo ${HOSTNAME##*-}`.to_i %>

    <% if @storages.length > @index %>

    [[storage]]

    name = "<%= @storages[@index] %>"

    path = "/home/git/repositories"

    <% else %>

    <% raise Exception, "Storage for node #{@index} is not present in the storageNames
    array. Did you use kubectl to scale up? You need to solely use helm for this purpose."
    %>

    <% end %>


    [logging]

    format = "json"

    dir = "/var/log/gitaly"


    [auth]

    token = <%= File.read(''/etc/gitlab-secrets/gitaly/gitaly_token'').strip.to_json
    %>


    [git]

    use_bundled_binaries = true

    ignore_gitconfig = true


    [gitaly-ruby]

    # The directory where gitaly-ruby is installed

    dir = "/srv/gitaly-ruby"


    [gitlab-shell]

    # The directory where gitlab-shell is installed

    dir = "/srv/gitlab-shell"


    [gitlab]

    # location of shared secret for GitLab Shell / API interaction

    secret_file = "/etc/gitlab-secrets/shell/.gitlab_shell_secret"

    # URL of API

    url = "http://release-name-webservice-default.default.svc:8181/"


    [gitlab.http-settings]

    # read_timeout = 300

    # user = someone

    # password = somepass

    # ca_file = /etc/ssl/cert.pem

    # ca_path = /etc/pki/tls/certs


    [hooks]

    # directory containing custom hooks

    custom_hooks_dir = "/home/git/custom_hooks"

    '
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-gitlab-exporter
  namespace: default
  labels:
    app: gitlab-exporter
    chart: gitlab-exporter-7.0.3
    release: release-name
    heritage: Helm
data:
  gitlab-exporter.yml.erb: "server:\n  name: webrick\n  listen_address: 0.0.0.0\n\
    \  listen_port: 9168\n  \n\nprobes:\n  db_common: &db_common\n    methods:\n \
    \     - probe_db\n    opts:\n      connection_string: dbname=gitlabhq_production\
    \ user=gitlab host=release-name-postgresql.default.svc port=5432 password='<%=\
    \ File.read('/etc/gitlab/postgres/psql-password-main').strip.gsub(/[\\'\\\\]/)\
    \ { |esc| '\\\\' + esc } %>'\n  database:\n    multiple: true\n    ci_builds:\n\
    \      class_name: Database::CiBuildsProber\n      <<: *db_common\n    tuple_stats:\n\
    \      class_name: Database::TuplesProber\n      <<: *db_common\n    rows_count:\n\
    \      class_name: Database::RowCountProber\n      <<: *db_common\n  database_bloat:\n\
    \    class_name: Database::BloatProber\n    <<: *db_common\n\n  sidekiq: &sidekiq\n\
    \    methods:\n      - probe_queues\n      - probe_workers\n      - probe_retries\n\
    \      - probe_stats\n    opts:\n      redis_url: redis://:<%= ERB::Util::url_encode(File.read(\"\
    /etc/gitlab/redis/redis-password\").strip) %>@release-name-redis-master.default.svc:6379\n\
    \      redis_enable_client: false\n\n  ruby: &ruby\n    methods:\n      - probe_gc\n\
    \    opts:\n      quantiles: false\n\n  metrics:\n    multiple: true\n    ruby:\n\
    \      <<: *ruby\n    sidekiq:\n      <<: *sidekiq\n    ci_builds:\n      class_name:\
    \ Database::CiBuildsProber\n      <<: *db_common\n    tuple_stats:\n      class_name:\
    \ Database::TuplesProber\n      <<: *db_common\n    rows_count:\n      class_name:\
    \ Database::RowCountProber\n      <<: *db_common\n"
  configure: "# BEGIN gitlab.scripts.configure.secrets\nset -e\nconfig_dir=\"/init-config\"\
    \nsecret_dir=\"/init-secrets\"\n# optional\nfor secret in redis postgres gitlab-exporter\
    \ ; do\n  if [ -e \"${config_dir}/${secret}\" ]; then\n    mkdir -p \"${secret_dir}/${secret}\"\
    \n    cp -f -v -r -L \"${config_dir}/${secret}/.\" \"${secret_dir}/${secret}/\"\
    \n  fi\ndone\n# END gitlab.scripts.configure.secrets\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-gitlab-shell-sshd
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.0.3
    release: release-name
    heritage: Helm
data:
  sshd_config: "#\t$OpenBSD: sshd_config,v 1.101 2017/03/14 07:19:07 djm Exp $\n\n\
    # This is the sshd server system-wide configuration file.  See\n# sshd_config(5)\
    \ for more information.\n\n# This sshd was compiled with PATH=/bin:/usr/bin:/sbin:/usr/sbin\n\
    \n# The strategy used for options in the default sshd_config shipped with\n# OpenSSH\
    \ is to specify options with their default value where\n# possible, but leave\
    \ them commented.  Uncommented options override the\n# default value.\n\nPort\
    \ 2222\n#AddressFamily any\n#ListenAddress 0.0.0.0\n#ListenAddress ::\n\n#HostKey\
    \ /etc/ssh/ssh_host_rsa_key\n#HostKey /etc/ssh/ssh_host_dsa_key\n#HostKey /etc/ssh/ssh_host_ecdsa_key\n\
    #HostKey /etc/ssh/ssh_host_ed25519_key\n\n# Ciphers and keying\n#RekeyLimit default\
    \ none\n\n# Logging\n#SyslogFacility AUTH\nLogLevel ERROR\n\n# Authentication:\n\
    \nPermitRootLogin no\n#StrictModes yes\n#MaxAuthTries 6\n#MaxSessions 10\n\n#PubkeyAuthentication\
    \ yes\n\n#AuthorizedPrincipalsFile none\n\n# For this to work you will also need\
    \ host keys in /etc/ssh/ssh_known_hosts\n#HostbasedAuthentication no\n# Change\
    \ to yes if you don't trust ~/.ssh/known_hosts for\n# HostbasedAuthentication\n\
    #IgnoreUserKnownHosts no\n# Don't read the user's ~/.rhosts and ~/.shosts files\n\
    #IgnoreRhosts yes\n\n#PermitEmptyPasswords no\n\n# Change to no to disable s/key\
    \ passwords\n#ChallengeResponseAuthentication yes\n\n# Kerberos options\n#KerberosAuthentication\
    \ no\n#KerberosOrLocalPasswd yes\n#KerberosTicketCleanup yes\n#KerberosGetAFSToken\
    \ no\n\n# GSSAPI options\n#GSSAPIAuthentication no\n#GSSAPICleanupCredentials\
    \ yes\n\n# Set this to 'yes' to enable PAM authentication, account processing,\n\
    # and session processing. If this is enabled, PAM authentication will\n# be allowed\
    \ through the ChallengeResponseAuthentication and\n# PasswordAuthentication. \
    \ Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication\
    \ may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you\
    \ just want the PAM account and session checks to run without\n# PAM authentication,\
    \ then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication\
    \ to 'no'.\n#UsePAM no\n\n#AllowAgentForwarding yes\n#AllowTcpForwarding yes\n\
    #GatewayPorts no\n#X11Forwarding no\n#X11DisplayOffset 10\n#X11UseLocalhost yes\n\
    #PermitTTY yes\n#PrintMotd yes\n#PrintLastLog yes\n#TCPKeepAlive yes\n#UseLogin\
    \ no\n#PermitUserEnvironment no\n#Compression delayed\nClientAliveInterval 0\n\
    #ClientAliveCountMax 3\n#UseDNS no\nPidFile /srv/sshd/sshd.pid\n#PermitTunnel\
    \ no\n#ChrootDirectory none\n#VersionAddendum none\n\n# no default banner path\n\
    #Banner none\n\n# override default of no subsystems\n# Subsystem\tsftp\t/usr/lib/ssh/sftp-server\n\
    \n# the following are HPN related configuration options\n# tcp receive buffer\
    \ polling. disable in non autotuning kernels\n#TcpRcvBufPoll yes\n\n# disable\
    \ hpn performance boosts\n#HPNDisabled no\n\n# buffer size for hpn to non-hpn\
    \ connections\n#HPNBufferSize 2048\n\n\n# Example of overriding settings on a\
    \ per-user basis\n#Match User anoncvs\n#\tX11Forwarding no\n#\tAllowTcpForwarding\
    \ no\n#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check\
    \ both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden\
    \ so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t\
    .ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser\
    \ git\n\nPasswordAuthentication no\n\nAllowUsers git\n\n# Enable the use of Git\
    \ protcol v2\nAcceptEnv GIT_PROTOCOL\n\n# Hard disable all forwarding\nDisableForwarding\
    \ yes\n\n# Specifies the maximum number of concurrent unauthenticated connections\
    \ to the SSH daemon.\n# See `man sshd_config(5)`\n\nMaxStartups 10:30:100\n\n\n\
    # Specifies amount of time athat the server will disconnect after if the user\
    \ has not successfully logged in\nLoginGraceTime 60\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-gitlab-shell
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.0.3
    release: release-name
    heritage: Helm
data:
  configure: "# BEGIN gitlab.scripts.configure.secrets\nset -e\nconfig_dir=\"/init-config\"\
    \nsecret_dir=\"/init-secrets\"\n# required\nfor secret in shell ; do\n  mkdir\
    \ -p \"${secret_dir}/${secret}\"\n  cp -f -v -r -L \"${config_dir}/${secret}/.\"\
    \ \"${secret_dir}/${secret}/\"\ndone\n# END gitlab.scripts.configure.secrets\n\
    mkdir -p /${secret_dir}/ssh\ncp -v -r -L /${config_dir}/ssh_host_* /${secret_dir}/ssh/\n\
    chmod 0400 /${secret_dir}/ssh/ssh_host_*\n"
  config.yml.tpl: '# GitLab user. git by default

    user: git


    # Url to gitlab instance. Used for api calls. Should end with a slash.

    gitlab_url: "http://release-name-webservice-default.default.svc:8181/"


    secret_file: /etc/gitlab-secrets/shell/.gitlab_shell_secret


    # File used as authorized_keys for gitlab user

    auth_file: "/home/git/.ssh/authorized_keys"


    # Log file.

    # Default is gitlab-shell.log in the root directory.

    log_file: "/var/log/gitlab-shell/gitlab-shell.log"


    log_format: json


    # Audit usernames.

    # Set to true to see real usernames in the logs instead of key ids, which is easier
    to follow, but

    # incurs an extra API call on every gitlab-shell command.

    audit_usernames: false

    '
  krb5.conf: ''
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nginx-ingress-tcp
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.0.3
    release: release-name
    heritage: Helm
data:
  '22': 'default/release-name-gitlab-shell:22::'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kas
  namespace: default
  labels:
    app: kas
    chart: kas-7.0.3
    release: release-name
    heritage: Helm
data:
  config.yaml: "agent:\n  kubernetes_api:\n    listen:\n      address: :8154\n   \
    \ url_path_prefix: /k8s-proxy\n  listen:\n    address: :8150\n    websocket: true\n\
    api:\n  listen:\n    address: :8153\n    authentication_secret_file: /etc/kas/.gitlab_kas_secret\n\
    gitlab:\n  address: http://release-name-webservice-default.default.svc:8181\n\
    \  authentication_secret_file: /etc/kas/.gitlab_kas_secret\n  external_url: https://gitlab.example.com\n\
    observability:\n  listen:\n    address: :8151\n  liveness_probe:\n    url_path:\
    \ /liveness\n  readiness_probe:\n    url_path: /readiness\nprivate_api:\n  listen:\n\
    \    address: :8155\n    authentication_secret_file: /etc/kas/.gitlab_kas_private_api_secret\n\
    redis:\n  password_file: /etc/kas/redis/redis-password\n  server:\n    address:\
    \ release-name-redis-master.default.svc:6379\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-migrations
  namespace: default
  labels:
    app: migrations
    chart: migrations-7.0.3
    release: release-name
    heritage: Helm
data:
  pages_redirect_uri: https://projects.pages.example.com/auth
  installation_type: 'gitlab-helm-chart

    '
  database.yml.erb: "\nproduction:\n  main:\n    adapter: postgresql\n    encoding:\
    \ unicode\n    database: gitlabhq_production\n    username: gitlab\n    password:\
    \ <%= File.read('/etc/gitlab/postgres/psql-password-main').strip.to_json %>\n\
    \    host: \"release-name-postgresql.default.svc\"\n    port: 5432\n    connect_timeout:\
    \ \n    keepalives: \n    keepalives_idle: \n    keepalives_interval: \n    keepalives_count:\
    \ \n    tcp_user_timeout: \n    application_name: \n    prepared_statements: false\n\
    \    database_tasks: true\n    \n    \n  ci:\n    adapter: postgresql\n    encoding:\
    \ unicode\n    database: gitlabhq_production\n    username: gitlab\n    password:\
    \ <%= File.read('/etc/gitlab/postgres/psql-password-ci').strip.to_json %>\n  \
    \  host: \"release-name-postgresql.default.svc\"\n    port: 5432\n    connect_timeout:\
    \ \n    keepalives: \n    keepalives_idle: \n    keepalives_interval: \n    keepalives_count:\
    \ \n    tcp_user_timeout: \n    application_name: \n    prepared_statements: false\n\
    \    database_tasks: false\n    \n    \n"
  resque.yml.erb: "production:\n  url: redis://:<%= ERB::Util::url_encode(File.read(\"\
    /etc/gitlab/redis/redis-password\").strip) %>@release-name-redis-master.default.svc:6379\n\
    \  \n  id:\n"
  cable.yml.erb: "production:\n  url: redis://:<%= ERB::Util::url_encode(File.read(\"\
    /etc/gitlab/redis/redis-password\").strip) %>@release-name-redis-master.default.svc:6379\n\
    \  \n  id:\n  adapter: redis\n"
  gitlab.yml.erb: "production: &base\n  gitlab:\n    host: gitlab.example.com\n  gitaly:\n\
    \    client_path: /home/git/gitaly/bin\n    token: <%= File.read('/etc/gitlab/gitaly/gitaly_token').strip.to_json\
    \ %>\n  repositories:\n    storages: # You must have at least a `default` storage\
    \ path.\n      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address:\
    \ tcp://release-name-gitaly-0.release-name-gitaly.default.svc:8075\n      \n \
    \ \n  sidekiq:\n    log_format: json\n  \n"
  configure: "# BEGIN gitlab.scripts.configure.secrets\nset -e\nconfig_dir=\"/init-config\"\
    \nsecret_dir=\"/init-secrets\"\n# required\nfor secret in rails-secrets migrations\
    \ gitaly ; do\n  mkdir -p \"${secret_dir}/${secret}\"\n  cp -f -v -r -L \"${config_dir}/${secret}/.\"\
    \ \"${secret_dir}/${secret}/\"\ndone\n# optional\nfor secret in redis minio objectstorage\
    \ postgres ldap duo omniauth smtp kas pages oauth-secrets mailroom gitlab-exporter\
    \ microsoft_graph_mailer suggested_reviewers ; do\n  if [ -e \"${config_dir}/${secret}\"\
    \ ]; then\n    mkdir -p \"${secret_dir}/${secret}\"\n    cp -f -v -r -L \"${config_dir}/${secret}/.\"\
    \ \"${secret_dir}/${secret}/\"\n  fi\ndone\n# END gitlab.scripts.configure.secrets\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sidekiq
  namespace: default
  labels:
    app: sidekiq
    chart: sidekiq-7.0.3
    release: release-name
    heritage: Helm
data:
  installation_type: 'gitlab-helm-chart

    '
  database.yml.erb: "\nproduction:\n  main:\n    adapter: postgresql\n    encoding:\
    \ unicode\n    database: gitlabhq_production\n    username: gitlab\n    password:\
    \ <%= File.read('/etc/gitlab/postgres/psql-password-main').strip.to_json %>\n\
    \    host: \"release-name-postgresql.default.svc\"\n    port: 5432\n    connect_timeout:\
    \ \n    keepalives: \n    keepalives_idle: \n    keepalives_interval: \n    keepalives_count:\
    \ \n    tcp_user_timeout: \n    application_name: \n    prepared_statements: false\n\
    \    database_tasks: true\n    \n    \n  ci:\n    adapter: postgresql\n    encoding:\
    \ unicode\n    database: gitlabhq_production\n    username: gitlab\n    password:\
    \ <%= File.read('/etc/gitlab/postgres/psql-password-ci').strip.to_json %>\n  \
    \  host: \"release-name-postgresql.default.svc\"\n    port: 5432\n    connect_timeout:\
    \ \n    keepalives: \n    keepalives_idle: \n    keepalives_interval: \n    keepalives_count:\
    \ \n    tcp_user_timeout: \n    application_name: \n    prepared_statements: false\n\
    \    database_tasks: false\n    \n    \n"
  krb5.conf: ''
  smtp_settings.rb: ''
  resque.yml.erb: "production:\n  url: redis://:<%= ERB::Util::url_encode(File.read(\"\
    /etc/gitlab/redis/redis-password\").strip) %>@release-name-redis-master.default.svc:6379\n\
    \  \n  id:\n"
  cable.yml.erb: "production:\n  url: redis://:<%= ERB::Util::url_encode(File.read(\"\
    /etc/gitlab/redis/redis-password\").strip) %>@release-name-redis-master.default.svc:6379\n\
    \  \n  id:\n  adapter: redis\n"
  gitlab.yml.erb: "production: &base\n  gitlab:\n    host: gitlab.example.com\n  \
    \  https: true\n    max_request_duration_seconds: 57\n    impersonation_enabled:\
    \ \n    application_settings_cache_seconds: 60\n    usage_ping_enabled: true\n\
    \    seat_link_enabled: true\n    username_changing_enabled: true\n    issue_closing_pattern:\
    \ \n    default_theme: \n    default_projects_features:\n      issues: true\n\
    \      merge_requests: true\n      wiki: true\n      snippets: true\n      builds:\
    \ true\n      container_registry: true\n    webhook_timeout: \n    trusted_proxies:\n\
    \    time_zone: \"UTC\"        \n    email_from: \"gitlab@example.com\"\n    email_display_name:\
    \ \"GitLab\"\n    email_reply_to: \"noreply@example.com\"\n    email_subject_suffix:\
    \ \"\"\n  \n  gravatar:\n    plain_url: \n    ssl_url: \n  extra:\n    \n    \n\
    \    \n    \n    \n    \n  artifacts:\n    enabled: true\n    object_store:\n\
    \      enabled: true\n      remote_directory: gitlab-artifacts\n      proxy_download:\
    \ true\n      connection:\n        provider: AWS\n        region: us-east-1\n\
    \        host: minio.example.com\n        endpoint: http://release-name-minio-svc.default.svc:9000\n\
    \        path_style: true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  lfs:\n    enabled: true\n    object_store:\n      enabled: true\n    \
    \  remote_directory: git-lfs\n      proxy_download: true\n      connection:\n\
    \        provider: AWS\n        region: us-east-1\n        host: minio.example.com\n\
    \        endpoint: http://release-name-minio-svc.default.svc:9000\n        path_style:\
    \ true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  uploads:\n    enabled: true\n    object_store:\n      enabled: true\n\
    \      remote_directory: gitlab-uploads\n      proxy_download: true\n      connection:\n\
    \        provider: AWS\n        region: us-east-1\n        host: minio.example.com\n\
    \        endpoint: http://release-name-minio-svc.default.svc:9000\n        path_style:\
    \ true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  packages:\n    enabled: true\n    object_store:\n      enabled: true\n\
    \      remote_directory: gitlab-packages\n      proxy_download: true\n      connection:\n\
    \        provider: AWS\n        region: us-east-1\n        host: minio.example.com\n\
    \        endpoint: http://release-name-minio-svc.default.svc:9000\n        path_style:\
    \ true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  external_diffs:\n    enabled: false\n    when: \n    object_store:\n \
    \     enabled: false\n      remote_directory: gitlab-mr-diffs\n      proxy_download:\
    \ true\n  terraform_state:\n    enabled: false\n    object_store:\n      enabled:\
    \ false\n      remote_directory: gitlab-terraform-state\n      proxy_download:\
    \ true\n  ci_secure_files:\n    enabled: false\n    object_store:\n      enabled:\
    \ false\n      remote_directory: gitlab-ci-secure-files\n      proxy_download:\
    \ true\n  dependency_proxy:\n    enabled: false\n    object_store:\n      enabled:\
    \ false\n      remote_directory: gitlab-dependency-proxy\n      proxy_download:\
    \ true\n  \n  sentry:\n    enabled: false\n    dsn: \n    clientside_dsn: \n \
    \   environment: \n  \n  sidekiq:\n    log_format: json\n  pages:\n    enabled:\
    \ false\n    access_control: false\n    artifacts_server: true\n    path: /srv/gitlab/shared/pages\n\
    \    host: pages.example.com\n    port: 443\n    https: true\n    secret_file:\
    \ /etc/gitlab/pages/secret\n    external_http: false\n    external_https: false\n\
    \    object_store:\n      enabled: true\n      remote_directory: gitlab-pages\n\
    \      connection:\n        provider: AWS\n        region: us-east-1\n       \
    \ host: minio.example.com\n        endpoint: http://release-name-minio-svc.default.svc:9000\n\
    \        path_style: true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n    local_store:\n      enabled: false\n      path: \n  mattermost:\n  \
    \  enabled: false\n  ## Registry Integration\n  registry:\n    enabled: true\n\
    \    host: registry.example.com\n    api_url: http://release-name-registry.default.svc:5000\n\
    \    key: /etc/gitlab/registry/gitlab-registry.key\n    issuer: gitlab-issuer\n\
    \    notification_secret: <%= YAML.load_file(\"/etc/gitlab/registry/notificationSecret\"\
    ).flatten.first %>\n  gitlab_ci:\n  ldap:\n    enabled: false\n  \n  omniauth:\n\
    \    enabled: false\n    sync_profile_from_provider: []\n    sync_profile_attributes:\
    \ [\"email\"]\n    allow_single_sign_on: [\"saml\"]\n    block_auto_created_users:\
    \ true\n    auto_link_ldap_user: false\n    auto_link_saml_user: false\n    external_providers:\
    \ []\n  kerberos:\n    enabled: false\n    keytab: /etc/krb5.keytab\n    use_dedicated_port:\
    \ false\n    port: 8443\n    https: true\n    simple_ldap_linking_allowed_realms:\
    \ []\n  \n  duo_auth:\n    enabled: false\n    hostname: \n    integration_key:\
    \ \n    secret_key: \n  \n  duo_auth:\n    enabled: false\n    hostname: \n  \
    \  integration_key: \n    secret_key: \n  shared:\n  gitaly:\n    client_path:\
    \ /home/git/gitaly/bin\n    token: <%= File.read('/etc/gitlab/gitaly/gitaly_token').strip.to_json\
    \ %>\n  repositories:\n    storages: # You must have at least a `default` storage\
    \ path.\n      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address:\
    \ tcp://release-name-gitaly-0.release-name-gitaly.default.svc:8075\n      \n \
    \ backup:\n    path: \"tmp/backups\"   # Relative paths are relative to Rails.root\
    \ (default: tmp/backups/)\n  gitlab_kas:\n    enabled: true\n    secret_file:\
    \ /etc/gitlab/kas/.gitlab_kas_secret\n    external_url: \"wss://kas.example.com\"\
    \n    internal_url: \"grpc://release-name-kas.default.svc:8153\"\n  suggested_reviewers:\n\
    \    secret_file: /etc/gitlab/suggested_reviewers/.gitlab_suggested_reviewers_secret\n\
    \  gitlab_shell:\n    path: /home/git/gitlab-shell/\n    hooks_path: /home/git/gitlab-shell/hooks/\n\
    \    upload_pack: true\n    receive_pack: true\n    ssh_port: 22\n  workhorse:\n\
    \  git:\n    bin_path: /usr/bin/git\n  webpack:\n  monitoring:\n    ip_whitelist:\n\
    \      - 127.0.0.0/8\n    sidekiq_exporter:\n      enabled: true\n      address:\
    \ 0.0.0.0\n      port: 3807\n      log_enabled: false\n    sidekiq_health_checks:\n\
    \      enabled: true\n      address: 0.0.0.0\n      port: 3808\n"
  configure: "# BEGIN gitlab.scripts.configure.secrets\nset -e\nconfig_dir=\"/init-config\"\
    \nsecret_dir=\"/init-secrets\"\n# required\nfor secret in gitaly registry rails-secrets\
    \ ; do\n  mkdir -p \"${secret_dir}/${secret}\"\n  cp -f -v -r -L \"${config_dir}/${secret}/.\"\
    \ \"${secret_dir}/${secret}/\"\ndone\n# optional\nfor secret in redis minio objectstorage\
    \ postgres ldap duo omniauth smtp kas pages oauth-secrets mailroom gitlab-exporter\
    \ microsoft_graph_mailer suggested_reviewers ; do\n  if [ -e \"${config_dir}/${secret}\"\
    \ ]; then\n    mkdir -p \"${secret_dir}/${secret}\"\n    cp -f -v -r -L \"${config_dir}/${secret}/.\"\
    \ \"${secret_dir}/${secret}/\"\n  fi\ndone\n# END gitlab.scripts.configure.secrets\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-toolbox
  namespace: default
  labels:
    app: toolbox
    chart: toolbox-7.0.3
    release: release-name
    heritage: Helm
data:
  database.yml.erb: "\nproduction:\n  main:\n    adapter: postgresql\n    encoding:\
    \ unicode\n    database: gitlabhq_production\n    username: gitlab\n    password:\
    \ <%= File.read('/etc/gitlab/postgres/psql-password-main').strip.to_json %>\n\
    \    host: \"release-name-postgresql.default.svc\"\n    port: 5432\n    connect_timeout:\
    \ \n    keepalives: \n    keepalives_idle: \n    keepalives_interval: \n    keepalives_count:\
    \ \n    tcp_user_timeout: \n    application_name: \n    prepared_statements: false\n\
    \    database_tasks: true\n    \n    \n  ci:\n    adapter: postgresql\n    encoding:\
    \ unicode\n    database: gitlabhq_production\n    username: gitlab\n    password:\
    \ <%= File.read('/etc/gitlab/postgres/psql-password-ci').strip.to_json %>\n  \
    \  host: \"release-name-postgresql.default.svc\"\n    port: 5432\n    connect_timeout:\
    \ \n    keepalives: \n    keepalives_idle: \n    keepalives_interval: \n    keepalives_count:\
    \ \n    tcp_user_timeout: \n    application_name: \n    prepared_statements: false\n\
    \    database_tasks: false\n    \n    \n"
  krb5.conf: ''
  smtp_settings.rb: ''
  resque.yml.erb: "production:\n  url: redis://:<%= ERB::Util::url_encode(File.read(\"\
    /etc/gitlab/redis/redis-password\").strip) %>@release-name-redis-master.default.svc:6379\n\
    \  \n  id:\n"
  cable.yml.erb: "production:\n  url: redis://:<%= ERB::Util::url_encode(File.read(\"\
    /etc/gitlab/redis/redis-password\").strip) %>@release-name-redis-master.default.svc:6379\n\
    \  \n  id:\n  adapter: redis\n"
  gitlab.yml.erb: "production: &base\n  gitlab:\n    host: gitlab.example.com\n  \
    \  https: true\n    max_request_duration_seconds: 57\n    impersonation_enabled:\
    \ \n    application_settings_cache_seconds: 60\n    usage_ping_enabled: true\n\
    \    seat_link_enabled: true\n    username_changing_enabled: true\n    issue_closing_pattern:\
    \ \n    default_theme: \n    default_projects_features:\n      issues: true\n\
    \      merge_requests: true\n      wiki: true\n      snippets: true\n      builds:\
    \ true\n      container_registry: true\n    webhook_timeout: \n    trusted_proxies:\n\
    \    time_zone: \"UTC\"        \n    email_from: \"gitlab@example.com\"\n    email_display_name:\
    \ \"GitLab\"\n    email_reply_to: \"noreply@example.com\"\n    email_subject_suffix:\
    \ \"\"\n  \n  artifacts:\n    enabled: true\n    object_store:\n      enabled:\
    \ true\n      remote_directory: gitlab-artifacts\n      proxy_download: true\n\
    \      connection:\n        provider: AWS\n        region: us-east-1\n       \
    \ host: minio.example.com\n        endpoint: http://release-name-minio-svc.default.svc:9000\n\
    \        path_style: true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  lfs:\n    enabled: true\n    object_store:\n      enabled: true\n    \
    \  remote_directory: git-lfs\n      proxy_download: true\n      connection:\n\
    \        provider: AWS\n        region: us-east-1\n        host: minio.example.com\n\
    \        endpoint: http://release-name-minio-svc.default.svc:9000\n        path_style:\
    \ true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  uploads:\n    enabled: true\n    object_store:\n      enabled: true\n\
    \      remote_directory: gitlab-uploads\n      proxy_download: true\n      connection:\n\
    \        provider: AWS\n        region: us-east-1\n        host: minio.example.com\n\
    \        endpoint: http://release-name-minio-svc.default.svc:9000\n        path_style:\
    \ true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  packages:\n    enabled: true\n    object_store:\n      enabled: true\n\
    \      remote_directory: gitlab-packages\n      proxy_download: true\n      connection:\n\
    \        provider: AWS\n        region: us-east-1\n        host: minio.example.com\n\
    \        endpoint: http://release-name-minio-svc.default.svc:9000\n        path_style:\
    \ true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  external_diffs:\n    enabled: false\n    when: \n    object_store:\n \
    \     enabled: false\n      remote_directory: gitlab-mr-diffs\n      proxy_download:\
    \ true\n  terraform_state:\n    enabled: false\n    object_store:\n      enabled:\
    \ false\n      remote_directory: gitlab-terraform-state\n      proxy_download:\
    \ true\n  ci_secure_files:\n    enabled: false\n    object_store:\n      enabled:\
    \ false\n      remote_directory: gitlab-ci-secure-files\n      proxy_download:\
    \ true\n  dependency_proxy:\n    enabled: false\n    object_store:\n      enabled:\
    \ false\n      remote_directory: gitlab-dependency-proxy\n      proxy_download:\
    \ true\n  \n  sidekiq:\n    log_format: json\n  \n  pages:\n    enabled: false\n\
    \    access_control: false\n    artifacts_server: true\n    path: /srv/gitlab/shared/pages\n\
    \    host: pages.example.com\n    port: 443\n    https: true\n    secret_file:\
    \ /etc/gitlab/pages/secret\n    external_http: false\n    external_https: false\n\
    \    object_store:\n      enabled: true\n      remote_directory: gitlab-pages\n\
    \      connection:\n        provider: AWS\n        region: us-east-1\n       \
    \ host: minio.example.com\n        endpoint: http://release-name-minio-svc.default.svc:9000\n\
    \        path_style: true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n    local_store:\n      enabled: false\n      path: \n  mattermost:\n  \
    \  enabled: false\n  ## Registry Integration\n  registry:\n    enabled: true\n\
    \    host: registry.example.com\n    api_url: http://release-name-registry.default.svc:5000\n\
    \    key: /etc/gitlab/registry/gitlab-registry.key\n    issuer: gitlab-issuer\n\
    \    notification_secret: <%= YAML.load_file(\"/etc/gitlab/registry/notificationSecret\"\
    ).flatten.first %>\n  gitlab_ci:\n  ldap:\n    enabled: false\n  \n  omniauth:\n\
    \    enabled: false\n    sync_profile_from_provider: []\n    sync_profile_attributes:\
    \ [\"email\"]\n    allow_single_sign_on: [\"saml\"]\n    block_auto_created_users:\
    \ true\n    auto_link_ldap_user: false\n    auto_link_saml_user: false\n    external_providers:\
    \ []\n  kerberos:\n    enabled: false\n    keytab: /etc/krb5.keytab\n    use_dedicated_port:\
    \ false\n    port: 8443\n    https: true\n    simple_ldap_linking_allowed_realms:\
    \ []\n  \n  duo_auth:\n    enabled: false\n    hostname: \n    integration_key:\
    \ \n    secret_key: \n  shared:\n  gitaly:\n    client_path: /home/git/gitaly/bin\n\
    \    token: <%= File.read('/etc/gitlab/gitaly/gitaly_token').strip.to_json %>\n\
    \  repositories:\n    storages: # You must have at least a `default` storage path.\n\
    \      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address: tcp://release-name-gitaly-0.release-name-gitaly.default.svc:8075\n\
    \      \n  backup:\n    path: \"tmp/backups\"   # Relative paths are relative\
    \ to Rails.root (default: tmp/backups/)\n  gitlab_kas:\n    enabled: true\n  \
    \  secret_file: /etc/gitlab/kas/.gitlab_kas_secret\n    external_url: \"wss://kas.example.com\"\
    \n    internal_url: \"grpc://release-name-kas.default.svc:8153\"\n  suggested_reviewers:\n\
    \    secret_file: /etc/gitlab/suggested_reviewers/.gitlab_suggested_reviewers_secret\n\
    \  gitlab_shell:\n    path: /home/git/gitlab-shell/\n    hooks_path: /home/git/gitlab-shell/hooks/\n\
    \    upload_pack: true\n    receive_pack: true\n    ssh_port: 22\n    secret_file:\
    \ /etc/gitlab/shell/.gitlab_shell_secret\n  workhorse:\n  git:\n    bin_path:\
    \ /usr/bin/git\n  webpack:\n  monitoring:\n    ip_whitelist:\n      - 127.0.0.0/8\n\
    \    sidekiq_exporter:\n  extra:\n"
  configure: "# BEGIN gitlab.scripts.configure.secrets\nset -e\nconfig_dir=\"/init-config\"\
    \nsecret_dir=\"/init-secrets\"\n# required\nfor secret in shell gitaly registry\
    \ rails-secrets ; do\n  mkdir -p \"${secret_dir}/${secret}\"\n  cp -f -v -r -L\
    \ \"${config_dir}/${secret}/.\" \"${secret_dir}/${secret}/\"\ndone\n# optional\n\
    for secret in redis minio objectstorage postgres ldap duo omniauth smtp kas pages\
    \ oauth-secrets mailroom gitlab-exporter microsoft_graph_mailer suggested_reviewers\
    \ ; do\n  if [ -e \"${config_dir}/${secret}\" ]; then\n    mkdir -p \"${secret_dir}/${secret}\"\
    \n    cp -f -v -r -L \"${config_dir}/${secret}/.\" \"${secret_dir}/${secret}/\"\
    \n  fi\ndone\n# END gitlab.scripts.configure.secrets\n\n\nif [ ! -f \"/${secret_dir}/objectstorage/.s3cfg\"\
    \ ]; then\ncat <<EOF > \"/${secret_dir}/.s3cfg\"\n[default]\naccess_key = $(cat\
    \ /init-secrets/minio/accesskey)\nsecret_key = $(cat /init-secrets/minio/secretkey)\n\
    bucket_location = us-east-1\nhost_base = minio.example.com\nhost_bucket = minio.example.com/%(bucket)\n\
    default_mime_type = binary/octet-stream\nenable_multipart = True\nmultipart_max_chunks\
    \ = 10000\nmultipart_chunk_size_mb = 128\nrecursive = True\nrecv_chunk = 65536\n\
    send_chunk = 65536\nserver_side_encryption = False\nsignature_v2 = True\nsocket_timeout\
    \ = 300\nuse_mime_magic = False\nverbosity = WARNING\nwebsite_endpoint = https://minio.example.com\n\
    EOF\nelse\n  mv \"/${secret_dir}/objectstorage/.s3cfg\" \"/${secret_dir}/.s3cfg\"\
    \nfi\n"
  configure-gsutil: '# The following script is used to configure gsutil when creating
    backups

    # It provides inputs to the `gsutil config -e` prompt as follows:

    # 1) Path to service account JSON key file

    # 2) Do not set permissions for key file

    # 3) GCP Project ID

    # 4) Decline anonymous usage statistics

    printf "$GOOGLE_APPLICATION_CREDENTIALS\nN\n\nN\n" | gsutil config -e

    '
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-webservice
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.0.3
    release: release-name
    heritage: Helm
data:
  installation_type: 'gitlab-helm-chart

    '
  database.yml.erb: "\nproduction:\n  main:\n    adapter: postgresql\n    encoding:\
    \ unicode\n    database: gitlabhq_production\n    username: gitlab\n    password:\
    \ <%= File.read('/etc/gitlab/postgres/psql-password-main').strip.to_json %>\n\
    \    host: \"release-name-postgresql.default.svc\"\n    port: 5432\n    connect_timeout:\
    \ \n    keepalives: \n    keepalives_idle: \n    keepalives_interval: \n    keepalives_count:\
    \ \n    tcp_user_timeout: \n    application_name: \n    prepared_statements: false\n\
    \    database_tasks: true\n    \n    \n  ci:\n    adapter: postgresql\n    encoding:\
    \ unicode\n    database: gitlabhq_production\n    username: gitlab\n    password:\
    \ <%= File.read('/etc/gitlab/postgres/psql-password-ci').strip.to_json %>\n  \
    \  host: \"release-name-postgresql.default.svc\"\n    port: 5432\n    connect_timeout:\
    \ \n    keepalives: \n    keepalives_idle: \n    keepalives_interval: \n    keepalives_count:\
    \ \n    tcp_user_timeout: \n    application_name: \n    prepared_statements: false\n\
    \    database_tasks: false\n    \n    \n"
  krb5.conf: ''
  smtp_settings.rb: ''
  resque.yml.erb: "production:\n  url: redis://:<%= ERB::Util::url_encode(File.read(\"\
    /etc/gitlab/redis/redis-password\").strip) %>@release-name-redis-master.default.svc:6379\n\
    \  \n  id:\n"
  cable.yml.erb: "production:\n  url: redis://:<%= ERB::Util::url_encode(File.read(\"\
    /etc/gitlab/redis/redis-password\").strip) %>@release-name-redis-master.default.svc:6379\n\
    \  \n  id:\n  adapter: redis\n"
  gitlab.yml.erb: "production: &base\n  gitlab:\n    host: gitlab.example.com\n  \
    \  https: true\n    max_request_duration_seconds: 57\n    impersonation_enabled:\
    \ \n    application_settings_cache_seconds: 60\n    usage_ping_enabled: true\n\
    \    seat_link_enabled: true\n    username_changing_enabled: true\n    issue_closing_pattern:\
    \ \n    default_theme: \n    default_projects_features:\n      issues: true\n\
    \      merge_requests: true\n      wiki: true\n      snippets: true\n      builds:\
    \ true\n      container_registry: true\n    webhook_timeout: \n    trusted_proxies:\n\
    \    time_zone: \"UTC\"        \n    email_from: \"gitlab@example.com\"\n    email_display_name:\
    \ \"GitLab\"\n    email_reply_to: \"noreply@example.com\"\n    email_subject_suffix:\
    \ \"\"\n  \n  gravatar:\n    plain_url: \n    ssl_url: \n  extra:\n    \n    \n\
    \    \n    \n    \n    \n  artifacts:\n    enabled: true\n    object_store:\n\
    \      enabled: true\n      remote_directory: gitlab-artifacts\n      proxy_download:\
    \ true\n      connection:\n        provider: AWS\n        region: us-east-1\n\
    \        host: minio.example.com\n        endpoint: http://release-name-minio-svc.default.svc:9000\n\
    \        path_style: true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  lfs:\n    enabled: true\n    object_store:\n      enabled: true\n    \
    \  remote_directory: git-lfs\n      proxy_download: true\n      connection:\n\
    \        provider: AWS\n        region: us-east-1\n        host: minio.example.com\n\
    \        endpoint: http://release-name-minio-svc.default.svc:9000\n        path_style:\
    \ true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  uploads:\n    enabled: true\n    object_store:\n      enabled: true\n\
    \      remote_directory: gitlab-uploads\n      proxy_download: true\n      connection:\n\
    \        provider: AWS\n        region: us-east-1\n        host: minio.example.com\n\
    \        endpoint: http://release-name-minio-svc.default.svc:9000\n        path_style:\
    \ true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  packages:\n    enabled: true\n    object_store:\n      enabled: true\n\
    \      remote_directory: gitlab-packages\n      proxy_download: true\n      connection:\n\
    \        provider: AWS\n        region: us-east-1\n        host: minio.example.com\n\
    \        endpoint: http://release-name-minio-svc.default.svc:9000\n        path_style:\
    \ true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n  external_diffs:\n    enabled: false\n    when: \n    object_store:\n \
    \     enabled: false\n      remote_directory: gitlab-mr-diffs\n      proxy_download:\
    \ true\n  terraform_state:\n    enabled: false\n    object_store:\n      enabled:\
    \ false\n      remote_directory: gitlab-terraform-state\n      proxy_download:\
    \ true\n  ci_secure_files:\n    enabled: false\n    object_store:\n      enabled:\
    \ false\n      remote_directory: gitlab-ci-secure-files\n      proxy_download:\
    \ true\n  dependency_proxy:\n    enabled: false\n    object_store:\n      enabled:\
    \ false\n      remote_directory: gitlab-dependency-proxy\n      proxy_download:\
    \ true\n  \n  sentry:\n    enabled: false\n    dsn: \n    clientside_dsn: \n \
    \   environment: \n  gitlab_docs:\n    enabled: false\n    host: \"\"\n  \n  sidekiq:\n\
    \    log_format: json\n  pages:\n    enabled: false\n    access_control: false\n\
    \    artifacts_server: true\n    path: /srv/gitlab/shared/pages\n    host: pages.example.com\n\
    \    port: 443\n    https: true\n    secret_file: /etc/gitlab/pages/secret\n \
    \   external_http: false\n    external_https: false\n    object_store:\n     \
    \ enabled: true\n      remote_directory: gitlab-pages\n      connection:\n   \
    \     provider: AWS\n        region: us-east-1\n        host: minio.example.com\n\
    \        endpoint: http://release-name-minio-svc.default.svc:9000\n        path_style:\
    \ true\n        aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json\
    \ %>\n        aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json\
    \ %>\n    local_store:\n      enabled: false\n      path: \n  mattermost:\n  \
    \  enabled: false\n  gitlab_ci:\n  ldap:\n    enabled: false\n  \n  omniauth:\n\
    \    enabled: false\n    sync_profile_from_provider: []\n    sync_profile_attributes:\
    \ [\"email\"]\n    allow_single_sign_on: [\"saml\"]\n    block_auto_created_users:\
    \ true\n    auto_link_ldap_user: false\n    auto_link_saml_user: false\n    external_providers:\
    \ []\n  kerberos:\n    enabled: false\n    keytab: /etc/krb5.keytab\n    use_dedicated_port:\
    \ false\n    port: 8443\n    https: true\n    simple_ldap_linking_allowed_realms:\
    \ []\n  \n  duo_auth:\n    enabled: false\n    hostname: \n    integration_key:\
    \ \n    secret_key: \n  shared:\n  gitaly:\n    client_path: /home/git/gitaly/bin\n\
    \    token: <%= File.read('/etc/gitlab/gitaly/gitaly_token').strip.to_json %>\n\
    \  repositories:\n    storages: # You must have at least a `default` storage path.\n\
    \      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address: tcp://release-name-gitaly-0.release-name-gitaly.default.svc:8075\n\
    \      \n  backup:\n    path: \"tmp/backups\"   # Relative paths are relative\
    \ to Rails.root (default: tmp/backups/)\n  gitlab_kas:\n    enabled: true\n  \
    \  secret_file: /etc/gitlab/kas/.gitlab_kas_secret\n    external_url: \"wss://kas.example.com\"\
    \n    internal_url: \"grpc://release-name-kas.default.svc:8153\"\n  suggested_reviewers:\n\
    \    secret_file: /etc/gitlab/suggested_reviewers/.gitlab_suggested_reviewers_secret\n\
    \  gitlab_shell:\n    path: /home/git/gitlab-shell/\n    hooks_path: /home/git/gitlab-shell/hooks/\n\
    \    upload_pack: true\n    receive_pack: true\n    ssh_port: 22\n    secret_file:\
    \ /etc/gitlab/shell/.gitlab_shell_secret\n  workhorse:\n    secret_file: /etc/gitlab/gitlab-workhorse/secret\n\
    \  git:\n    bin_path: /usr/bin/git\n  webpack:\n  monitoring:\n    ip_whitelist:\n\
    \      - 0.0.0.0/0\n    web_exporter:\n      enabled: true\n      address: 0.0.0.0\n\
    \      port: 8083\n    sidekiq_exporter:\n  shutdown:\n    blackout_seconds: <%=\
    \ ENV[\"SHUTDOWN_BLACKOUT_SECONDS\"] %>\n  rack_attack:\n    git_basic_auth:\n\
    \  ## Registry Integration\n  registry:\n    enabled: true\n    host: registry.example.com\n\
    \    api_url: http://release-name-registry.default.svc:5000\n    key: /etc/gitlab/registry/gitlab-registry.key\n\
    \    issuer: gitlab-issuer\n    notification_secret: <%= YAML.load_file(\"/etc/gitlab/registry/notificationSecret\"\
    ).flatten.first %>\n  smartcard:\n    enabled: false\n    ca_file: '/etc/gitlab/rails-secrets/smartcard-ca.crt'\n\
    \    client_certificate_required_host: smartcard.example.com\n    client_certificate_required_port:\
    \ 443\n    san_extensions: false\n    required_for_git_access: false\n"
  configure: "# BEGIN gitlab.scripts.configure.secrets\nset -e\nconfig_dir=\"/init-config\"\
    \nsecret_dir=\"/init-secrets\"\n# required\nfor secret in shell gitaly registry\
    \ rails-secrets gitlab-workhorse ; do\n  mkdir -p \"${secret_dir}/${secret}\"\n\
    \  cp -f -v -r -L \"${config_dir}/${secret}/.\" \"${secret_dir}/${secret}/\"\n\
    done\n# optional\nfor secret in redis minio objectstorage postgres ldap duo omniauth\
    \ smtp kas pages oauth-secrets mailroom gitlab-exporter microsoft_graph_mailer\
    \ suggested_reviewers ; do\n  if [ -e \"${config_dir}/${secret}\" ]; then\n  \
    \  mkdir -p \"${secret_dir}/${secret}\"\n    cp -f -v -r -L \"${config_dir}/${secret}/.\"\
    \ \"${secret_dir}/${secret}/\"\n  fi\ndone\n# END gitlab.scripts.configure.secrets\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-workhorse-default
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.0.3
    release: release-name
    heritage: Helm
data:
  installation_type: 'gitlab-helm-chart

    '
  workhorse-config.toml.tpl: "shutdown_timeout = \"61s\"\n[redis]\nURL = \"redis://release-name-redis-master.default.svc:6379\"\
    \nPassword = {% file.Read \"/etc/gitlab/redis/redis-password\" | strings.TrimSpace\
    \ | data.ToJSON %}\n{%- $supported_providers := slice \"AWS\" \"AzureRM\" \"Google\"\
    \ -%}\n{%- $connection := coll.Dict \"provider\" \"\" -%}\n{%- if file.Exists\
    \ \"/etc/gitlab/minio/accesskey\" %}\n  {%- $aws_access_key_id := file.Read \"\
    /etc/gitlab/minio/accesskey\" | strings.TrimSpace -%}\n  {%- $aws_secret_access_key\
    \ := file.Read \"/etc/gitlab/minio/secretkey\" | strings.TrimSpace -%}\n  {%-\
    \ $connection = coll.Dict \"provider\" \"AWS\" \"aws_access_key_id\" $aws_access_key_id\
    \ \"aws_secret_access_key\" $aws_secret_access_key -%}\n{%- end %}\n{%- if file.Exists\
    \ \"/etc/gitlab/objectstorage/object_store\" %}\n  {%- $connection = file.Read\
    \ \"/etc/gitlab/objectstorage/object_store\" | strings.TrimSpace | data.YAML -%}\n\
    {%- end %}\n{%- if has $supported_providers $connection.provider %}\n[object_storage]\n\
    provider = \"{% $connection.provider %}\"\n{%-   if eq $connection.provider \"\
    AWS\" %}\n{%-     $connection = coll.Merge $connection (coll.Dict \"aws_access_key_id\"\
    \ \"\" \"aws_secret_access_key\" \"\" ) %}\n# AWS / S3 object storage configuration.\n\
    [object_storage.s3]\n# access/secret can be blank!\naws_access_key_id = {% $connection.aws_access_key_id\
    \ | strings.TrimSpace | data.ToJSON %}\naws_secret_access_key = {% $connection.aws_secret_access_key\
    \ | strings.TrimSpace | data.ToJSON %}\n{%-   else if eq $connection.provider\
    \ \"AzureRM\" %}\n{%- $connection = coll.Merge $connection (coll.Dict \"azure_storage_account_name\"\
    \ \"\" \"azure_storage_account_name\" \"\" ) %}\n# Azure Blob storage configuration.\n\
    [object_storage.azurerm]\nazure_storage_account_name = {% $connection.azure_storage_account_name\
    \ | strings.TrimSpace | data.ToJSON %}\nazure_storage_access_key = {% $connection.azure_storage_access_key\
    \ | strings.TrimSpace | data.ToJSON %}\n{%-   else if eq $connection.provider\
    \ \"Google\" %}\n# Google storage configuration.\n[object_storage.google]\n{%\
    \ $connection | coll.Omit \"provider\" | data.ToTOML %}\n{%-   end %}\n{%- end\
    \ %}\n[image_resizer]\nmax_scaler_procs = 2\nmax_filesize = 250000\n[[listeners]]\n\
    network = \"tcp\"\naddr = \"0.0.0.0:8181\"\n"
  configure: "set -e\nmkdir -p /init-secrets-workhorse/gitlab-workhorse\ncp -v -r\
    \ -L /init-config/gitlab-workhorse/secret /init-secrets-workhorse/gitlab-workhorse/secret\n\
    mkdir -p /init-secrets-workhorse/redis\ncp -v -r -L /init-config/redis/redis-password\
    \ /init-secrets-workhorse/redis/\nif [ -d /init-config/minio ]; then\n  mkdir\
    \ -p /init-secrets-workhorse/minio\n  cp -v -r -L /init-config/minio/* /init-secrets-workhorse/minio/\n\
    fi\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-webservice-tests
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.0.3
    release: release-name
    heritage: Helm
data:
  test_login: "set -e\necho 'Start Test'\nendpoint=\"https://gitlab.example.com\"\n\
    cookie_read=\"-c /tmp/test_login.cookie\"\ncookie_readwrite=\"$cookie_read -b\
    \ /tmp/test_login.cookie\"\n\nsignin_url=\"$endpoint/users/sign_in\"\necho \"\
    Login to create a session: $signin_url\"\ncsrf=$(curl -L $signin_url --fail -s\
    \ $cookie_read | grep -Po '<meta.*name=\"csrf-token\".*content=\"\\K[a-zA-Z0-9\\\
    +=\\-\\/]*')\ncurl -X POST $signin_url -s $cookie_readwrite -F \"authenticity_token=$csrf\"\
    \ -F 'user[login]=root' -F \"user[password]=$(cat /initial_root_password)\"\n\n\
    profile_url=\"$endpoint/-/profile\"\necho \"Confirm session valid: $profile_url\"\
    \nprofile_status=$(curl -L -s -o /tmp/profile_output -w \"%{http_code}\" $cookie_readwrite\
    \ $profile_url)\n\nif [ \"$profile_status\" != \"200\" ]; then\n  echo \"Error:\
    \ Session Invalid\"\n  cat /tmp/profile_output\n  exit 1\nfi\n\necho 'Test Passed'\n\
    exit 0\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-minio-config-cm
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: release-name
    heritage: Helm
data:
  initialize: "#!/bin/sh\n# minio/mc container has Busybox Ash, be sure to be POSIX\
    \ compliant and avoid Bash-isms\nset -e ; # Have script exit in the event of a\
    \ failed command.\n\n# connectToMinio\n# Use a check-sleep-check loop to wait\
    \ for Minio service to be available\nconnectToMinio() {\n  set -e ; # fail if\
    \ we can't read the keys.\n  ACCESS=$(cat /config/accesskey) ; SECRET=$(cat /config/secretkey)\
    \ ;\n  set +e ; # The connections to minio are allowed to fail.\n  echo \"Connecting\
    \ to Minio server: http://$MINIO_ENDPOINT:$MINIO_PORT\" ;\n  MC_COMMAND=\"mc config\
    \ host add myminio http://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET\" ;\n  $MC_COMMAND\
    \ ;\n  STATUS=$? ;\n  until [ $STATUS -eq 0 ] ;\n  do\n    sleep 1 ; # 1 second\
    \ intervals between attempts\n    $MC_COMMAND ;\n    STATUS=$? ;\n  done ;\n \
    \ set -e ; # reset `e` as active\n  return 0\n}\n\n# checkBucketExists ($bucket)\n\
    # Check if the bucket exists, by using the exit code of `mc ls`\ncheckBucketExists()\
    \ {\n  BUCKET=$1\n  CMD=$(/usr/bin/mc ls myminio/$BUCKET > /dev/null 2>&1)\n \
    \ return $?\n}\n\n# createBucket ($bucket, $policy, $purge)\n# Ensure bucket exists,\
    \ purging if asked to\ncreateBucket() {\n  BUCKET=$1\n  POLICY=$2\n  PURGE=$3\n\
    \n\n  # Purge the bucket, if set & exists\n  # Since PURGE is user input, check\
    \ explicitly for `true`\n  if [ $PURGE = true ]; then\n    if checkBucketExists\
    \ $BUCKET ; then\n      echo \"Purging bucket '$BUCKET'.\"\n      set +e ; # don't\
    \ exit if this fails\n      /usr/bin/mc rm -r --force myminio/$BUCKET\n      set\
    \ -e ; # reset `e` as active\n    else\n      echo \"Bucket '$BUCKET' does not\
    \ exist, skipping purge.\"\n    fi\n  fi\n\n  # Create the bucket if it does not\
    \ exist\n  if ! checkBucketExists $BUCKET ; then\n    echo \"Creating bucket '$BUCKET'\"\
    \n    /usr/bin/mc mb myminio/$BUCKET\n  else\n    echo \"Bucket '$BUCKET' already\
    \ exists.\"\n  fi\n\n  # At this point, the bucket should exist, skip checking\
    \ for existance\n  # Set policy on the bucket\n  echo \"Setting policy of bucket\
    \ '$BUCKET' to '$POLICY'.\"\n  /usr/bin/mc policy $POLICY myminio/$BUCKET\n}\n\
    \nconnectToMinio\ncreateBucket registry none false\ncreateBucket git-lfs none\
    \ false\ncreateBucket runner-cache none false\ncreateBucket gitlab-uploads none\
    \ false\ncreateBucket gitlab-artifacts none false\ncreateBucket gitlab-backups\
    \ none false\ncreateBucket gitlab-packages none false\ncreateBucket tmp none false\n\
    createBucket gitlab-mr-diffs none false\ncreateBucket gitlab-terraform-state none\
    \ false\ncreateBucket gitlab-ci-secure-files none false\ncreateBucket gitlab-dependency-proxy\
    \ none false\ncreateBucket gitlab-pages none false"
  configure: sed -e 's@ACCESS_KEY@'"$(cat /config/accesskey)"'@' -e 's@SECRET_KEY@'"$(cat
    /config/secretkey)"'@' /config/config.json > /minio/config.json
  config.json: "{\n  \"version\": \"20\",\n  \"credential\": {\n    \"accessKey\"\
    : \"ACCESS_KEY\",\n    \"secretKey\": \"SECRET_KEY\"\n  },\n  \"region\": \"us-east-1\"\
    ,\n  \"browser\": \"on\",\n  \"domain\": \"\",\n  \"logger\": {\n    \"console\"\
    : {\n      \"enable\": true\n    },\n    \"file\": {\n      \"enable\": false,\n\
    \      \"fileName\": \"\"\n    }\n  },\n  \"notify\": {\n    \"amqp\": {\n   \
    \   \"1\": {\n        \"enable\": false,\n        \"url\": \"\",\n        \"exchange\"\
    : \"\",\n        \"routingKey\": \"\",\n        \"exchangeType\": \"\",\n    \
    \    \"deliveryMode\": 0,\n        \"mandatory\": false,\n        \"immediate\"\
    : false,\n        \"durable\": false,\n        \"internal\": false,\n        \"\
    noWait\": false,\n        \"autoDeleted\": false\n      }\n    },\n    \"nats\"\
    : {\n      \"1\": {\n        \"enable\": false,\n        \"address\": \"\",\n\
    \        \"subject\": \"\",\n        \"username\": \"\",\n        \"password\"\
    : \"\",\n        \"token\": \"\",\n        \"secure\": false,\n        \"pingInterval\"\
    : 0,\n        \"streaming\": {\n          \"enable\": false,\n          \"clusterID\"\
    : \"\",\n          \"clientID\": \"\",\n          \"async\": false,\n        \
    \  \"maxPubAcksInflight\": 0\n        }\n      }\n    },\n    \"elasticsearch\"\
    : {\n      \"1\": {\n        \"enable\": false,\n        \"format\": \"namespace\"\
    ,\n        \"url\": \"\",\n        \"index\": \"\"\n      }\n    },\n    \"redis\"\
    : {\n      \"1\": {\n        \"enable\": false,\n        \"format\": \"namespace\"\
    ,\n        \"address\": \"\",\n        \"password\": \"\",\n        \"key\": \"\
    \"\n      }\n    },\n    \"postgresql\": {\n      \"1\": {\n        \"enable\"\
    : false,\n        \"format\": \"namespace\",\n        \"connectionString\": \"\
    \",\n        \"table\": \"\",\n        \"host\": \"\",\n        \"port\": \"\"\
    ,\n        \"user\": \"\",\n        \"password\": \"\",\n        \"database\"\
    : \"\"\n      }\n    },\n    \"kafka\": {\n      \"1\": {\n        \"enable\"\
    : false,\n        \"brokers\": null,\n        \"topic\": \"\"\n      }\n    },\n\
    \    \"webhook\": {\n      \"1\": {\n        \"enable\": false,\n        \"endpoint\"\
    : \"\"\n      }\n    },\n    \"mysql\": {\n      \"1\": {\n        \"enable\"\
    : false,\n        \"format\": \"namespace\",\n        \"dsnString\": \"\",\n \
    \       \"table\": \"\",\n        \"host\": \"\",\n        \"port\": \"\",\n \
    \       \"user\": \"\",\n        \"password\": \"\",\n        \"database\": \"\
    \"\n      }\n    },\n    \"mqtt\": {\n      \"1\": {\n        \"enable\": false,\n\
    \        \"broker\": \"\",\n        \"topic\": \"\",\n        \"qos\": 0,\n  \
    \      \"clientId\": \"\",\n        \"username\": \"\",\n        \"password\"\
    : \"\"\n      }\n    }\n  }\n}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-nginx-ingress-custom-add-headers
  namespace: default
data:
  Referrer-Policy: strict-origin-when-cross-origin
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-nginx-ingress-controller
  namespace: default
data:
  allow-snippet-annotations: 'true'
  add-headers: default/release-name-nginx-ingress-custom-add-headers
  annotation-value-word-blocklist: load_module,lua_package,_by_lua,location,root,proxy_pass,serviceaccount,{,},',"
  hsts: 'true'
  hsts-include-subdomains: 'false'
  hsts-max-age: '63072000'
  server-name-hash-bucket-size: '256'
  server-tokens: 'false'
  ssl-ciphers: ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4
  ssl-protocols: TLSv1.3 TLSv1.2
  upstream-keepalive-connections: '100'
  upstream-keepalive-requests: '1000'
  upstream-keepalive-time: 30s
  upstream-keepalive-timeout: '5'
  use-http2: 'true'
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.18.0
    heritage: Helm
  name: release-name-prometheus-server
  namespace: default
data:
  allow-snippet-annotations: 'false'
  alerting_rules.yml: '{}

    '
  alerts: '{}

    '
  prometheus.yml: "global:\n  evaluation_interval: 1m\n  scrape_interval: 1m\n  scrape_timeout:\
    \ 10s\nrule_files:\n- /etc/config/recording_rules.yml\n- /etc/config/alerting_rules.yml\n\
    - /etc/config/rules\n- /etc/config/alerts\nscrape_configs:\n- job_name: prometheus\n\
    \  static_configs:\n  - targets:\n    - localhost:9090\n- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
    \  job_name: kubernetes-apiservers\n  kubernetes_sd_configs:\n  - role: endpoints\n\
    \  relabel_configs:\n  - action: keep\n    regex: default;kubernetes;https\n \
    \   source_labels:\n    - __meta_kubernetes_namespace\n    - __meta_kubernetes_service_name\n\
    \    - __meta_kubernetes_endpoint_port_name\n  scheme: https\n  tls_config:\n\
    \    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify:\
    \ true\n- job_name: kubernetes-pods\n  kubernetes_sd_configs:\n  - role: pod\n\
    \  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n \
    \   - __meta_kubernetes_pod_annotation_gitlab_com_prometheus_scrape\n  - action:\
    \ replace\n    regex: (https?)\n    source_labels:\n    - __meta_kubernetes_pod_annotation_gitlab_com_prometheus_scheme\n\
    \    target_label: __scheme__\n  - action: replace\n    regex: (.+)\n    source_labels:\n\
    \    - __meta_kubernetes_pod_annotation_gitlab_com_prometheus_path\n    target_label:\
    \ __metrics_path__\n  - action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n\
    \    replacement: $1:$2\n    source_labels:\n    - __address__\n    - __meta_kubernetes_pod_annotation_gitlab_com_prometheus_port\n\
    \    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n\
    \  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n\
    \    target_label: kubernetes_namespace\n  - action: replace\n    source_labels:\n\
    \    - __meta_kubernetes_pod_name\n    target_label: kubernetes_pod_name\n- job_name:\
    \ kubernetes-service-endpoints\n  kubernetes_sd_configs:\n  - role: endpoints\n\
    \  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n \
    \   - __meta_kubernetes_service_annotation_gitlab_com_prometheus_scrape\n  - action:\
    \ replace\n    regex: (https?)\n    source_labels:\n    - __meta_kubernetes_service_annotation_gitlab_com_prometheus_scheme\n\
    \    target_label: __scheme__\n  - action: replace\n    regex: (.+)\n    source_labels:\n\
    \    - __meta_kubernetes_service_annotation_gitlab_com_prometheus_path\n    target_label:\
    \ __metrics_path__\n  - action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n\
    \    replacement: $1:$2\n    source_labels:\n    - __address__\n    - __meta_kubernetes_service_annotation_gitlab_com_prometheus_port\n\
    \    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n\
    \  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n\
    \    target_label: kubernetes_namespace\n  - action: replace\n    source_labels:\n\
    \    - __meta_kubernetes_service_name\n    target_label: kubernetes_name\n  -\
    \ action: replace\n    source_labels:\n    - __meta_kubernetes_pod_node_name\n\
    \    target_label: kubernetes_node\n- job_name: kubernetes-services\n  kubernetes_sd_configs:\n\
    \  - role: service\n  metrics_path: /probe\n  params:\n    module:\n    - http_2xx\n\
    \  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n \
    \   - __meta_kubernetes_service_annotation_gitlab_com_prometheus_probe\n  - source_labels:\n\
    \    - __address__\n    target_label: __param_target\n  - replacement: blackbox\n\
    \    target_label: __address__\n  - source_labels:\n    - __param_target\n   \
    \ target_label: instance\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n\
    \  - source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n\
    \  - source_labels:\n    - __meta_kubernetes_service_name\n    target_label: kubernetes_name\n"
  recording_rules.yml: '{}

    '
  rules: '{}

    '
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-redis-configuration
  namespace: default
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  redis.conf: '# User-supplied common configuration:

    # Enable AOF https://redis.io/topics/persistence#append-only-file

    appendonly yes

    # Disable RDB persistence, AOF persistence already enabled.

    save ""

    # End of common configuration'
  master.conf: 'dir /data

    # User-supplied master configuration:

    rename-command FLUSHDB ""

    rename-command FLUSHALL ""

    # End of master configuration'
  replica.conf: 'dir /data

    # User-supplied replica configuration:

    rename-command FLUSHDB ""

    rename-command FLUSHALL ""

    # End of replica configuration'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-redis-health
  namespace: default
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  ping_readiness_local.sh: "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export\
    \ REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_PASSWORD\"\
    \ ]] && export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3\
    \ $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n\
    )\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nif [ \"\
    $response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi"
  ping_liveness_local.sh: "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export\
    \ REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_PASSWORD\"\
    \ ]] && export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3\
    \ $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n\
    )\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nresponseFirstWord=$(echo\
    \ $response | head -n1 | awk '{print $1;}')\nif [ \"$response\" != \"PONG\" ]\
    \ && [ \"$responseFirstWord\" != \"LOADING\" ] && [ \"$responseFirstWord\" !=\
    \ \"MASTERDOWN\" ]; then\n  echo \"$response\"\n  exit 1\nfi"
  ping_readiness_master.sh: "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] &&\
    \ export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\n[[\
    \ -n \"$REDIS_MASTER_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\
    \nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST\
    \ \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$?\" -eq \"124\"\
    \ ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nif [ \"$response\" != \"PONG\"\
    \ ]; then\n  echo \"$response\"\n  exit 1\nfi"
  ping_liveness_master.sh: "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] &&\
    \ export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\n[[\
    \ -n \"$REDIS_MASTER_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\
    \nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST\
    \ \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$?\" -eq \"124\"\
    \ ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nresponseFirstWord=$(echo $response\
    \ | head -n1 | awk '{print $1;}')\nif [ \"$response\" != \"PONG\" ] && [ \"$responseFirstWord\"\
    \ != \"LOADING\" ]; then\n  echo \"$response\"\n  exit 1\nfi"
  ping_readiness_local_and_master.sh: 'script_dir="$(dirname "$0")"

    exit_status=0

    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?

    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?

    exit $exit_status'
  ping_liveness_local_and_master.sh: 'script_dir="$(dirname "$0")"

    exit_status=0

    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?

    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?

    exit $exit_status'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-redis-scripts
  namespace: default
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  start-master.sh: "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"\
    $(< \"${REDIS_PASSWORD_FILE}\")\"\nif [[ ! -f /opt/bitnami/redis/etc/master.conf\
    \ ]];then\n    cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\n\
    fi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/redis.conf\
    \ /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\n\
    ARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\"\
    )\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\"\
    \ \"/opt/bitnami/redis/etc/master.conf\")\nexec redis-server \"${ARGS[@]}\"\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-registry
  namespace: default
  labels:
    app: registry
    chart: registry-0.7.0
    release: release-name
    heritage: Helm
data:
  configure: "if [ -e /config/accesskey ] ; then\n  sed -e 's@ACCESS_KEY@'\"$(cat\
    \ /config/accesskey)\"'@' -e 's@SECRET_KEY@'\"$(cat /config/secretkey)\"'@' /config/config.yml\
    \ > /registry/config.yml\nelse\n  cp -v -r -L /config/config.yml  /registry/config.yml\n\
    fi\n# Place the `http.secret` value from the kubernetes secret\nsed -i -e 's@HTTP_SECRET@'\"\
    $(cat /config/httpSecret)\"'@' /registry/config.yml\n# Populate sensitive registry\
    \ notification secrets in the config file\nif [ -d /config/notifications ]; then\n\
    \  for i in /config/notifications/*; do\n    filename=$(basename $i);\n    sed\
    \ -i -e 's@'\"${filename}\"'@'\"$(cat $i)\"'@' /registry/config.yml;\n  done\n\
    fi\n# Insert any provided `storage` block from kubernetes secret\nif [ -d /config/storage\
    \ ]; then\n  # Copy contents of storage secret(s)\n  mkdir -p /registry/storage\n\
    \  cp -v -r -L /config/storage/* /registry/storage/\n  # Ensure there is a new\
    \ line in the end\n  echo '' >> /registry/storage/config\n  # Default `delete.enabled:\
    \ true` if not present.\n  ## Note: busybox grep doesn't support multiline, so\
    \ we chain `egrep`.\n  if ! $(egrep -A1 '^delete:\\s*$' /registry/storage/config\
    \ | egrep -q '\\s{2,4}enabled:') ; then\n    echo 'delete:' >> /registry/storage/config\n\
    \    echo '  enabled: true' >> /registry/storage/config\n  fi\n  # Indent /registry/storage/config\
    \ 2 spaces before inserting into config.yml\n  sed -i 's/^/  /' /registry/storage/config\n\
    \  # Insert into /registry/config.yml after `storage:`\n  sed -i '/^storage:/\
    \ r /registry/storage/config' /registry/config.yml\n  # Remove the now extraneous\
    \ `config` file\n  rm /registry/storage/config\nfi\n# Copy any middleware.storage\
    \ if present\nif [ -d /config/middleware.storage ]; then\n  cp -v -r -L /config/middleware.storage\
    \  /registry/middleware.storage\nfi\n# Set to known path, to used ConfigMap\n\
    cat /config/certificate.crt > /registry/certificate.crt\n# Copy the optional profiling\
    \ keyfile to the expected location\nif [ -f /config/profiling-key.json ]; then\n\
    \  cp /config/profiling-key.json /registry/profiling-key.json\nfi\n# Insert Database\
    \ password, if enabled\nif [ -f /config/database_password ] ; then\n  sed -i -e\
    \ 's@DB_PASSWORD_FILE@'\"$(cat /config/database_password)\"'@' /registry/config.yml\n\
    fi\n# Insert Redis password, if enabled\nif [ -f /config/registry/redis-password\
    \ ] ; then\n  sed -i -e 's@REDIS_CACHE_PASSWORD@'\"$(cat /config/registry/redis-password)\"\
    '@' /registry/config.yml\nfi\n# Insert import notification secret, if migration\
    \ is enabled\nif [ -f /config/registry/notificationSecret ] ; then\n  sed -i -e\
    \ 's@NOTIFICATION_SECRET@'\"$(cat /config/registry/notificationSecret | tr -d\
    \ '[]\"')\"'@' /registry/config.yml\nfi\n# Copy the database TLS connection files\
    \ to the expected location and set permissions\nif [ -d /config/ssl ]; then\n\
    \  cp -r /config/ssl/ /registry/ssl\n  chmod 700 /registry/ssl\n  chmod 600 /registry/ssl/*.pem\n\
    fi\n# Copy TLS certificates if present\nif [ -d /config/tls ]; then\n  cp -r /config/tls/\
    \ /registry/tls\n  chmod 700 /registry/tls\n  chmod 600 /registry/tls/*\nfi"
  config.yml: "version: 0.1\nlog:\n  fields:\n    service: registry\n  level: info\n\
    http:\n  addr: :5000\n  # `host` is not configurable\n  # `prefix` is not configurable\n\
    \  debug:\n    addr: :5001\n    prometheus:\n      enabled: false\n      path:\
    \ /metrics\n  draintimeout: 0\n  headers:\n    X-Content-Type-Options: [nosniff]\n\
    \  secret: \"HTTP_SECRET\"\n  relativeurls: false\nhealth:\n  storagedriver:\n\
    \    enabled: false\n    interval: 10s\n    threshold: 3\nauth:\n  token:\n  \
    \  realm: https://gitlab.example.com/jwt/auth\n    service: container_registry\n\
    \    issuer: gitlab-issuer\n    # This is provided from the initContainer execution,\
    \ at a known path.\n    rootcertbundle: /etc/docker/registry/certificate.crt\n\
    \    autoredirect: false\nvalidation:\n  disabled: true\n  manifests:\n    referencelimit:\
    \ 0\n    payloadsizelimit: 0\n    urls:\n      allow:\n      deny:\n\nnotifications:\n\
    reporting:\nprofiling:\nstorage:\n  maintenance:\n    readonly:\n      enabled:\
    \ false\n    uploadpurging:\n      enabled: true\n      age: 168h\n      interval:\
    \ 24h\n      dryrun: false\n  s3:\n    accesskey: \"ACCESS_KEY\"\n    secretkey:\
    \ \"SECRET_KEY\"\n    region: us-east-1\n    regionendpoint: http://release-name-minio-svc.default.svc:9000\n\
    \    bucket: registry\n    secure: true\n    v4auth: true\n    rootdirectory:\
    \ /\n  cache:\n    blobdescriptor: 'inmemory'\n  delete:\n    enabled: true\n\
    \  redirect:\n    disable: true\nmiddleware:\n\ngc:\n  disabled: true\nmigration:\n\
    \  enabled: false\nredis:\n  cache:\n    enabled: false\n    addr: \"release-name-redis-master.default.svc:6379\"\
    \n"
  migrations-config.yml: "version: 0.1\nlog:\n  fields:\n    service: registry\n \
    \ level: info\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-gitlab-chart-info
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.0.3
    release: release-name
    heritage: Helm
data:
  gitlabVersion: 16.0.3
  gitlabChartVersion: 7.0.3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-postgresql-init-db
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.0.3
    release: release-name
    heritage: Helm
data:
  init_revision.sh: "if [[ ! -f \"$POSTGRESQL_VOLUME_DIR/.gitlab_1_scripts_initialized\"\
    \ ]] ; then\n  rm -f \"$POSTGRESQL_VOLUME_DIR/.user_scripts_initialized\"\n  touch\
    \ \"$POSTGRESQL_VOLUME_DIR/.gitlab_1_scripts_initialized\"\nfi\n"
  enable_extensions.sh: '[[ -n "${POSTGRES_POSTGRES_PASSWORD_FILE:-}" ]] && POSTGRES_POSTGRES_PASSWORD=$(cat
    ${POSTGRES_POSTGRES_PASSWORD_FILE})

    PGPASSWORD=${POSTGRES_POSTGRES_PASSWORD} psql -d gitlabhq_production -U postgres
    -c ''CREATE EXTENSION IF NOT EXISTS pg_trgm; CREATE EXTENSION IF NOT EXISTS btree_gist;''

    '
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-minio
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: release-name
    heritage: Helm
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  selector: null
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.18.0
    heritage: Helm
  name: release-name-prometheus-server
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterissuers.cert-manager.io
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
spec:
  group: cert-manager.io
  names:
    kind: ClusterIssuer
    listKind: ClusterIssuerList
    plural: clusterissuers
    singular: clusterissuer
    categories:
    - cert-manager
  scope: Cluster
  versions:
  - name: v1
    subresources:
      status: {}
    additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      description: CreationTimestamp is a timestamp representing the server time when
        this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC.
      name: Age
      type: date
    schema:
      openAPIV3Schema:
        description: A ClusterIssuer represents a certificate issuing authority which
          can be referenced as part of `issuerRef` fields. It is similar to an Issuer,
          however it is cluster-scoped and therefore can be referenced by resources
          that exist in *any* namespace, not just the same namespace as the referent.
        type: object
        required:
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Desired state of the ClusterIssuer resource.
            type: object
            properties:
              acme:
                description: ACME configures this issuer to communicate with a RFC8555
                  (ACME) server to obtain signed x509 certificates.
                type: object
                required:
                - privateKeySecretRef
                - server
                properties:
                  caBundle:
                    description: Base64-encoded bundle of PEM CAs which can be used
                      to validate the certificate chain presented by the ACME server.
                      Mutually exclusive with SkipTLSVerify; prefer using CABundle
                      to prevent various kinds of security vulnerabilities. If CABundle
                      and SkipTLSVerify are unset, the system certificate bundle inside
                      the container is used to validate the TLS connection.
                    type: string
                    format: byte
                  disableAccountKeyGeneration:
                    description: Enables or disables generating a new ACME account
                      key. If true, the Issuer resource will *not* request a new account
                      but will expect the account key to be supplied via an existing
                      secret. If false, the cert-manager system will generate a new
                      ACME account key for the Issuer. Defaults to false.
                    type: boolean
                  email:
                    description: Email is the email address to be associated with
                      the ACME account. This field is optional, but it is strongly
                      recommended to be set. It will be used to contact you in case
                      of issues with your account or certificates, including expiry
                      notification emails. This field may be updated after the account
                      is initially registered.
                    type: string
                  enableDurationFeature:
                    description: Enables requesting a Not After date on certificates
                      that matches the duration of the certificate. This is not supported
                      by all ACME servers like Let's Encrypt. If set to true when
                      the ACME server does not support it it will create an error
                      on the Order. Defaults to false.
                    type: boolean
                  externalAccountBinding:
                    description: ExternalAccountBinding is a reference to a CA external
                      account of the ACME server. If set, upon registration cert-manager
                      will attempt to associate the given external account credentials
                      with the registered ACME account.
                    type: object
                    required:
                    - keyID
                    - keySecretRef
                    properties:
                      keyAlgorithm:
                        description: 'Deprecated: keyAlgorithm field exists for historical
                          compatibility reasons and should not be used. The algorithm
                          is now hardcoded to HS256 in golang/x/crypto/acme.'
                        type: string
                        enum:
                        - HS256
                        - HS384
                        - HS512
                      keyID:
                        description: keyID is the ID of the CA key that the External
                          Account is bound to.
                        type: string
                      keySecretRef:
                        description: keySecretRef is a Secret Key Selector referencing
                          a data item in a Kubernetes Secret which holds the symmetric
                          MAC key of the External Account Binding. The `key` is the
                          index string that is paired with the key data in the Secret
                          and should not be confused with the key data itself, or
                          indeed with the External Account Binding keyID above. The
                          secret key stored in the Secret **must** be un-padded, base64
                          URL encoded data.
                        type: object
                        required:
                        - name
                        properties:
                          key:
                            description: The key of the entry in the Secret resource's
                              `data` field to be used. Some instances of this field
                              may be defaulted, in others it may be required.
                            type: string
                          name:
                            description: 'Name of the resource being referred to.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                  preferredChain:
                    description: 'PreferredChain is the chain to use if the ACME server
                      outputs multiple. PreferredChain is no guarantee that this one
                      gets delivered by the ACME endpoint. For example, for Let''s
                      Encrypt''s DST crosssign you would use: "DST Root CA X3" or
                      "ISRG Root X1" for the newer Let''s Encrypt root CA. This value
                      picks the first certificate bundle in the ACME alternative chains
                      that has a certificate with this value as its issuer''s CN'
                    type: string
                    maxLength: 64
                  privateKeySecretRef:
                    description: PrivateKey is the name of a Kubernetes Secret resource
                      that will be used to store the automatically generated ACME
                      account private key. Optionally, a `key` may be specified to
                      select a specific entry within the named Secret resource. If
                      `key` is not specified, a default of `tls.key` will be used.
                    type: object
                    required:
                    - name
                    properties:
                      key:
                        description: The key of the entry in the Secret resource's
                          `data` field to be used. Some instances of this field may
                          be defaulted, in others it may be required.
                        type: string
                      name:
                        description: 'Name of the resource being referred to. More
                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                  server:
                    description: 'Server is the URL used to access the ACME server''s
                      ''directory'' endpoint. For example, for Let''s Encrypt''s staging
                      endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                      Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                    type: string
                  skipTLSVerify:
                    description: 'INSECURE: Enables or disables validation of the
                      ACME server TLS certificate. If true, requests to the ACME server
                      will not have the TLS certificate chain validated. Mutually
                      exclusive with CABundle; prefer using CABundle to prevent various
                      kinds of security vulnerabilities. Only enable this option in
                      development environments. If CABundle and SkipTLSVerify are
                      unset, the system certificate bundle inside the container is
                      used to validate the TLS connection. Defaults to false.'
                    type: boolean
                  solvers:
                    description: 'Solvers is a list of challenge solvers that will
                      be used to solve ACME challenges for the matching domains. Solver
                      configurations must be provided in order to obtain certificates
                      from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'
                    type: array
                    items:
                      description: An ACMEChallengeSolver describes how to solve ACME
                        challenges for the issuer it is part of. A selector may be
                        provided to use different solving strategies for different
                        DNS names. Only one of HTTP01 or DNS01 must be provided.
                      type: object
                      properties:
                        dns01:
                          description: Configures cert-manager to attempt to complete
                            authorizations by performing the DNS01 challenge flow.
                          type: object
                          properties:
                            acmeDNS:
                              description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                API to manage DNS01 challenge records.
                              type: object
                              required:
                              - accountSecretRef
                              - host
                              properties:
                                accountSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                host:
                                  type: string
                            akamai:
                              description: Use the Akamai DNS zone management API
                                to manage DNS01 challenge records.
                              type: object
                              required:
                              - accessTokenSecretRef
                              - clientSecretSecretRef
                              - clientTokenSecretRef
                              - serviceConsumerDomain
                              properties:
                                accessTokenSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                clientSecretSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                clientTokenSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                serviceConsumerDomain:
                                  type: string
                            azureDNS:
                              description: Use the Microsoft Azure DNS API to manage
                                DNS01 challenge records.
                              type: object
                              required:
                              - resourceGroupName
                              - subscriptionID
                              properties:
                                clientID:
                                  description: if both this and ClientSecret are left
                                    unset MSI will be used
                                  type: string
                                clientSecretSecretRef:
                                  description: if both this and ClientID are left
                                    unset MSI will be used
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                environment:
                                  description: name of the Azure environment (default
                                    AzurePublicCloud)
                                  type: string
                                  enum:
                                  - AzurePublicCloud
                                  - AzureChinaCloud
                                  - AzureGermanCloud
                                  - AzureUSGovernmentCloud
                                hostedZoneName:
                                  description: name of the DNS zone that should be
                                    used
                                  type: string
                                managedIdentity:
                                  description: managed identity configuration, can
                                    not be used at the same time as clientID, clientSecretSecretRef
                                    or tenantID
                                  type: object
                                  properties:
                                    clientID:
                                      description: client ID of the managed identity,
                                        can not be used at the same time as resourceID
                                      type: string
                                    resourceID:
                                      description: resource ID of the managed identity,
                                        can not be used at the same time as clientID
                                      type: string
                                resourceGroupName:
                                  description: resource group the DNS zone is located
                                    in
                                  type: string
                                subscriptionID:
                                  description: ID of the Azure subscription
                                  type: string
                                tenantID:
                                  description: when specifying ClientID and ClientSecret
                                    then this field is also needed
                                  type: string
                            cloudDNS:
                              description: Use the Google Cloud DNS API to manage
                                DNS01 challenge records.
                              type: object
                              required:
                              - project
                              properties:
                                hostedZoneName:
                                  description: HostedZoneName is an optional field
                                    that tells cert-manager in which Cloud DNS zone
                                    the challenge record has to be created. If left
                                    empty cert-manager will automatically choose a
                                    zone.
                                  type: string
                                project:
                                  type: string
                                serviceAccountSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                            cloudflare:
                              description: Use the Cloudflare API to manage DNS01
                                challenge records.
                              type: object
                              properties:
                                apiKeySecretRef:
                                  description: 'API key to use to authenticate with
                                    Cloudflare. Note: using an API token to authenticate
                                    is now the recommended method as it allows greater
                                    control of permissions.'
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                apiTokenSecretRef:
                                  description: API token used to authenticate with
                                    Cloudflare.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                email:
                                  description: Email of the account, only required
                                    when using API key based authentication.
                                  type: string
                            cnameStrategy:
                              description: CNAMEStrategy configures how the DNS01
                                provider should handle CNAME records when found in
                                DNS zones.
                              type: string
                              enum:
                              - None
                              - Follow
                            digitalocean:
                              description: Use the DigitalOcean DNS API to manage
                                DNS01 challenge records.
                              type: object
                              required:
                              - tokenSecretRef
                              properties:
                                tokenSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                            rfc2136:
                              description: Use RFC2136 ("Dynamic Updates in the Domain
                                Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                to manage DNS01 challenge records.
                              type: object
                              required:
                              - nameserver
                              properties:
                                nameserver:
                                  description: "The IP address or hostname of an authoritative\
                                    \ DNS server supporting RFC2136 in the form host:port.\
                                    \ If the host is an IPv6 address it must be enclosed\
                                    \ in square brackets (e.g [2001:db8::1])\_; port\
                                    \ is optional. This field is required."
                                  type: string
                                tsigAlgorithm:
                                  description: 'The TSIG Algorithm configured in the
                                    DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                    and ``tsigKeyName`` are defined. Supported values
                                    are (case-insensitive): ``HMACMD5`` (default),
                                    ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                  type: string
                                tsigKeyName:
                                  description: The TSIG Key name configured in the
                                    DNS. If ``tsigSecretSecretRef`` is defined, this
                                    field is required.
                                  type: string
                                tsigSecretSecretRef:
                                  description: The name of the secret containing the
                                    TSIG value. If ``tsigKeyName`` is defined, this
                                    field is required.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                            route53:
                              description: Use the AWS Route53 API to manage DNS01
                                challenge records.
                              type: object
                              required:
                              - region
                              properties:
                                accessKeyID:
                                  description: 'The AccessKeyID is used for authentication.
                                    Cannot be set when SecretAccessKeyID is set. If
                                    neither the Access Key nor Key ID are set, we
                                    fall-back to using env vars, shared credentials
                                    file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                  type: string
                                accessKeyIDSecretRef:
                                  description: 'The SecretAccessKey is used for authentication.
                                    If set, pull the AWS access key ID from a key
                                    within a Kubernetes Secret. Cannot be set when
                                    AccessKeyID is set. If neither the Access Key
                                    nor Key ID are set, we fall-back to using env
                                    vars, shared credentials file or AWS Instance
                                    metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                hostedZoneID:
                                  description: If set, the provider will manage only
                                    this zone in Route53 and will not do an lookup
                                    using the route53:ListHostedZonesByName api call.
                                  type: string
                                region:
                                  description: Always set the region when using AccessKeyID
                                    and SecretAccessKey
                                  type: string
                                role:
                                  description: Role is a Role ARN which the Route53
                                    provider will assume using either the explicit
                                    credentials AccessKeyID/SecretAccessKey or the
                                    inferred credentials from environment variables,
                                    shared credentials file or AWS Instance metadata
                                  type: string
                                secretAccessKeySecretRef:
                                  description: 'The SecretAccessKey is used for authentication.
                                    If neither the Access Key nor Key ID are set,
                                    we fall-back to using env vars, shared credentials
                                    file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                            webhook:
                              description: Configure an external webhook based DNS01
                                challenge solver to manage DNS01 challenge records.
                              type: object
                              required:
                              - groupName
                              - solverName
                              properties:
                                config:
                                  description: Additional configuration that should
                                    be passed to the webhook apiserver when challenges
                                    are processed. This can contain arbitrary JSON
                                    data. Secret values should not be specified in
                                    this stanza. If secret values are needed (e.g.
                                    credentials for a DNS service), you should use
                                    a SecretKeySelector to reference a Secret resource.
                                    For details on the schema of this field, consult
                                    the webhook provider implementation's documentation.
                                  x-kubernetes-preserve-unknown-fields: true
                                groupName:
                                  description: The API group name that should be used
                                    when POSTing ChallengePayload resources to the
                                    webhook apiserver. This should be the same as
                                    the GroupName specified in the webhook provider
                                    implementation.
                                  type: string
                                solverName:
                                  description: The name of the solver to use, as defined
                                    in the webhook provider implementation. This will
                                    typically be the name of the provider, e.g. 'cloudflare'.
                                  type: string
                        http01:
                          description: Configures cert-manager to attempt to complete
                            authorizations by performing the HTTP01 challenge flow.
                            It is not possible to obtain certificates for wildcard
                            domain names (e.g. `*.example.com`) using the HTTP01 challenge
                            mechanism.
                          type: object
                          properties:
                            gatewayHTTPRoute:
                              description: The Gateway API is a sig-network community
                                API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                                The Gateway solver will create HTTPRoutes with the
                                specified labels in the same namespace as the challenge.
                                This solver is experimental, and fields / behaviour
                                may change in the future.
                              type: object
                              properties:
                                labels:
                                  description: Custom labels that will be applied
                                    to HTTPRoutes created by cert-manager while solving
                                    HTTP-01 challenges.
                                  type: object
                                  additionalProperties:
                                    type: string
                                parentRefs:
                                  description: 'When solving an HTTP-01 challenge,
                                    cert-manager creates an HTTPRoute. cert-manager
                                    needs to know which parentRefs should be used
                                    when creating the HTTPRoute. Usually, the parentRef
                                    references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways'
                                  type: array
                                  items:
                                    description: "ParentReference identifies an API\
                                      \ object (usually a Gateway) that can be considered\
                                      \ a parent of this resource (usually a route).\
                                      \ The only kind of parent resource with \"Core\"\
                                      \ support is Gateway. This API may be extended\
                                      \ in the future to support additional kinds\
                                      \ of parent resources, such as HTTPRoute. \n\
                                      \ The API object must be valid in the cluster;\
                                      \ the Group and Kind must be registered in the\
                                      \ cluster for this reference to be valid."
                                    type: object
                                    required:
                                    - name
                                    properties:
                                      group:
                                        description: "Group is the group of the referent.\
                                          \ When unspecified, \"gateway.networking.k8s.io\"\
                                          \ is inferred. To set the core API group\
                                          \ (such as for a \"Service\" kind referent),\
                                          \ Group must be explicitly set to \"\" (empty\
                                          \ string). \n Support: Core"
                                        type: string
                                        default: gateway.networking.k8s.io
                                        maxLength: 253
                                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      kind:
                                        description: "Kind is kind of the referent.\
                                          \ \n Support: Core (Gateway) \n Support:\
                                          \ Implementation-specific (Other Resources)"
                                        type: string
                                        default: Gateway
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      name:
                                        description: "Name is the name of the referent.\
                                          \ \n Support: Core"
                                        type: string
                                        maxLength: 253
                                        minLength: 1
                                      namespace:
                                        description: "Namespace is the namespace of\
                                          \ the referent. When unspecified, this refers\
                                          \ to the local namespace of the Route. \n\
                                          \ Note that there are specific rules for\
                                          \ ParentRefs which cross namespace boundaries.\
                                          \ Cross-namespace references are only valid\
                                          \ if they are explicitly allowed by something\
                                          \ in the namespace they are referring to.\
                                          \ For example: Gateway has the AllowedRoutes\
                                          \ field, and ReferenceGrant provides a generic\
                                          \ way to enable any other kind of cross-namespace\
                                          \ reference. \n Support: Core"
                                        type: string
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      port:
                                        description: "Port is the network port this\
                                          \ Route targets. It can be interpreted differently\
                                          \ based on the type of parent resource.\
                                          \ \n When the parent resource is a Gateway,\
                                          \ this targets all listeners listening on\
                                          \ the specified port that also support this\
                                          \ kind of Route(and select this Route).\
                                          \ It's not recommended to set `Port` unless\
                                          \ the networking behaviors specified in\
                                          \ a Route must apply to a specific port\
                                          \ as opposed to a listener(s) whose port(s)\
                                          \ may be changed. When both Port and SectionName\
                                          \ are specified, the name and port of the\
                                          \ selected listener must match both specified\
                                          \ values. \n Implementations MAY choose\
                                          \ to support other parent resources. Implementations\
                                          \ supporting other types of parent resources\
                                          \ MUST clearly document how/if Port is interpreted.\
                                          \ \n For the purpose of status, an attachment\
                                          \ is considered successful as long as the\
                                          \ parent resource accepts it partially.\
                                          \ For example, Gateway listeners can restrict\
                                          \ which Routes can attach to them by Route\
                                          \ kind, namespace, or hostname. If 1 of\
                                          \ 2 Gateway listeners accept attachment\
                                          \ from the referencing Route, the Route\
                                          \ MUST be considered successfully attached.\
                                          \ If no Gateway listeners accept attachment\
                                          \ from this Route, the Route MUST be considered\
                                          \ detached from the Gateway. \n Support:\
                                          \ Extended \n <gateway:experimental>"
                                        type: integer
                                        format: int32
                                        maximum: 65535
                                        minimum: 1
                                      sectionName:
                                        description: "SectionName is the name of a\
                                          \ section within the target resource. In\
                                          \ the following resources, SectionName is\
                                          \ interpreted as the following: \n * Gateway:\
                                          \ Listener Name. When both Port (experimental)\
                                          \ and SectionName are specified, the name\
                                          \ and port of the selected listener must\
                                          \ match both specified values. \n Implementations\
                                          \ MAY choose to support attaching Routes\
                                          \ to other resources. If that is the case,\
                                          \ they MUST clearly document how SectionName\
                                          \ is interpreted. \n When unspecified (empty\
                                          \ string), this will reference the entire\
                                          \ resource. For the purpose of status, an\
                                          \ attachment is considered successful if\
                                          \ at least one section in the parent resource\
                                          \ accepts it. For example, Gateway listeners\
                                          \ can restrict which Routes can attach to\
                                          \ them by Route kind, namespace, or hostname.\
                                          \ If 1 of 2 Gateway listeners accept attachment\
                                          \ from the referencing Route, the Route\
                                          \ MUST be considered successfully attached.\
                                          \ If no Gateway listeners accept attachment\
                                          \ from this Route, the Route MUST be considered\
                                          \ detached from the Gateway. \n Support:\
                                          \ Core"
                                        type: string
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                serviceType:
                                  description: Optional service type for Kubernetes
                                    solver service. Supported values are NodePort
                                    or ClusterIP. If unset, defaults to NodePort.
                                  type: string
                            ingress:
                              description: The ingress based HTTP01 challenge solver
                                will solve challenges by creating or modifying Ingress
                                resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                to 'challenge solver' pods that are provisioned by
                                cert-manager for each Challenge to be completed.
                              type: object
                              properties:
                                class:
                                  description: The ingress class to use when creating
                                    Ingress resources to solve ACME challenges that
                                    use this challenge solver. Only one of 'class'
                                    or 'name' may be specified.
                                  type: string
                                ingressTemplate:
                                  description: Optional ingress template used to configure
                                    the ACME challenge solver ingress used for HTTP01
                                    challenges.
                                  type: object
                                  properties:
                                    metadata:
                                      description: ObjectMeta overrides for the ingress
                                        used to solve HTTP01 challenges. Only the
                                        'labels' and 'annotations' fields may be set.
                                        If labels or annotations overlap with in-built
                                        values, the values here will override the
                                        in-built values.
                                      type: object
                                      properties:
                                        annotations:
                                          description: Annotations that should be
                                            added to the created ACME HTTP01 solver
                                            ingress.
                                          type: object
                                          additionalProperties:
                                            type: string
                                        labels:
                                          description: Labels that should be added
                                            to the created ACME HTTP01 solver ingress.
                                          type: object
                                          additionalProperties:
                                            type: string
                                name:
                                  description: The name of the ingress resource that
                                    should have ACME challenge solving routes inserted
                                    into it in order to solve HTTP01 challenges. This
                                    is typically used in conjunction with ingress
                                    controllers like ingress-gce, which maintains
                                    a 1:1 mapping between external IPs and ingress
                                    resources.
                                  type: string
                                podTemplate:
                                  description: Optional pod template used to configure
                                    the ACME challenge solver pods used for HTTP01
                                    challenges.
                                  type: object
                                  properties:
                                    metadata:
                                      description: ObjectMeta overrides for the pod
                                        used to solve HTTP01 challenges. Only the
                                        'labels' and 'annotations' fields may be set.
                                        If labels or annotations overlap with in-built
                                        values, the values here will override the
                                        in-built values.
                                      type: object
                                      properties:
                                        annotations:
                                          description: Annotations that should be
                                            added to the create ACME HTTP01 solver
                                            pods.
                                          type: object
                                          additionalProperties:
                                            type: string
                                        labels:
                                          description: Labels that should be added
                                            to the created ACME HTTP01 solver pods.
                                          type: object
                                          additionalProperties:
                                            type: string
                                    spec:
                                      description: PodSpec defines overrides for the
                                        HTTP01 challenge solver pod. Only the 'priorityClassName',
                                        'nodeSelector', 'affinity', 'serviceAccountName'
                                        and 'tolerations' fields are supported currently.
                                        All other fields will be ignored.
                                      type: object
                                      properties:
                                        affinity:
                                          description: If specified, the pod's scheduling
                                            constraints
                                          type: object
                                          properties:
                                            nodeAffinity:
                                              description: Describes node affinity
                                                scheduling rules for the pod.
                                              type: object
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node matches
                                                    the corresponding matchExpressions;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  type: array
                                                  items:
                                                    description: An empty preferred
                                                      scheduling term matches all
                                                      objects with implicit weight
                                                      0 (i.e. it's a no-op). A null
                                                      preferred scheduling term matches
                                                      no objects (i.e. is also a no-op).
                                                    type: object
                                                    required:
                                                    - preference
                                                    - weight
                                                    properties:
                                                      preference:
                                                        description: A node selector
                                                          term, associated with the
                                                          corresponding weight.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                        x-kubernetes-map-type: atomic
                                                      weight:
                                                        description: Weight associated
                                                          with matching the corresponding
                                                          nodeSelectorTerm, in the
                                                          range 1-100.
                                                        type: integer
                                                        format: int32
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to an
                                                    update), the system may or may
                                                    not try to eventually evict the
                                                    pod from its node.
                                                  type: object
                                                  required:
                                                  - nodeSelectorTerms
                                                  properties:
                                                    nodeSelectorTerms:
                                                      description: Required. A list
                                                        of node selector terms. The
                                                        terms are ORed.
                                                      type: array
                                                      items:
                                                        description: A null or empty
                                                          node selector term matches
                                                          no objects. The requirements
                                                          of them are ANDed. The TopologySelectorTerm
                                                          type implements a subset
                                                          of the NodeSelectorTerm.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                        x-kubernetes-map-type: atomic
                                                  x-kubernetes-map-type: atomic
                                            podAffinity:
                                              description: Describes pod affinity
                                                scheduling rules (e.g. co-locate this
                                                pod in the same node, zone, etc. as
                                                some other pod(s)).
                                              type: object
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node has pods
                                                    which matches the corresponding
                                                    podAffinityTerm; the node(s) with
                                                    the highest sum are the most preferred.
                                                  type: array
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    type: object
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        type: object
                                                        required:
                                                        - topologyKey
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                            x-kubernetes-map-type: atomic
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                            x-kubernetes-map-type: atomic
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace".
                                                            type: array
                                                            items:
                                                              type: string
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        type: integer
                                                        format: int32
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to a pod
                                                    label update), the system may
                                                    or may not try to eventually evict
                                                    the pod from its node. When there
                                                    are multiple elements, the lists
                                                    of nodes corresponding to each
                                                    podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  type: array
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    type: object
                                                    required:
                                                    - topologyKey
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace".
                                                        type: array
                                                        items:
                                                          type: string
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                            podAntiAffinity:
                                              description: Describes pod anti-affinity
                                                scheduling rules (e.g. avoid putting
                                                this pod in the same node, zone, etc.
                                                as some other pod(s)).
                                              type: object
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the anti-affinity
                                                    expressions specified by this
                                                    field, but it may choose a node
                                                    that violates one or more of the
                                                    expressions. The node that is
                                                    most preferred is the one with
                                                    the greatest sum of weights, i.e.
                                                    for each node that meets all of
                                                    the scheduling requirements (resource
                                                    request, requiredDuringScheduling
                                                    anti-affinity expressions, etc.),
                                                    compute a sum by iterating through
                                                    the elements of this field and
                                                    adding "weight" to the sum if
                                                    the node has pods which matches
                                                    the corresponding podAffinityTerm;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  type: array
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    type: object
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        type: object
                                                        required:
                                                        - topologyKey
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                            x-kubernetes-map-type: atomic
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                            x-kubernetes-map-type: atomic
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace".
                                                            type: array
                                                            items:
                                                              type: string
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        type: integer
                                                        format: int32
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the anti-affinity
                                                    requirements specified by this
                                                    field are not met at scheduling
                                                    time, the pod will not be scheduled
                                                    onto the node. If the anti-affinity
                                                    requirements specified by this
                                                    field cease to be met at some
                                                    point during pod execution (e.g.
                                                    due to a pod label update), the
                                                    system may or may not try to eventually
                                                    evict the pod from its node. When
                                                    there are multiple elements, the
                                                    lists of nodes corresponding to
                                                    each podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  type: array
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    type: object
                                                    required:
                                                    - topologyKey
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace".
                                                        type: array
                                                        items:
                                                          type: string
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                        nodeSelector:
                                          description: 'NodeSelector is a selector
                                            which must be true for the pod to fit
                                            on a node. Selector which must match a
                                            node''s labels for the pod to be scheduled
                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                          type: object
                                          additionalProperties:
                                            type: string
                                        priorityClassName:
                                          description: If specified, the pod's priorityClassName.
                                          type: string
                                        serviceAccountName:
                                          description: If specified, the pod's service
                                            account
                                          type: string
                                        tolerations:
                                          description: If specified, the pod's tolerations.
                                          type: array
                                          items:
                                            description: The pod this Toleration is
                                              attached to tolerates any taint that
                                              matches the triple <key,value,effect>
                                              using the matching operator <operator>.
                                            type: object
                                            properties:
                                              effect:
                                                description: Effect indicates the
                                                  taint effect to match. Empty means
                                                  match all taint effects. When specified,
                                                  allowed values are NoSchedule, PreferNoSchedule
                                                  and NoExecute.
                                                type: string
                                              key:
                                                description: Key is the taint key
                                                  that the toleration applies to.
                                                  Empty means match all taint keys.
                                                  If the key is empty, operator must
                                                  be Exists; this combination means
                                                  to match all values and all keys.
                                                type: string
                                              operator:
                                                description: Operator represents a
                                                  key's relationship to the value.
                                                  Valid operators are Exists and Equal.
                                                  Defaults to Equal. Exists is equivalent
                                                  to wildcard for value, so that a
                                                  pod can tolerate all taints of a
                                                  particular category.
                                                type: string
                                              tolerationSeconds:
                                                description: TolerationSeconds represents
                                                  the period of time the toleration
                                                  (which must be of effect NoExecute,
                                                  otherwise this field is ignored)
                                                  tolerates the taint. By default,
                                                  it is not set, which means tolerate
                                                  the taint forever (do not evict).
                                                  Zero and negative values will be
                                                  treated as 0 (evict immediately)
                                                  by the system.
                                                type: integer
                                                format: int64
                                              value:
                                                description: Value is the taint value
                                                  the toleration matches to. If the
                                                  operator is Exists, the value should
                                                  be empty, otherwise just a regular
                                                  string.
                                                type: string
                                serviceType:
                                  description: Optional service type for Kubernetes
                                    solver service. Supported values are NodePort
                                    or ClusterIP. If unset, defaults to NodePort.
                                  type: string
                        selector:
                          description: Selector selects a set of DNSNames on the Certificate
                            resource that should be solved using this challenge solver.
                            If not specified, the solver will be treated as the 'default'
                            solver with the lowest priority, i.e. if any other solver
                            has a more specific match, it will be used instead.
                          type: object
                          properties:
                            dnsNames:
                              description: List of DNSNames that this solver will
                                be used to solve. If specified and a match is found,
                                a dnsNames selector will take precedence over a dnsZones
                                selector. If multiple solvers match with the same
                                dnsNames value, the solver with the most matching
                                labels in matchLabels will be selected. If neither
                                has more matches, the solver defined earlier in the
                                list will be selected.
                              type: array
                              items:
                                type: string
                            dnsZones:
                              description: List of DNSZones that this solver will
                                be used to solve. The most specific DNS zone match
                                specified here will take precedence over other DNS
                                zone matches, so a solver specifying sys.example.com
                                will be selected over one specifying example.com for
                                the domain www.sys.example.com. If multiple solvers
                                match with the same dnsZones value, the solver with
                                the most matching labels in matchLabels will be selected.
                                If neither has more matches, the solver defined earlier
                                in the list will be selected.
                              type: array
                              items:
                                type: string
                            matchLabels:
                              description: A label selector that is used to refine
                                the set of certificate's that this challenge solver
                                will apply to.
                              type: object
                              additionalProperties:
                                type: string
              ca:
                description: CA configures this issuer to sign certificates using
                  a signing CA keypair stored in a Secret resource. This is used to
                  build internal PKIs that are managed by cert-manager.
                type: object
                required:
                - secretName
                properties:
                  crlDistributionPoints:
                    description: The CRL distribution points is an X.509 v3 certificate
                      extension which identifies the location of the CRL from which
                      the revocation of this certificate can be checked. If not set,
                      certificates will be issued without distribution points set.
                    type: array
                    items:
                      type: string
                  ocspServers:
                    description: The OCSP server list is an X.509 v3 extension that
                      defines a list of URLs of OCSP responders. The OCSP responders
                      can be queried for the revocation status of an issued certificate.
                      If not set, the certificate will be issued with no OCSP servers
                      set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                    type: array
                    items:
                      type: string
                  secretName:
                    description: SecretName is the name of the secret used to sign
                      Certificates issued by this Issuer.
                    type: string
              selfSigned:
                description: SelfSigned configures this issuer to 'self sign' certificates
                  using the private key used to create the CertificateRequest object.
                type: object
                properties:
                  crlDistributionPoints:
                    description: The CRL distribution points is an X.509 v3 certificate
                      extension which identifies the location of the CRL from which
                      the revocation of this certificate can be checked. If not set
                      certificate will be issued without CDP. Values are strings.
                    type: array
                    items:
                      type: string
              vault:
                description: Vault configures this issuer to sign certificates using
                  a HashiCorp Vault PKI backend.
                type: object
                required:
                - auth
                - path
                - server
                properties:
                  auth:
                    description: Auth configures how cert-manager authenticates with
                      the Vault server.
                    type: object
                    properties:
                      appRole:
                        description: AppRole authenticates with Vault using the App
                          Role auth mechanism, with the role and secret stored in
                          a Kubernetes Secret resource.
                        type: object
                        required:
                        - path
                        - roleId
                        - secretRef
                        properties:
                          path:
                            description: 'Path where the App Role authentication backend
                              is mounted in Vault, e.g: "approle"'
                            type: string
                          roleId:
                            description: RoleID configured in the App Role authentication
                              backend when setting up the authentication backend in
                              Vault.
                            type: string
                          secretRef:
                            description: Reference to a key in a Secret that contains
                              the App Role secret used to authenticate with Vault.
                              The `key` field must be specified and denotes which
                              entry within the Secret resource is used as the app
                              role secret.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                      kubernetes:
                        description: Kubernetes authenticates with Vault by passing
                          the ServiceAccount token stored in the named Secret resource
                          to the Vault server.
                        type: object
                        required:
                        - role
                        - secretRef
                        properties:
                          mountPath:
                            description: The Vault mountPath here is the mount path
                              to use when authenticating with Vault. For example,
                              setting a value to `/v1/auth/foo`, will use the path
                              `/v1/auth/foo/login` to authenticate with Vault. If
                              unspecified, the default value "/v1/auth/kubernetes"
                              will be used.
                            type: string
                          role:
                            description: A required field containing the Vault Role
                              to assume. A Role binds a Kubernetes ServiceAccount
                              with a set of Vault policies.
                            type: string
                          secretRef:
                            description: The required Secret field containing a Kubernetes
                              ServiceAccount JWT used for authenticating with Vault.
                              Use of 'ambient credentials' is not supported.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                      tokenSecretRef:
                        description: TokenSecretRef authenticates with Vault by presenting
                          a token.
                        type: object
                        required:
                        - name
                        properties:
                          key:
                            description: The key of the entry in the Secret resource's
                              `data` field to be used. Some instances of this field
                              may be defaulted, in others it may be required.
                            type: string
                          name:
                            description: 'Name of the resource being referred to.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                  caBundle:
                    description: Base64-encoded bundle of PEM CAs which will be used
                      to validate the certificate chain presented by Vault. Only used
                      if using HTTPS to connect to Vault and ignored for HTTP connections.
                      Mutually exclusive with CABundleSecretRef. If neither CABundle
                      nor CABundleSecretRef are defined, the certificate bundle in
                      the cert-manager controller container is used to validate the
                      TLS connection.
                    type: string
                    format: byte
                  caBundleSecretRef:
                    description: Reference to a Secret containing a bundle of PEM-encoded
                      CAs to use when verifying the certificate chain presented by
                      Vault when using HTTPS. Mutually exclusive with CABundle. If
                      neither CABundle nor CABundleSecretRef are defined, the certificate
                      bundle in the cert-manager controller container is used to validate
                      the TLS connection. If no key for the Secret is specified, cert-manager
                      will default to 'ca.crt'.
                    type: object
                    required:
                    - name
                    properties:
                      key:
                        description: The key of the entry in the Secret resource's
                          `data` field to be used. Some instances of this field may
                          be defaulted, in others it may be required.
                        type: string
                      name:
                        description: 'Name of the resource being referred to. More
                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                  namespace:
                    description: 'Name of the vault namespace. Namespaces is a set
                      of features within Vault Enterprise that allows Vault environments
                      to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                      can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                    type: string
                  path:
                    description: 'Path is the mount path of the Vault PKI backend''s
                      `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                    type: string
                  server:
                    description: 'Server is the connection address for the Vault server,
                      e.g: "https://vault.example.com:8200".'
                    type: string
              venafi:
                description: Venafi configures this issuer to sign certificates using
                  a Venafi TPP or Venafi Cloud policy zone.
                type: object
                required:
                - zone
                properties:
                  cloud:
                    description: Cloud specifies the Venafi cloud configuration settings.
                      Only one of TPP or Cloud may be specified.
                    type: object
                    required:
                    - apiTokenSecretRef
                    properties:
                      apiTokenSecretRef:
                        description: APITokenSecretRef is a secret key selector for
                          the Venafi Cloud API token.
                        type: object
                        required:
                        - name
                        properties:
                          key:
                            description: The key of the entry in the Secret resource's
                              `data` field to be used. Some instances of this field
                              may be defaulted, in others it may be required.
                            type: string
                          name:
                            description: 'Name of the resource being referred to.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                      url:
                        description: URL is the base URL for Venafi Cloud. Defaults
                          to "https://api.venafi.cloud/v1".
                        type: string
                  tpp:
                    description: TPP specifies Trust Protection Platform configuration
                      settings. Only one of TPP or Cloud may be specified.
                    type: object
                    required:
                    - credentialsRef
                    - url
                    properties:
                      caBundle:
                        description: Base64-encoded bundle of PEM CAs which will be
                          used to validate the certificate chain presented by the
                          TPP server. Only used if using HTTPS; ignored for HTTP.
                          If undefined, the certificate bundle in the cert-manager
                          controller container is used to validate the chain.
                        type: string
                        format: byte
                      credentialsRef:
                        description: CredentialsRef is a reference to a Secret containing
                          the username and password for the TPP server. The secret
                          must contain two keys, 'username' and 'password'.
                        type: object
                        required:
                        - name
                        properties:
                          name:
                            description: 'Name of the resource being referred to.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                      url:
                        description: 'URL is the base URL for the vedsdk endpoint
                          of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                        type: string
                  zone:
                    description: Zone is the Venafi Policy Zone to use for this issuer.
                      All requests made to the Venafi platform will be restricted
                      by the named zone policy. This field is required.
                    type: string
          status:
            description: Status of the ClusterIssuer. This is set and managed automatically.
            type: object
            properties:
              acme:
                description: ACME specific status options. This field should only
                  be set if the Issuer is configured to use an ACME server to issue
                  certificates.
                type: object
                properties:
                  lastRegisteredEmail:
                    description: LastRegisteredEmail is the email associated with
                      the latest registered ACME account, in order to track changes
                      made to registered account associated with the  Issuer
                    type: string
                  uri:
                    description: URI is the unique account identifier, which can also
                      be used to retrieve account details from the CA
                    type: string
              conditions:
                description: List of status conditions to indicate the status of a
                  CertificateRequest. Known condition types are `Ready`.
                type: array
                items:
                  description: IssuerCondition contains condition information for
                    an Issuer.
                  type: object
                  required:
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      type: string
                      format: date-time
                    message:
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the Issuer.
                      type: integer
                      format: int64
                    reason:
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of (`True`, `False`,
                        `Unknown`).
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: Type of the condition, known values are (`Ready`).
                      type: string
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: challenges.acme.cert-manager.io
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
spec:
  group: acme.cert-manager.io
  names:
    kind: Challenge
    listKind: ChallengeList
    plural: challenges
    singular: challenge
    categories:
    - cert-manager
    - cert-manager-acme
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .spec.dnsName
      name: Domain
      type: string
    - jsonPath: .status.reason
      name: Reason
      priority: 1
      type: string
    - description: CreationTimestamp is a timestamp representing the server time when
        this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC.
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Challenge is a type to represent a Challenge request with an
          ACME server
        type: object
        required:
        - metadata
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
            - authorizationURL
            - dnsName
            - issuerRef
            - key
            - solver
            - token
            - type
            - url
            properties:
              authorizationURL:
                description: The URL to the ACME Authorization resource that this
                  challenge is a part of.
                type: string
              dnsName:
                description: dnsName is the identifier that this challenge is for,
                  e.g. example.com. If the requested DNSName is a 'wildcard', this
                  field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                  it must be `example.com`.
                type: string
              issuerRef:
                description: References a properly configured ACME-type Issuer which
                  should be used to create this Challenge. If the Issuer does not
                  exist, processing will be retried. If the Issuer is not an 'ACME'
                  Issuer, an error will be returned and the Challenge will be marked
                  as failed.
                type: object
                required:
                - name
                properties:
                  group:
                    description: Group of the resource being referred to.
                    type: string
                  kind:
                    description: Kind of the resource being referred to.
                    type: string
                  name:
                    description: Name of the resource being referred to.
                    type: string
              key:
                description: 'The ACME challenge key for this challenge For HTTP01
                  challenges, this is the value that must be responded with to complete
                  the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key
                  from acme server for challenge>`. For DNS01 challenges, this is
                  the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key
                  from acme server for challenge>` text that must be set as the TXT
                  record content.'
                type: string
              solver:
                description: Contains the domain solving configuration that should
                  be used to solve this challenge resource.
                type: object
                properties:
                  dns01:
                    description: Configures cert-manager to attempt to complete authorizations
                      by performing the DNS01 challenge flow.
                    type: object
                    properties:
                      acmeDNS:
                        description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                          API to manage DNS01 challenge records.
                        type: object
                        required:
                        - accountSecretRef
                        - host
                        properties:
                          accountSecretRef:
                            description: A reference to a specific 'key' within a
                              Secret resource. In some instances, `key` is a required
                              field.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                          host:
                            type: string
                      akamai:
                        description: Use the Akamai DNS zone management API to manage
                          DNS01 challenge records.
                        type: object
                        required:
                        - accessTokenSecretRef
                        - clientSecretSecretRef
                        - clientTokenSecretRef
                        - serviceConsumerDomain
                        properties:
                          accessTokenSecretRef:
                            description: A reference to a specific 'key' within a
                              Secret resource. In some instances, `key` is a required
                              field.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                          clientSecretSecretRef:
                            description: A reference to a specific 'key' within a
                              Secret resource. In some instances, `key` is a required
                              field.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                          clientTokenSecretRef:
                            description: A reference to a specific 'key' within a
                              Secret resource. In some instances, `key` is a required
                              field.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                          serviceConsumerDomain:
                            type: string
                      azureDNS:
                        description: Use the Microsoft Azure DNS API to manage DNS01
                          challenge records.
                        type: object
                        required:
                        - resourceGroupName
                        - subscriptionID
                        properties:
                          clientID:
                            description: if both this and ClientSecret are left unset
                              MSI will be used
                            type: string
                          clientSecretSecretRef:
                            description: if both this and ClientID are left unset
                              MSI will be used
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                          environment:
                            description: name of the Azure environment (default AzurePublicCloud)
                            type: string
                            enum:
                            - AzurePublicCloud
                            - AzureChinaCloud
                            - AzureGermanCloud
                            - AzureUSGovernmentCloud
                          hostedZoneName:
                            description: name of the DNS zone that should be used
                            type: string
                          managedIdentity:
                            description: managed identity configuration, can not be
                              used at the same time as clientID, clientSecretSecretRef
                              or tenantID
                            type: object
                            properties:
                              clientID:
                                description: client ID of the managed identity, can
                                  not be used at the same time as resourceID
                                type: string
                              resourceID:
                                description: resource ID of the managed identity,
                                  can not be used at the same time as clientID
                                type: string
                          resourceGroupName:
                            description: resource group the DNS zone is located in
                            type: string
                          subscriptionID:
                            description: ID of the Azure subscription
                            type: string
                          tenantID:
                            description: when specifying ClientID and ClientSecret
                              then this field is also needed
                            type: string
                      cloudDNS:
                        description: Use the Google Cloud DNS API to manage DNS01
                          challenge records.
                        type: object
                        required:
                        - project
                        properties:
                          hostedZoneName:
                            description: HostedZoneName is an optional field that
                              tells cert-manager in which Cloud DNS zone the challenge
                              record has to be created. If left empty cert-manager
                              will automatically choose a zone.
                            type: string
                          project:
                            type: string
                          serviceAccountSecretRef:
                            description: A reference to a specific 'key' within a
                              Secret resource. In some instances, `key` is a required
                              field.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                      cloudflare:
                        description: Use the Cloudflare API to manage DNS01 challenge
                          records.
                        type: object
                        properties:
                          apiKeySecretRef:
                            description: 'API key to use to authenticate with Cloudflare.
                              Note: using an API token to authenticate is now the
                              recommended method as it allows greater control of permissions.'
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                          apiTokenSecretRef:
                            description: API token used to authenticate with Cloudflare.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                          email:
                            description: Email of the account, only required when
                              using API key based authentication.
                            type: string
                      cnameStrategy:
                        description: CNAMEStrategy configures how the DNS01 provider
                          should handle CNAME records when found in DNS zones.
                        type: string
                        enum:
                        - None
                        - Follow
                      digitalocean:
                        description: Use the DigitalOcean DNS API to manage DNS01
                          challenge records.
                        type: object
                        required:
                        - tokenSecretRef
                        properties:
                          tokenSecretRef:
                            description: A reference to a specific 'key' within a
                              Secret resource. In some instances, `key` is a required
                              field.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                      rfc2136:
                        description: Use RFC2136 ("Dynamic Updates in the Domain Name
                          System") (https://datatracker.ietf.org/doc/rfc2136/) to
                          manage DNS01 challenge records.
                        type: object
                        required:
                        - nameserver
                        properties:
                          nameserver:
                            description: "The IP address or hostname of an authoritative\
                              \ DNS server supporting RFC2136 in the form host:port.\
                              \ If the host is an IPv6 address it must be enclosed\
                              \ in square brackets (e.g [2001:db8::1])\_; port is\
                              \ optional. This field is required."
                            type: string
                          tsigAlgorithm:
                            description: 'The TSIG Algorithm configured in the DNS
                              supporting RFC2136. Used only when ``tsigSecretSecretRef``
                              and ``tsigKeyName`` are defined. Supported values are
                              (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                              ``HMACSHA256`` or ``HMACSHA512``.'
                            type: string
                          tsigKeyName:
                            description: The TSIG Key name configured in the DNS.
                              If ``tsigSecretSecretRef`` is defined, this field is
                              required.
                            type: string
                          tsigSecretSecretRef:
                            description: The name of the secret containing the TSIG
                              value. If ``tsigKeyName`` is defined, this field is
                              required.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                      route53:
                        description: Use the AWS Route53 API to manage DNS01 challenge
                          records.
                        type: object
                        required:
                        - region
                        properties:
                          accessKeyID:
                            description: 'The AccessKeyID is used for authentication.
                              Cannot be set when SecretAccessKeyID is set. If neither
                              the Access Key nor Key ID are set, we fall-back to using
                              env vars, shared credentials file or AWS Instance metadata,
                              see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                            type: string
                          accessKeyIDSecretRef:
                            description: 'The SecretAccessKey is used for authentication.
                              If set, pull the AWS access key ID from a key within
                              a Kubernetes Secret. Cannot be set when AccessKeyID
                              is set. If neither the Access Key nor Key ID are set,
                              we fall-back to using env vars, shared credentials file
                              or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                          hostedZoneID:
                            description: If set, the provider will manage only this
                              zone in Route53 and will not do an lookup using the
                              route53:ListHostedZonesByName api call.
                            type: string
                          region:
                            description: Always set the region when using AccessKeyID
                              and SecretAccessKey
                            type: string
                          role:
                            description: Role is a Role ARN which the Route53 provider
                              will assume using either the explicit credentials AccessKeyID/SecretAccessKey
                              or the inferred credentials from environment variables,
                              shared credentials file or AWS Instance metadata
                            type: string
                          secretAccessKeySecretRef:
                            description: 'The SecretAccessKey is used for authentication.
                              If neither the Access Key nor Key ID are set, we fall-back
                              to using env vars, shared credentials file or AWS Instance
                              metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                      webhook:
                        description: Configure an external webhook based DNS01 challenge
                          solver to manage DNS01 challenge records.
                        type: object
                        required:
                        - groupName
                        - solverName
                        properties:
                          config:
                            description: Additional configuration that should be passed
                              to the webhook apiserver when challenges are processed.
                              This can contain arbitrary JSON data. Secret values
                              should not be specified in this stanza. If secret values
                              are needed (e.g. credentials for a DNS service), you
                              should use a SecretKeySelector to reference a Secret
                              resource. For details on the schema of this field, consult
                              the webhook provider implementation's documentation.
                            x-kubernetes-preserve-unknown-fields: true
                          groupName:
                            description: The API group name that should be used when
                              POSTing ChallengePayload resources to the webhook apiserver.
                              This should be the same as the GroupName specified in
                              the webhook provider implementation.
                            type: string
                          solverName:
                            description: The name of the solver to use, as defined
                              in the webhook provider implementation. This will typically
                              be the name of the provider, e.g. 'cloudflare'.
                            type: string
                  http01:
                    description: Configures cert-manager to attempt to complete authorizations
                      by performing the HTTP01 challenge flow. It is not possible
                      to obtain certificates for wildcard domain names (e.g. `*.example.com`)
                      using the HTTP01 challenge mechanism.
                    type: object
                    properties:
                      gatewayHTTPRoute:
                        description: The Gateway API is a sig-network community API
                          that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                          The Gateway solver will create HTTPRoutes with the specified
                          labels in the same namespace as the challenge. This solver
                          is experimental, and fields / behaviour may change in the
                          future.
                        type: object
                        properties:
                          labels:
                            description: Custom labels that will be applied to HTTPRoutes
                              created by cert-manager while solving HTTP-01 challenges.
                            type: object
                            additionalProperties:
                              type: string
                          parentRefs:
                            description: 'When solving an HTTP-01 challenge, cert-manager
                              creates an HTTPRoute. cert-manager needs to know which
                              parentRefs should be used when creating the HTTPRoute.
                              Usually, the parentRef references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways'
                            type: array
                            items:
                              description: "ParentReference identifies an API object\
                                \ (usually a Gateway) that can be considered a parent\
                                \ of this resource (usually a route). The only kind\
                                \ of parent resource with \"Core\" support is Gateway.\
                                \ This API may be extended in the future to support\
                                \ additional kinds of parent resources, such as HTTPRoute.\
                                \ \n The API object must be valid in the cluster;\
                                \ the Group and Kind must be registered in the cluster\
                                \ for this reference to be valid."
                              type: object
                              required:
                              - name
                              properties:
                                group:
                                  description: "Group is the group of the referent.\
                                    \ When unspecified, \"gateway.networking.k8s.io\"\
                                    \ is inferred. To set the core API group (such\
                                    \ as for a \"Service\" kind referent), Group must\
                                    \ be explicitly set to \"\" (empty string). \n\
                                    \ Support: Core"
                                  type: string
                                  default: gateway.networking.k8s.io
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                kind:
                                  description: "Kind is kind of the referent. \n Support:\
                                    \ Core (Gateway) \n Support: Implementation-specific\
                                    \ (Other Resources)"
                                  type: string
                                  default: Gateway
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                name:
                                  description: "Name is the name of the referent.\
                                    \ \n Support: Core"
                                  type: string
                                  maxLength: 253
                                  minLength: 1
                                namespace:
                                  description: "Namespace is the namespace of the\
                                    \ referent. When unspecified, this refers to the\
                                    \ local namespace of the Route. \n Note that there\
                                    \ are specific rules for ParentRefs which cross\
                                    \ namespace boundaries. Cross-namespace references\
                                    \ are only valid if they are explicitly allowed\
                                    \ by something in the namespace they are referring\
                                    \ to. For example: Gateway has the AllowedRoutes\
                                    \ field, and ReferenceGrant provides a generic\
                                    \ way to enable any other kind of cross-namespace\
                                    \ reference. \n Support: Core"
                                  type: string
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                port:
                                  description: "Port is the network port this Route\
                                    \ targets. It can be interpreted differently based\
                                    \ on the type of parent resource. \n When the\
                                    \ parent resource is a Gateway, this targets all\
                                    \ listeners listening on the specified port that\
                                    \ also support this kind of Route(and select this\
                                    \ Route). It's not recommended to set `Port` unless\
                                    \ the networking behaviors specified in a Route\
                                    \ must apply to a specific port as opposed to\
                                    \ a listener(s) whose port(s) may be changed.\
                                    \ When both Port and SectionName are specified,\
                                    \ the name and port of the selected listener must\
                                    \ match both specified values. \n Implementations\
                                    \ MAY choose to support other parent resources.\
                                    \ Implementations supporting other types of parent\
                                    \ resources MUST clearly document how/if Port\
                                    \ is interpreted. \n For the purpose of status,\
                                    \ an attachment is considered successful as long\
                                    \ as the parent resource accepts it partially.\
                                    \ For example, Gateway listeners can restrict\
                                    \ which Routes can attach to them by Route kind,\
                                    \ namespace, or hostname. If 1 of 2 Gateway listeners\
                                    \ accept attachment from the referencing Route,\
                                    \ the Route MUST be considered successfully attached.\
                                    \ If no Gateway listeners accept attachment from\
                                    \ this Route, the Route MUST be considered detached\
                                    \ from the Gateway. \n Support: Extended \n <gateway:experimental>"
                                  type: integer
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                sectionName:
                                  description: "SectionName is the name of a section\
                                    \ within the target resource. In the following\
                                    \ resources, SectionName is interpreted as the\
                                    \ following: \n * Gateway: Listener Name. When\
                                    \ both Port (experimental) and SectionName are\
                                    \ specified, the name and port of the selected\
                                    \ listener must match both specified values. \n\
                                    \ Implementations MAY choose to support attaching\
                                    \ Routes to other resources. If that is the case,\
                                    \ they MUST clearly document how SectionName is\
                                    \ interpreted. \n When unspecified (empty string),\
                                    \ this will reference the entire resource. For\
                                    \ the purpose of status, an attachment is considered\
                                    \ successful if at least one section in the parent\
                                    \ resource accepts it. For example, Gateway listeners\
                                    \ can restrict which Routes can attach to them\
                                    \ by Route kind, namespace, or hostname. If 1\
                                    \ of 2 Gateway listeners accept attachment from\
                                    \ the referencing Route, the Route MUST be considered\
                                    \ successfully attached. If no Gateway listeners\
                                    \ accept attachment from this Route, the Route\
                                    \ MUST be considered detached from the Gateway.\
                                    \ \n Support: Core"
                                  type: string
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          serviceType:
                            description: Optional service type for Kubernetes solver
                              service. Supported values are NodePort or ClusterIP.
                              If unset, defaults to NodePort.
                            type: string
                      ingress:
                        description: The ingress based HTTP01 challenge solver will
                          solve challenges by creating or modifying Ingress resources
                          in order to route requests for '/.well-known/acme-challenge/XYZ'
                          to 'challenge solver' pods that are provisioned by cert-manager
                          for each Challenge to be completed.
                        type: object
                        properties:
                          class:
                            description: The ingress class to use when creating Ingress
                              resources to solve ACME challenges that use this challenge
                              solver. Only one of 'class' or 'name' may be specified.
                            type: string
                          ingressTemplate:
                            description: Optional ingress template used to configure
                              the ACME challenge solver ingress used for HTTP01 challenges.
                            type: object
                            properties:
                              metadata:
                                description: ObjectMeta overrides for the ingress
                                  used to solve HTTP01 challenges. Only the 'labels'
                                  and 'annotations' fields may be set. If labels or
                                  annotations overlap with in-built values, the values
                                  here will override the in-built values.
                                type: object
                                properties:
                                  annotations:
                                    description: Annotations that should be added
                                      to the created ACME HTTP01 solver ingress.
                                    type: object
                                    additionalProperties:
                                      type: string
                                  labels:
                                    description: Labels that should be added to the
                                      created ACME HTTP01 solver ingress.
                                    type: object
                                    additionalProperties:
                                      type: string
                          name:
                            description: The name of the ingress resource that should
                              have ACME challenge solving routes inserted into it
                              in order to solve HTTP01 challenges. This is typically
                              used in conjunction with ingress controllers like ingress-gce,
                              which maintains a 1:1 mapping between external IPs and
                              ingress resources.
                            type: string
                          podTemplate:
                            description: Optional pod template used to configure the
                              ACME challenge solver pods used for HTTP01 challenges.
                            type: object
                            properties:
                              metadata:
                                description: ObjectMeta overrides for the pod used
                                  to solve HTTP01 challenges. Only the 'labels' and
                                  'annotations' fields may be set. If labels or annotations
                                  overlap with in-built values, the values here will
                                  override the in-built values.
                                type: object
                                properties:
                                  annotations:
                                    description: Annotations that should be added
                                      to the create ACME HTTP01 solver pods.
                                    type: object
                                    additionalProperties:
                                      type: string
                                  labels:
                                    description: Labels that should be added to the
                                      created ACME HTTP01 solver pods.
                                    type: object
                                    additionalProperties:
                                      type: string
                              spec:
                                description: PodSpec defines overrides for the HTTP01
                                  challenge solver pod. Only the 'priorityClassName',
                                  'nodeSelector', 'affinity', 'serviceAccountName'
                                  and 'tolerations' fields are supported currently.
                                  All other fields will be ignored.
                                type: object
                                properties:
                                  affinity:
                                    description: If specified, the pod's scheduling
                                      constraints
                                    type: object
                                    properties:
                                      nodeAffinity:
                                        description: Describes node affinity scheduling
                                          rules for the pod.
                                        type: object
                                        properties:
                                          preferredDuringSchedulingIgnoredDuringExecution:
                                            description: The scheduler will prefer
                                              to schedule pods to nodes that satisfy
                                              the affinity expressions specified by
                                              this field, but it may choose a node
                                              that violates one or more of the expressions.
                                              The node that is most preferred is the
                                              one with the greatest sum of weights,
                                              i.e. for each node that meets all of
                                              the scheduling requirements (resource
                                              request, requiredDuringScheduling affinity
                                              expressions, etc.), compute a sum by
                                              iterating through the elements of this
                                              field and adding "weight" to the sum
                                              if the node matches the corresponding
                                              matchExpressions; the node(s) with the
                                              highest sum are the most preferred.
                                            type: array
                                            items:
                                              description: An empty preferred scheduling
                                                term matches all objects with implicit
                                                weight 0 (i.e. it's a no-op). A null
                                                preferred scheduling term matches
                                                no objects (i.e. is also a no-op).
                                              type: object
                                              required:
                                              - preference
                                              - weight
                                              properties:
                                                preference:
                                                  description: A node selector term,
                                                    associated with the corresponding
                                                    weight.
                                                  type: object
                                                  properties:
                                                    matchExpressions:
                                                      description: A list of node
                                                        selector requirements by node's
                                                        labels.
                                                      type: array
                                                      items:
                                                        description: A node selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        type: object
                                                        required:
                                                        - key
                                                        - operator
                                                        properties:
                                                          key:
                                                            description: The label
                                                              key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: Represents
                                                              a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists, DoesNotExist.
                                                              Gt, and Lt.
                                                            type: string
                                                          values:
                                                            description: An array
                                                              of string values. If
                                                              the operator is In or
                                                              NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. If the operator
                                                              is Gt or Lt, the values
                                                              array must have a single
                                                              element, which will
                                                              be interpreted as an
                                                              integer. This array
                                                              is replaced during a
                                                              strategic merge patch.
                                                            type: array
                                                            items:
                                                              type: string
                                                    matchFields:
                                                      description: A list of node
                                                        selector requirements by node's
                                                        fields.
                                                      type: array
                                                      items:
                                                        description: A node selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        type: object
                                                        required:
                                                        - key
                                                        - operator
                                                        properties:
                                                          key:
                                                            description: The label
                                                              key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: Represents
                                                              a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists, DoesNotExist.
                                                              Gt, and Lt.
                                                            type: string
                                                          values:
                                                            description: An array
                                                              of string values. If
                                                              the operator is In or
                                                              NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. If the operator
                                                              is Gt or Lt, the values
                                                              array must have a single
                                                              element, which will
                                                              be interpreted as an
                                                              integer. This array
                                                              is replaced during a
                                                              strategic merge patch.
                                                            type: array
                                                            items:
                                                              type: string
                                                  x-kubernetes-map-type: atomic
                                                weight:
                                                  description: Weight associated with
                                                    matching the corresponding nodeSelectorTerm,
                                                    in the range 1-100.
                                                  type: integer
                                                  format: int32
                                          requiredDuringSchedulingIgnoredDuringExecution:
                                            description: If the affinity requirements
                                              specified by this field are not met
                                              at scheduling time, the pod will not
                                              be scheduled onto the node. If the affinity
                                              requirements specified by this field
                                              cease to be met at some point during
                                              pod execution (e.g. due to an update),
                                              the system may or may not try to eventually
                                              evict the pod from its node.
                                            type: object
                                            required:
                                            - nodeSelectorTerms
                                            properties:
                                              nodeSelectorTerms:
                                                description: Required. A list of node
                                                  selector terms. The terms are ORed.
                                                type: array
                                                items:
                                                  description: A null or empty node
                                                    selector term matches no objects.
                                                    The requirements of them are ANDed.
                                                    The TopologySelectorTerm type
                                                    implements a subset of the NodeSelectorTerm.
                                                  type: object
                                                  properties:
                                                    matchExpressions:
                                                      description: A list of node
                                                        selector requirements by node's
                                                        labels.
                                                      type: array
                                                      items:
                                                        description: A node selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        type: object
                                                        required:
                                                        - key
                                                        - operator
                                                        properties:
                                                          key:
                                                            description: The label
                                                              key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: Represents
                                                              a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists, DoesNotExist.
                                                              Gt, and Lt.
                                                            type: string
                                                          values:
                                                            description: An array
                                                              of string values. If
                                                              the operator is In or
                                                              NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. If the operator
                                                              is Gt or Lt, the values
                                                              array must have a single
                                                              element, which will
                                                              be interpreted as an
                                                              integer. This array
                                                              is replaced during a
                                                              strategic merge patch.
                                                            type: array
                                                            items:
                                                              type: string
                                                    matchFields:
                                                      description: A list of node
                                                        selector requirements by node's
                                                        fields.
                                                      type: array
                                                      items:
                                                        description: A node selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        type: object
                                                        required:
                                                        - key
                                                        - operator
                                                        properties:
                                                          key:
                                                            description: The label
                                                              key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: Represents
                                                              a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists, DoesNotExist.
                                                              Gt, and Lt.
                                                            type: string
                                                          values:
                                                            description: An array
                                                              of string values. If
                                                              the operator is In or
                                                              NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. If the operator
                                                              is Gt or Lt, the values
                                                              array must have a single
                                                              element, which will
                                                              be interpreted as an
                                                              integer. This array
                                                              is replaced during a
                                                              strategic merge patch.
                                                            type: array
                                                            items:
                                                              type: string
                                                  x-kubernetes-map-type: atomic
                                            x-kubernetes-map-type: atomic
                                      podAffinity:
                                        description: Describes pod affinity scheduling
                                          rules (e.g. co-locate this pod in the same
                                          node, zone, etc. as some other pod(s)).
                                        type: object
                                        properties:
                                          preferredDuringSchedulingIgnoredDuringExecution:
                                            description: The scheduler will prefer
                                              to schedule pods to nodes that satisfy
                                              the affinity expressions specified by
                                              this field, but it may choose a node
                                              that violates one or more of the expressions.
                                              The node that is most preferred is the
                                              one with the greatest sum of weights,
                                              i.e. for each node that meets all of
                                              the scheduling requirements (resource
                                              request, requiredDuringScheduling affinity
                                              expressions, etc.), compute a sum by
                                              iterating through the elements of this
                                              field and adding "weight" to the sum
                                              if the node has pods which matches the
                                              corresponding podAffinityTerm; the node(s)
                                              with the highest sum are the most preferred.
                                            type: array
                                            items:
                                              description: The weights of all of the
                                                matched WeightedPodAffinityTerm fields
                                                are added per-node to find the most
                                                preferred node(s)
                                              type: object
                                              required:
                                              - podAffinityTerm
                                              - weight
                                              properties:
                                                podAffinityTerm:
                                                  description: Required. A pod affinity
                                                    term, associated with the corresponding
                                                    weight.
                                                  type: object
                                                  required:
                                                  - topologyKey
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this
                                                        case pods.
                                                      type: object
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          type: array
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            type: object
                                                            required:
                                                            - key
                                                            - operator
                                                            properties:
                                                              key:
                                                                description: key is
                                                                  the label key that
                                                                  the selector applies
                                                                  to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's
                                                                  relationship to
                                                                  a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists
                                                                  and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values
                                                                  is an array of string
                                                                  values. If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                type: array
                                                                items:
                                                                  type: string
                                                        matchLabels:
                                                          description: matchLabels
                                                            is a map of {key,value}
                                                            pairs. A single {key,value}
                                                            in the matchLabels map
                                                            is equivalent to an element
                                                            of matchExpressions, whose
                                                            key field is "key", the
                                                            operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                          additionalProperties:
                                                            type: string
                                                      x-kubernetes-map-type: atomic
                                                    namespaceSelector:
                                                      description: A label query over
                                                        the set of namespaces that
                                                        the term applies to. The term
                                                        is applied to the union of
                                                        the namespaces selected by
                                                        this field and the ones listed
                                                        in the namespaces field. null
                                                        selector and null or empty
                                                        namespaces list means "this
                                                        pod's namespace". An empty
                                                        selector ({}) matches all
                                                        namespaces.
                                                      type: object
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          type: array
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            type: object
                                                            required:
                                                            - key
                                                            - operator
                                                            properties:
                                                              key:
                                                                description: key is
                                                                  the label key that
                                                                  the selector applies
                                                                  to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's
                                                                  relationship to
                                                                  a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists
                                                                  and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values
                                                                  is an array of string
                                                                  values. If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                type: array
                                                                items:
                                                                  type: string
                                                        matchLabels:
                                                          description: matchLabels
                                                            is a map of {key,value}
                                                            pairs. A single {key,value}
                                                            in the matchLabels map
                                                            is equivalent to an element
                                                            of matchExpressions, whose
                                                            key field is "key", the
                                                            operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                          additionalProperties:
                                                            type: string
                                                      x-kubernetes-map-type: atomic
                                                    namespaces:
                                                      description: namespaces specifies
                                                        a static list of namespace
                                                        names that the term applies
                                                        to. The term is applied to
                                                        the union of the namespaces
                                                        listed in this field and the
                                                        ones selected by namespaceSelector.
                                                        null or empty namespaces list
                                                        and null namespaceSelector
                                                        means "this pod's namespace".
                                                      type: array
                                                      items:
                                                        type: string
                                                    topologyKey:
                                                      description: This pod should
                                                        be co-located (affinity) or
                                                        not co-located (anti-affinity)
                                                        with the pods matching the
                                                        labelSelector in the specified
                                                        namespaces, where co-located
                                                        is defined as running on a
                                                        node whose value of the label
                                                        with key topologyKey matches
                                                        that of any node on which
                                                        any of the selected pods is
                                                        running. Empty topologyKey
                                                        is not allowed.
                                                      type: string
                                                weight:
                                                  description: weight associated with
                                                    matching the corresponding podAffinityTerm,
                                                    in the range 1-100.
                                                  type: integer
                                                  format: int32
                                          requiredDuringSchedulingIgnoredDuringExecution:
                                            description: If the affinity requirements
                                              specified by this field are not met
                                              at scheduling time, the pod will not
                                              be scheduled onto the node. If the affinity
                                              requirements specified by this field
                                              cease to be met at some point during
                                              pod execution (e.g. due to a pod label
                                              update), the system may or may not try
                                              to eventually evict the pod from its
                                              node. When there are multiple elements,
                                              the lists of nodes corresponding to
                                              each podAffinityTerm are intersected,
                                              i.e. all terms must be satisfied.
                                            type: array
                                            items:
                                              description: Defines a set of pods (namely
                                                those matching the labelSelector relative
                                                to the given namespace(s)) that this
                                                pod should be co-located (affinity)
                                                or not co-located (anti-affinity)
                                                with, where co-located is defined
                                                as running on a node whose value of
                                                the label with key <topologyKey> matches
                                                that of any node on which a pod of
                                                the set of pods is running
                                              type: object
                                              required:
                                              - topologyKey
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  type: object
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      type: array
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        type: object
                                                        required:
                                                        - key
                                                        - operator
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            type: array
                                                            items:
                                                              type: string
                                                    matchLabels:
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                      additionalProperties:
                                                        type: string
                                                  x-kubernetes-map-type: atomic
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                  type: object
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      type: array
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        type: object
                                                        required:
                                                        - key
                                                        - operator
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            type: array
                                                            items:
                                                              type: string
                                                    matchLabels:
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                      additionalProperties:
                                                        type: string
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace".
                                                  type: array
                                                  items:
                                                    type: string
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                      podAntiAffinity:
                                        description: Describes pod anti-affinity scheduling
                                          rules (e.g. avoid putting this pod in the
                                          same node, zone, etc. as some other pod(s)).
                                        type: object
                                        properties:
                                          preferredDuringSchedulingIgnoredDuringExecution:
                                            description: The scheduler will prefer
                                              to schedule pods to nodes that satisfy
                                              the anti-affinity expressions specified
                                              by this field, but it may choose a node
                                              that violates one or more of the expressions.
                                              The node that is most preferred is the
                                              one with the greatest sum of weights,
                                              i.e. for each node that meets all of
                                              the scheduling requirements (resource
                                              request, requiredDuringScheduling anti-affinity
                                              expressions, etc.), compute a sum by
                                              iterating through the elements of this
                                              field and adding "weight" to the sum
                                              if the node has pods which matches the
                                              corresponding podAffinityTerm; the node(s)
                                              with the highest sum are the most preferred.
                                            type: array
                                            items:
                                              description: The weights of all of the
                                                matched WeightedPodAffinityTerm fields
                                                are added per-node to find the most
                                                preferred node(s)
                                              type: object
                                              required:
                                              - podAffinityTerm
                                              - weight
                                              properties:
                                                podAffinityTerm:
                                                  description: Required. A pod affinity
                                                    term, associated with the corresponding
                                                    weight.
                                                  type: object
                                                  required:
                                                  - topologyKey
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this
                                                        case pods.
                                                      type: object
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          type: array
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            type: object
                                                            required:
                                                            - key
                                                            - operator
                                                            properties:
                                                              key:
                                                                description: key is
                                                                  the label key that
                                                                  the selector applies
                                                                  to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's
                                                                  relationship to
                                                                  a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists
                                                                  and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values
                                                                  is an array of string
                                                                  values. If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                type: array
                                                                items:
                                                                  type: string
                                                        matchLabels:
                                                          description: matchLabels
                                                            is a map of {key,value}
                                                            pairs. A single {key,value}
                                                            in the matchLabels map
                                                            is equivalent to an element
                                                            of matchExpressions, whose
                                                            key field is "key", the
                                                            operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                          additionalProperties:
                                                            type: string
                                                      x-kubernetes-map-type: atomic
                                                    namespaceSelector:
                                                      description: A label query over
                                                        the set of namespaces that
                                                        the term applies to. The term
                                                        is applied to the union of
                                                        the namespaces selected by
                                                        this field and the ones listed
                                                        in the namespaces field. null
                                                        selector and null or empty
                                                        namespaces list means "this
                                                        pod's namespace". An empty
                                                        selector ({}) matches all
                                                        namespaces.
                                                      type: object
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          type: array
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            type: object
                                                            required:
                                                            - key
                                                            - operator
                                                            properties:
                                                              key:
                                                                description: key is
                                                                  the label key that
                                                                  the selector applies
                                                                  to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's
                                                                  relationship to
                                                                  a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists
                                                                  and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values
                                                                  is an array of string
                                                                  values. If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                type: array
                                                                items:
                                                                  type: string
                                                        matchLabels:
                                                          description: matchLabels
                                                            is a map of {key,value}
                                                            pairs. A single {key,value}
                                                            in the matchLabels map
                                                            is equivalent to an element
                                                            of matchExpressions, whose
                                                            key field is "key", the
                                                            operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                          additionalProperties:
                                                            type: string
                                                      x-kubernetes-map-type: atomic
                                                    namespaces:
                                                      description: namespaces specifies
                                                        a static list of namespace
                                                        names that the term applies
                                                        to. The term is applied to
                                                        the union of the namespaces
                                                        listed in this field and the
                                                        ones selected by namespaceSelector.
                                                        null or empty namespaces list
                                                        and null namespaceSelector
                                                        means "this pod's namespace".
                                                      type: array
                                                      items:
                                                        type: string
                                                    topologyKey:
                                                      description: This pod should
                                                        be co-located (affinity) or
                                                        not co-located (anti-affinity)
                                                        with the pods matching the
                                                        labelSelector in the specified
                                                        namespaces, where co-located
                                                        is defined as running on a
                                                        node whose value of the label
                                                        with key topologyKey matches
                                                        that of any node on which
                                                        any of the selected pods is
                                                        running. Empty topologyKey
                                                        is not allowed.
                                                      type: string
                                                weight:
                                                  description: weight associated with
                                                    matching the corresponding podAffinityTerm,
                                                    in the range 1-100.
                                                  type: integer
                                                  format: int32
                                          requiredDuringSchedulingIgnoredDuringExecution:
                                            description: If the anti-affinity requirements
                                              specified by this field are not met
                                              at scheduling time, the pod will not
                                              be scheduled onto the node. If the anti-affinity
                                              requirements specified by this field
                                              cease to be met at some point during
                                              pod execution (e.g. due to a pod label
                                              update), the system may or may not try
                                              to eventually evict the pod from its
                                              node. When there are multiple elements,
                                              the lists of nodes corresponding to
                                              each podAffinityTerm are intersected,
                                              i.e. all terms must be satisfied.
                                            type: array
                                            items:
                                              description: Defines a set of pods (namely
                                                those matching the labelSelector relative
                                                to the given namespace(s)) that this
                                                pod should be co-located (affinity)
                                                or not co-located (anti-affinity)
                                                with, where co-located is defined
                                                as running on a node whose value of
                                                the label with key <topologyKey> matches
                                                that of any node on which a pod of
                                                the set of pods is running
                                              type: object
                                              required:
                                              - topologyKey
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  type: object
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      type: array
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        type: object
                                                        required:
                                                        - key
                                                        - operator
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            type: array
                                                            items:
                                                              type: string
                                                    matchLabels:
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                      additionalProperties:
                                                        type: string
                                                  x-kubernetes-map-type: atomic
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                  type: object
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      type: array
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        type: object
                                                        required:
                                                        - key
                                                        - operator
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            type: array
                                                            items:
                                                              type: string
                                                    matchLabels:
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                      additionalProperties:
                                                        type: string
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace".
                                                  type: array
                                                  items:
                                                    type: string
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                  nodeSelector:
                                    description: 'NodeSelector is a selector which
                                      must be true for the pod to fit on a node. Selector
                                      which must match a node''s labels for the pod
                                      to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                    type: object
                                    additionalProperties:
                                      type: string
                                  priorityClassName:
                                    description: If specified, the pod's priorityClassName.
                                    type: string
                                  serviceAccountName:
                                    description: If specified, the pod's service account
                                    type: string
                                  tolerations:
                                    description: If specified, the pod's tolerations.
                                    type: array
                                    items:
                                      description: The pod this Toleration is attached
                                        to tolerates any taint that matches the triple
                                        <key,value,effect> using the matching operator
                                        <operator>.
                                      type: object
                                      properties:
                                        effect:
                                          description: Effect indicates the taint
                                            effect to match. Empty means match all
                                            taint effects. When specified, allowed
                                            values are NoSchedule, PreferNoSchedule
                                            and NoExecute.
                                          type: string
                                        key:
                                          description: Key is the taint key that the
                                            toleration applies to. Empty means match
                                            all taint keys. If the key is empty, operator
                                            must be Exists; this combination means
                                            to match all values and all keys.
                                          type: string
                                        operator:
                                          description: Operator represents a key's
                                            relationship to the value. Valid operators
                                            are Exists and Equal. Defaults to Equal.
                                            Exists is equivalent to wildcard for value,
                                            so that a pod can tolerate all taints
                                            of a particular category.
                                          type: string
                                        tolerationSeconds:
                                          description: TolerationSeconds represents
                                            the period of time the toleration (which
                                            must be of effect NoExecute, otherwise
                                            this field is ignored) tolerates the taint.
                                            By default, it is not set, which means
                                            tolerate the taint forever (do not evict).
                                            Zero and negative values will be treated
                                            as 0 (evict immediately) by the system.
                                          type: integer
                                          format: int64
                                        value:
                                          description: Value is the taint value the
                                            toleration matches to. If the operator
                                            is Exists, the value should be empty,
                                            otherwise just a regular string.
                                          type: string
                          serviceType:
                            description: Optional service type for Kubernetes solver
                              service. Supported values are NodePort or ClusterIP.
                              If unset, defaults to NodePort.
                            type: string
                  selector:
                    description: Selector selects a set of DNSNames on the Certificate
                      resource that should be solved using this challenge solver.
                      If not specified, the solver will be treated as the 'default'
                      solver with the lowest priority, i.e. if any other solver has
                      a more specific match, it will be used instead.
                    type: object
                    properties:
                      dnsNames:
                        description: List of DNSNames that this solver will be used
                          to solve. If specified and a match is found, a dnsNames
                          selector will take precedence over a dnsZones selector.
                          If multiple solvers match with the same dnsNames value,
                          the solver with the most matching labels in matchLabels
                          will be selected. If neither has more matches, the solver
                          defined earlier in the list will be selected.
                        type: array
                        items:
                          type: string
                      dnsZones:
                        description: List of DNSZones that this solver will be used
                          to solve. The most specific DNS zone match specified here
                          will take precedence over other DNS zone matches, so a solver
                          specifying sys.example.com will be selected over one specifying
                          example.com for the domain www.sys.example.com. If multiple
                          solvers match with the same dnsZones value, the solver with
                          the most matching labels in matchLabels will be selected.
                          If neither has more matches, the solver defined earlier
                          in the list will be selected.
                        type: array
                        items:
                          type: string
                      matchLabels:
                        description: A label selector that is used to refine the set
                          of certificate's that this challenge solver will apply to.
                        type: object
                        additionalProperties:
                          type: string
              token:
                description: The ACME challenge token for this challenge. This is
                  the raw value returned from the ACME server.
                type: string
              type:
                description: The type of ACME challenge this resource represents.
                  One of "HTTP-01" or "DNS-01".
                type: string
                enum:
                - HTTP-01
                - DNS-01
              url:
                description: The URL of the ACME Challenge resource for this challenge.
                  This can be used to lookup details about the status of this challenge.
                type: string
              wildcard:
                description: wildcard will be true if this challenge is for a wildcard
                  identifier, for example '*.example.com'.
                type: boolean
          status:
            type: object
            properties:
              presented:
                description: presented will be set to true if the challenge values
                  for this challenge are currently 'presented'. This *does not* imply
                  the self check is passing. Only that the values have been 'submitted'
                  for the appropriate challenge mechanism (i.e. the DNS01 TXT record
                  has been presented, or the HTTP01 configuration has been configured).
                type: boolean
              processing:
                description: Used to denote whether this challenge should be processed
                  or not. This field will only be set to true by the 'scheduling'
                  component. It will only be set to false by the 'challenges' controller,
                  after the challenge has reached a final state or timed out. If this
                  field is set to false, the challenge controller will not take any
                  more action.
                type: boolean
              reason:
                description: Contains human readable information on why the Challenge
                  is in the current state.
                type: string
              state:
                description: Contains the current 'state' of the challenge. If not
                  set, the state of the challenge is unknown.
                type: string
                enum:
                - valid
                - ready
                - pending
                - processing
                - invalid
                - expired
                - errored
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: certificaterequests.cert-manager.io
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
spec:
  group: cert-manager.io
  names:
    kind: CertificateRequest
    listKind: CertificateRequestList
    plural: certificaterequests
    shortNames:
    - cr
    - crs
    singular: certificaterequest
    categories:
    - cert-manager
  scope: Namespaced
  versions:
  - name: v1
    subresources:
      status: {}
    additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Approved")].status
      name: Approved
      type: string
    - jsonPath: .status.conditions[?(@.type=="Denied")].status
      name: Denied
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.issuerRef.name
      name: Issuer
      type: string
    - jsonPath: .spec.username
      name: Requestor
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      description: CreationTimestamp is a timestamp representing the server time when
        this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC.
      name: Age
      type: date
    schema:
      openAPIV3Schema:
        description: "A CertificateRequest is used to request a signed certificate\
          \ from one of the configured issuers. \n All fields within the CertificateRequest's\
          \ `spec` are immutable after creation. A CertificateRequest will either\
          \ succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest\
          \ is a one-shot resource, meaning it represents a single point in time request\
          \ for a certificate and cannot be re-used."
        type: object
        required:
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Desired state of the CertificateRequest resource.
            type: object
            required:
            - issuerRef
            - request
            properties:
              duration:
                description: The requested 'duration' (i.e. lifetime) of the Certificate.
                  This option may be ignored/overridden by some issuer types.
                type: string
              extra:
                description: Extra contains extra attributes of the user that created
                  the CertificateRequest. Populated by the cert-manager webhook on
                  creation and immutable.
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              groups:
                description: Groups contains group membership of the user that created
                  the CertificateRequest. Populated by the cert-manager webhook on
                  creation and immutable.
                type: array
                items:
                  type: string
                x-kubernetes-list-type: atomic
              isCA:
                description: IsCA will request to mark the certificate as valid for
                  certificate signing when submitting to the issuer. This will automatically
                  add the `cert sign` usage to the list of `usages`.
                type: boolean
              issuerRef:
                description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                  the `kind` field is not set, or set to `Issuer`, an Issuer resource
                  with the given name in the same namespace as the CertificateRequest
                  will be used.  If the `kind` field is set to `ClusterIssuer`, a
                  ClusterIssuer with the provided name will be used. The `name` field
                  in this stanza is required at all times. The group field refers
                  to the API group of the issuer which defaults to `cert-manager.io`
                  if empty.
                type: object
                required:
                - name
                properties:
                  group:
                    description: Group of the resource being referred to.
                    type: string
                  kind:
                    description: Kind of the resource being referred to.
                    type: string
                  name:
                    description: Name of the resource being referred to.
                    type: string
              request:
                description: The PEM-encoded x509 certificate signing request to be
                  submitted to the CA for signing.
                type: string
                format: byte
              uid:
                description: UID contains the uid of the user that created the CertificateRequest.
                  Populated by the cert-manager webhook on creation and immutable.
                type: string
              usages:
                description: Usages is the set of x509 usages that are requested for
                  the certificate. If usages are set they SHOULD be encoded inside
                  the CSR spec Defaults to `digital signature` and `key encipherment`
                  if not specified.
                type: array
                items:
                  description: "KeyUsage specifies valid usage contexts for keys.\
                    \ See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3 https://tools.ietf.org/html/rfc5280#section-4.2.1.12\
                    \ \n Valid KeyUsage values are as follows: \"signing\", \"digital\
                    \ signature\", \"content commitment\", \"key encipherment\", \"\
                    key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\"\
                    , \"encipher only\", \"decipher only\", \"any\", \"server auth\"\
                    , \"client auth\", \"code signing\", \"email protection\", \"\
                    s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\"\
                    , \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape\
                    \ sgc\""
                  type: string
                  enum:
                  - signing
                  - digital signature
                  - content commitment
                  - key encipherment
                  - key agreement
                  - data encipherment
                  - cert sign
                  - crl sign
                  - encipher only
                  - decipher only
                  - any
                  - server auth
                  - client auth
                  - code signing
                  - email protection
                  - s/mime
                  - ipsec end system
                  - ipsec tunnel
                  - ipsec user
                  - timestamping
                  - ocsp signing
                  - microsoft sgc
                  - netscape sgc
              username:
                description: Username contains the name of the user that created the
                  CertificateRequest. Populated by the cert-manager webhook on creation
                  and immutable.
                type: string
          status:
            description: Status of the CertificateRequest. This is set and managed
              automatically.
            type: object
            properties:
              ca:
                description: The PEM encoded x509 certificate of the signer, also
                  known as the CA (Certificate Authority). This is set on a best-effort
                  basis by different issuers. If not set, the CA is assumed to be
                  unknown/not available.
                type: string
                format: byte
              certificate:
                description: The PEM encoded x509 certificate resulting from the certificate
                  signing request. If not set, the CertificateRequest has either not
                  been completed or has failed. More information on failure can be
                  found by checking the `conditions` field.
                type: string
                format: byte
              conditions:
                description: List of status conditions to indicate the status of a
                  CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                type: array
                items:
                  description: CertificateRequestCondition contains condition information
                    for a CertificateRequest.
                  type: object
                  required:
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      type: string
                      format: date-time
                    message:
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                      type: string
                    reason:
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of (`True`, `False`,
                        `Unknown`).
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: Type of the condition, known values are (`Ready`,
                        `InvalidRequest`, `Approved`, `Denied`).
                      type: string
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              failureTime:
                description: FailureTime stores the time that this CertificateRequest
                  failed. This is used to influence garbage collection and back-off.
                type: string
                format: date-time
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: issuers.cert-manager.io
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
spec:
  group: cert-manager.io
  names:
    kind: Issuer
    listKind: IssuerList
    plural: issuers
    singular: issuer
    categories:
    - cert-manager
  scope: Namespaced
  versions:
  - name: v1
    subresources:
      status: {}
    additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      description: CreationTimestamp is a timestamp representing the server time when
        this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC.
      name: Age
      type: date
    schema:
      openAPIV3Schema:
        description: An Issuer represents a certificate issuing authority which can
          be referenced as part of `issuerRef` fields. It is scoped to a single namespace
          and can therefore only be referenced by resources within the same namespace.
        type: object
        required:
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Desired state of the Issuer resource.
            type: object
            properties:
              acme:
                description: ACME configures this issuer to communicate with a RFC8555
                  (ACME) server to obtain signed x509 certificates.
                type: object
                required:
                - privateKeySecretRef
                - server
                properties:
                  caBundle:
                    description: Base64-encoded bundle of PEM CAs which can be used
                      to validate the certificate chain presented by the ACME server.
                      Mutually exclusive with SkipTLSVerify; prefer using CABundle
                      to prevent various kinds of security vulnerabilities. If CABundle
                      and SkipTLSVerify are unset, the system certificate bundle inside
                      the container is used to validate the TLS connection.
                    type: string
                    format: byte
                  disableAccountKeyGeneration:
                    description: Enables or disables generating a new ACME account
                      key. If true, the Issuer resource will *not* request a new account
                      but will expect the account key to be supplied via an existing
                      secret. If false, the cert-manager system will generate a new
                      ACME account key for the Issuer. Defaults to false.
                    type: boolean
                  email:
                    description: Email is the email address to be associated with
                      the ACME account. This field is optional, but it is strongly
                      recommended to be set. It will be used to contact you in case
                      of issues with your account or certificates, including expiry
                      notification emails. This field may be updated after the account
                      is initially registered.
                    type: string
                  enableDurationFeature:
                    description: Enables requesting a Not After date on certificates
                      that matches the duration of the certificate. This is not supported
                      by all ACME servers like Let's Encrypt. If set to true when
                      the ACME server does not support it it will create an error
                      on the Order. Defaults to false.
                    type: boolean
                  externalAccountBinding:
                    description: ExternalAccountBinding is a reference to a CA external
                      account of the ACME server. If set, upon registration cert-manager
                      will attempt to associate the given external account credentials
                      with the registered ACME account.
                    type: object
                    required:
                    - keyID
                    - keySecretRef
                    properties:
                      keyAlgorithm:
                        description: 'Deprecated: keyAlgorithm field exists for historical
                          compatibility reasons and should not be used. The algorithm
                          is now hardcoded to HS256 in golang/x/crypto/acme.'
                        type: string
                        enum:
                        - HS256
                        - HS384
                        - HS512
                      keyID:
                        description: keyID is the ID of the CA key that the External
                          Account is bound to.
                        type: string
                      keySecretRef:
                        description: keySecretRef is a Secret Key Selector referencing
                          a data item in a Kubernetes Secret which holds the symmetric
                          MAC key of the External Account Binding. The `key` is the
                          index string that is paired with the key data in the Secret
                          and should not be confused with the key data itself, or
                          indeed with the External Account Binding keyID above. The
                          secret key stored in the Secret **must** be un-padded, base64
                          URL encoded data.
                        type: object
                        required:
                        - name
                        properties:
                          key:
                            description: The key of the entry in the Secret resource's
                              `data` field to be used. Some instances of this field
                              may be defaulted, in others it may be required.
                            type: string
                          name:
                            description: 'Name of the resource being referred to.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                  preferredChain:
                    description: 'PreferredChain is the chain to use if the ACME server
                      outputs multiple. PreferredChain is no guarantee that this one
                      gets delivered by the ACME endpoint. For example, for Let''s
                      Encrypt''s DST crosssign you would use: "DST Root CA X3" or
                      "ISRG Root X1" for the newer Let''s Encrypt root CA. This value
                      picks the first certificate bundle in the ACME alternative chains
                      that has a certificate with this value as its issuer''s CN'
                    type: string
                    maxLength: 64
                  privateKeySecretRef:
                    description: PrivateKey is the name of a Kubernetes Secret resource
                      that will be used to store the automatically generated ACME
                      account private key. Optionally, a `key` may be specified to
                      select a specific entry within the named Secret resource. If
                      `key` is not specified, a default of `tls.key` will be used.
                    type: object
                    required:
                    - name
                    properties:
                      key:
                        description: The key of the entry in the Secret resource's
                          `data` field to be used. Some instances of this field may
                          be defaulted, in others it may be required.
                        type: string
                      name:
                        description: 'Name of the resource being referred to. More
                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                  server:
                    description: 'Server is the URL used to access the ACME server''s
                      ''directory'' endpoint. For example, for Let''s Encrypt''s staging
                      endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                      Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                    type: string
                  skipTLSVerify:
                    description: 'INSECURE: Enables or disables validation of the
                      ACME server TLS certificate. If true, requests to the ACME server
                      will not have the TLS certificate chain validated. Mutually
                      exclusive with CABundle; prefer using CABundle to prevent various
                      kinds of security vulnerabilities. Only enable this option in
                      development environments. If CABundle and SkipTLSVerify are
                      unset, the system certificate bundle inside the container is
                      used to validate the TLS connection. Defaults to false.'
                    type: boolean
                  solvers:
                    description: 'Solvers is a list of challenge solvers that will
                      be used to solve ACME challenges for the matching domains. Solver
                      configurations must be provided in order to obtain certificates
                      from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'
                    type: array
                    items:
                      description: An ACMEChallengeSolver describes how to solve ACME
                        challenges for the issuer it is part of. A selector may be
                        provided to use different solving strategies for different
                        DNS names. Only one of HTTP01 or DNS01 must be provided.
                      type: object
                      properties:
                        dns01:
                          description: Configures cert-manager to attempt to complete
                            authorizations by performing the DNS01 challenge flow.
                          type: object
                          properties:
                            acmeDNS:
                              description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                API to manage DNS01 challenge records.
                              type: object
                              required:
                              - accountSecretRef
                              - host
                              properties:
                                accountSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                host:
                                  type: string
                            akamai:
                              description: Use the Akamai DNS zone management API
                                to manage DNS01 challenge records.
                              type: object
                              required:
                              - accessTokenSecretRef
                              - clientSecretSecretRef
                              - clientTokenSecretRef
                              - serviceConsumerDomain
                              properties:
                                accessTokenSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                clientSecretSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                clientTokenSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                serviceConsumerDomain:
                                  type: string
                            azureDNS:
                              description: Use the Microsoft Azure DNS API to manage
                                DNS01 challenge records.
                              type: object
                              required:
                              - resourceGroupName
                              - subscriptionID
                              properties:
                                clientID:
                                  description: if both this and ClientSecret are left
                                    unset MSI will be used
                                  type: string
                                clientSecretSecretRef:
                                  description: if both this and ClientID are left
                                    unset MSI will be used
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                environment:
                                  description: name of the Azure environment (default
                                    AzurePublicCloud)
                                  type: string
                                  enum:
                                  - AzurePublicCloud
                                  - AzureChinaCloud
                                  - AzureGermanCloud
                                  - AzureUSGovernmentCloud
                                hostedZoneName:
                                  description: name of the DNS zone that should be
                                    used
                                  type: string
                                managedIdentity:
                                  description: managed identity configuration, can
                                    not be used at the same time as clientID, clientSecretSecretRef
                                    or tenantID
                                  type: object
                                  properties:
                                    clientID:
                                      description: client ID of the managed identity,
                                        can not be used at the same time as resourceID
                                      type: string
                                    resourceID:
                                      description: resource ID of the managed identity,
                                        can not be used at the same time as clientID
                                      type: string
                                resourceGroupName:
                                  description: resource group the DNS zone is located
                                    in
                                  type: string
                                subscriptionID:
                                  description: ID of the Azure subscription
                                  type: string
                                tenantID:
                                  description: when specifying ClientID and ClientSecret
                                    then this field is also needed
                                  type: string
                            cloudDNS:
                              description: Use the Google Cloud DNS API to manage
                                DNS01 challenge records.
                              type: object
                              required:
                              - project
                              properties:
                                hostedZoneName:
                                  description: HostedZoneName is an optional field
                                    that tells cert-manager in which Cloud DNS zone
                                    the challenge record has to be created. If left
                                    empty cert-manager will automatically choose a
                                    zone.
                                  type: string
                                project:
                                  type: string
                                serviceAccountSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                            cloudflare:
                              description: Use the Cloudflare API to manage DNS01
                                challenge records.
                              type: object
                              properties:
                                apiKeySecretRef:
                                  description: 'API key to use to authenticate with
                                    Cloudflare. Note: using an API token to authenticate
                                    is now the recommended method as it allows greater
                                    control of permissions.'
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                apiTokenSecretRef:
                                  description: API token used to authenticate with
                                    Cloudflare.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                email:
                                  description: Email of the account, only required
                                    when using API key based authentication.
                                  type: string
                            cnameStrategy:
                              description: CNAMEStrategy configures how the DNS01
                                provider should handle CNAME records when found in
                                DNS zones.
                              type: string
                              enum:
                              - None
                              - Follow
                            digitalocean:
                              description: Use the DigitalOcean DNS API to manage
                                DNS01 challenge records.
                              type: object
                              required:
                              - tokenSecretRef
                              properties:
                                tokenSecretRef:
                                  description: A reference to a specific 'key' within
                                    a Secret resource. In some instances, `key` is
                                    a required field.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                            rfc2136:
                              description: Use RFC2136 ("Dynamic Updates in the Domain
                                Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                to manage DNS01 challenge records.
                              type: object
                              required:
                              - nameserver
                              properties:
                                nameserver:
                                  description: "The IP address or hostname of an authoritative\
                                    \ DNS server supporting RFC2136 in the form host:port.\
                                    \ If the host is an IPv6 address it must be enclosed\
                                    \ in square brackets (e.g [2001:db8::1])\_; port\
                                    \ is optional. This field is required."
                                  type: string
                                tsigAlgorithm:
                                  description: 'The TSIG Algorithm configured in the
                                    DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                    and ``tsigKeyName`` are defined. Supported values
                                    are (case-insensitive): ``HMACMD5`` (default),
                                    ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                  type: string
                                tsigKeyName:
                                  description: The TSIG Key name configured in the
                                    DNS. If ``tsigSecretSecretRef`` is defined, this
                                    field is required.
                                  type: string
                                tsigSecretSecretRef:
                                  description: The name of the secret containing the
                                    TSIG value. If ``tsigKeyName`` is defined, this
                                    field is required.
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                            route53:
                              description: Use the AWS Route53 API to manage DNS01
                                challenge records.
                              type: object
                              required:
                              - region
                              properties:
                                accessKeyID:
                                  description: 'The AccessKeyID is used for authentication.
                                    Cannot be set when SecretAccessKeyID is set. If
                                    neither the Access Key nor Key ID are set, we
                                    fall-back to using env vars, shared credentials
                                    file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                  type: string
                                accessKeyIDSecretRef:
                                  description: 'The SecretAccessKey is used for authentication.
                                    If set, pull the AWS access key ID from a key
                                    within a Kubernetes Secret. Cannot be set when
                                    AccessKeyID is set. If neither the Access Key
                                    nor Key ID are set, we fall-back to using env
                                    vars, shared credentials file or AWS Instance
                                    metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                hostedZoneID:
                                  description: If set, the provider will manage only
                                    this zone in Route53 and will not do an lookup
                                    using the route53:ListHostedZonesByName api call.
                                  type: string
                                region:
                                  description: Always set the region when using AccessKeyID
                                    and SecretAccessKey
                                  type: string
                                role:
                                  description: Role is a Role ARN which the Route53
                                    provider will assume using either the explicit
                                    credentials AccessKeyID/SecretAccessKey or the
                                    inferred credentials from environment variables,
                                    shared credentials file or AWS Instance metadata
                                  type: string
                                secretAccessKeySecretRef:
                                  description: 'The SecretAccessKey is used for authentication.
                                    If neither the Access Key nor Key ID are set,
                                    we fall-back to using env vars, shared credentials
                                    file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                  type: object
                                  required:
                                  - name
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret
                                        resource's `data` field to be used. Some instances
                                        of this field may be defaulted, in others
                                        it may be required.
                                      type: string
                                    name:
                                      description: 'Name of the resource being referred
                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                            webhook:
                              description: Configure an external webhook based DNS01
                                challenge solver to manage DNS01 challenge records.
                              type: object
                              required:
                              - groupName
                              - solverName
                              properties:
                                config:
                                  description: Additional configuration that should
                                    be passed to the webhook apiserver when challenges
                                    are processed. This can contain arbitrary JSON
                                    data. Secret values should not be specified in
                                    this stanza. If secret values are needed (e.g.
                                    credentials for a DNS service), you should use
                                    a SecretKeySelector to reference a Secret resource.
                                    For details on the schema of this field, consult
                                    the webhook provider implementation's documentation.
                                  x-kubernetes-preserve-unknown-fields: true
                                groupName:
                                  description: The API group name that should be used
                                    when POSTing ChallengePayload resources to the
                                    webhook apiserver. This should be the same as
                                    the GroupName specified in the webhook provider
                                    implementation.
                                  type: string
                                solverName:
                                  description: The name of the solver to use, as defined
                                    in the webhook provider implementation. This will
                                    typically be the name of the provider, e.g. 'cloudflare'.
                                  type: string
                        http01:
                          description: Configures cert-manager to attempt to complete
                            authorizations by performing the HTTP01 challenge flow.
                            It is not possible to obtain certificates for wildcard
                            domain names (e.g. `*.example.com`) using the HTTP01 challenge
                            mechanism.
                          type: object
                          properties:
                            gatewayHTTPRoute:
                              description: The Gateway API is a sig-network community
                                API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                                The Gateway solver will create HTTPRoutes with the
                                specified labels in the same namespace as the challenge.
                                This solver is experimental, and fields / behaviour
                                may change in the future.
                              type: object
                              properties:
                                labels:
                                  description: Custom labels that will be applied
                                    to HTTPRoutes created by cert-manager while solving
                                    HTTP-01 challenges.
                                  type: object
                                  additionalProperties:
                                    type: string
                                parentRefs:
                                  description: 'When solving an HTTP-01 challenge,
                                    cert-manager creates an HTTPRoute. cert-manager
                                    needs to know which parentRefs should be used
                                    when creating the HTTPRoute. Usually, the parentRef
                                    references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways'
                                  type: array
                                  items:
                                    description: "ParentReference identifies an API\
                                      \ object (usually a Gateway) that can be considered\
                                      \ a parent of this resource (usually a route).\
                                      \ The only kind of parent resource with \"Core\"\
                                      \ support is Gateway. This API may be extended\
                                      \ in the future to support additional kinds\
                                      \ of parent resources, such as HTTPRoute. \n\
                                      \ The API object must be valid in the cluster;\
                                      \ the Group and Kind must be registered in the\
                                      \ cluster for this reference to be valid."
                                    type: object
                                    required:
                                    - name
                                    properties:
                                      group:
                                        description: "Group is the group of the referent.\
                                          \ When unspecified, \"gateway.networking.k8s.io\"\
                                          \ is inferred. To set the core API group\
                                          \ (such as for a \"Service\" kind referent),\
                                          \ Group must be explicitly set to \"\" (empty\
                                          \ string). \n Support: Core"
                                        type: string
                                        default: gateway.networking.k8s.io
                                        maxLength: 253
                                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      kind:
                                        description: "Kind is kind of the referent.\
                                          \ \n Support: Core (Gateway) \n Support:\
                                          \ Implementation-specific (Other Resources)"
                                        type: string
                                        default: Gateway
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      name:
                                        description: "Name is the name of the referent.\
                                          \ \n Support: Core"
                                        type: string
                                        maxLength: 253
                                        minLength: 1
                                      namespace:
                                        description: "Namespace is the namespace of\
                                          \ the referent. When unspecified, this refers\
                                          \ to the local namespace of the Route. \n\
                                          \ Note that there are specific rules for\
                                          \ ParentRefs which cross namespace boundaries.\
                                          \ Cross-namespace references are only valid\
                                          \ if they are explicitly allowed by something\
                                          \ in the namespace they are referring to.\
                                          \ For example: Gateway has the AllowedRoutes\
                                          \ field, and ReferenceGrant provides a generic\
                                          \ way to enable any other kind of cross-namespace\
                                          \ reference. \n Support: Core"
                                        type: string
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      port:
                                        description: "Port is the network port this\
                                          \ Route targets. It can be interpreted differently\
                                          \ based on the type of parent resource.\
                                          \ \n When the parent resource is a Gateway,\
                                          \ this targets all listeners listening on\
                                          \ the specified port that also support this\
                                          \ kind of Route(and select this Route).\
                                          \ It's not recommended to set `Port` unless\
                                          \ the networking behaviors specified in\
                                          \ a Route must apply to a specific port\
                                          \ as opposed to a listener(s) whose port(s)\
                                          \ may be changed. When both Port and SectionName\
                                          \ are specified, the name and port of the\
                                          \ selected listener must match both specified\
                                          \ values. \n Implementations MAY choose\
                                          \ to support other parent resources. Implementations\
                                          \ supporting other types of parent resources\
                                          \ MUST clearly document how/if Port is interpreted.\
                                          \ \n For the purpose of status, an attachment\
                                          \ is considered successful as long as the\
                                          \ parent resource accepts it partially.\
                                          \ For example, Gateway listeners can restrict\
                                          \ which Routes can attach to them by Route\
                                          \ kind, namespace, or hostname. If 1 of\
                                          \ 2 Gateway listeners accept attachment\
                                          \ from the referencing Route, the Route\
                                          \ MUST be considered successfully attached.\
                                          \ If no Gateway listeners accept attachment\
                                          \ from this Route, the Route MUST be considered\
                                          \ detached from the Gateway. \n Support:\
                                          \ Extended \n <gateway:experimental>"
                                        type: integer
                                        format: int32
                                        maximum: 65535
                                        minimum: 1
                                      sectionName:
                                        description: "SectionName is the name of a\
                                          \ section within the target resource. In\
                                          \ the following resources, SectionName is\
                                          \ interpreted as the following: \n * Gateway:\
                                          \ Listener Name. When both Port (experimental)\
                                          \ and SectionName are specified, the name\
                                          \ and port of the selected listener must\
                                          \ match both specified values. \n Implementations\
                                          \ MAY choose to support attaching Routes\
                                          \ to other resources. If that is the case,\
                                          \ they MUST clearly document how SectionName\
                                          \ is interpreted. \n When unspecified (empty\
                                          \ string), this will reference the entire\
                                          \ resource. For the purpose of status, an\
                                          \ attachment is considered successful if\
                                          \ at least one section in the parent resource\
                                          \ accepts it. For example, Gateway listeners\
                                          \ can restrict which Routes can attach to\
                                          \ them by Route kind, namespace, or hostname.\
                                          \ If 1 of 2 Gateway listeners accept attachment\
                                          \ from the referencing Route, the Route\
                                          \ MUST be considered successfully attached.\
                                          \ If no Gateway listeners accept attachment\
                                          \ from this Route, the Route MUST be considered\
                                          \ detached from the Gateway. \n Support:\
                                          \ Core"
                                        type: string
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                serviceType:
                                  description: Optional service type for Kubernetes
                                    solver service. Supported values are NodePort
                                    or ClusterIP. If unset, defaults to NodePort.
                                  type: string
                            ingress:
                              description: The ingress based HTTP01 challenge solver
                                will solve challenges by creating or modifying Ingress
                                resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                to 'challenge solver' pods that are provisioned by
                                cert-manager for each Challenge to be completed.
                              type: object
                              properties:
                                class:
                                  description: The ingress class to use when creating
                                    Ingress resources to solve ACME challenges that
                                    use this challenge solver. Only one of 'class'
                                    or 'name' may be specified.
                                  type: string
                                ingressTemplate:
                                  description: Optional ingress template used to configure
                                    the ACME challenge solver ingress used for HTTP01
                                    challenges.
                                  type: object
                                  properties:
                                    metadata:
                                      description: ObjectMeta overrides for the ingress
                                        used to solve HTTP01 challenges. Only the
                                        'labels' and 'annotations' fields may be set.
                                        If labels or annotations overlap with in-built
                                        values, the values here will override the
                                        in-built values.
                                      type: object
                                      properties:
                                        annotations:
                                          description: Annotations that should be
                                            added to the created ACME HTTP01 solver
                                            ingress.
                                          type: object
                                          additionalProperties:
                                            type: string
                                        labels:
                                          description: Labels that should be added
                                            to the created ACME HTTP01 solver ingress.
                                          type: object
                                          additionalProperties:
                                            type: string
                                name:
                                  description: The name of the ingress resource that
                                    should have ACME challenge solving routes inserted
                                    into it in order to solve HTTP01 challenges. This
                                    is typically used in conjunction with ingress
                                    controllers like ingress-gce, which maintains
                                    a 1:1 mapping between external IPs and ingress
                                    resources.
                                  type: string
                                podTemplate:
                                  description: Optional pod template used to configure
                                    the ACME challenge solver pods used for HTTP01
                                    challenges.
                                  type: object
                                  properties:
                                    metadata:
                                      description: ObjectMeta overrides for the pod
                                        used to solve HTTP01 challenges. Only the
                                        'labels' and 'annotations' fields may be set.
                                        If labels or annotations overlap with in-built
                                        values, the values here will override the
                                        in-built values.
                                      type: object
                                      properties:
                                        annotations:
                                          description: Annotations that should be
                                            added to the create ACME HTTP01 solver
                                            pods.
                                          type: object
                                          additionalProperties:
                                            type: string
                                        labels:
                                          description: Labels that should be added
                                            to the created ACME HTTP01 solver pods.
                                          type: object
                                          additionalProperties:
                                            type: string
                                    spec:
                                      description: PodSpec defines overrides for the
                                        HTTP01 challenge solver pod. Only the 'priorityClassName',
                                        'nodeSelector', 'affinity', 'serviceAccountName'
                                        and 'tolerations' fields are supported currently.
                                        All other fields will be ignored.
                                      type: object
                                      properties:
                                        affinity:
                                          description: If specified, the pod's scheduling
                                            constraints
                                          type: object
                                          properties:
                                            nodeAffinity:
                                              description: Describes node affinity
                                                scheduling rules for the pod.
                                              type: object
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node matches
                                                    the corresponding matchExpressions;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  type: array
                                                  items:
                                                    description: An empty preferred
                                                      scheduling term matches all
                                                      objects with implicit weight
                                                      0 (i.e. it's a no-op). A null
                                                      preferred scheduling term matches
                                                      no objects (i.e. is also a no-op).
                                                    type: object
                                                    required:
                                                    - preference
                                                    - weight
                                                    properties:
                                                      preference:
                                                        description: A node selector
                                                          term, associated with the
                                                          corresponding weight.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                        x-kubernetes-map-type: atomic
                                                      weight:
                                                        description: Weight associated
                                                          with matching the corresponding
                                                          nodeSelectorTerm, in the
                                                          range 1-100.
                                                        type: integer
                                                        format: int32
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to an
                                                    update), the system may or may
                                                    not try to eventually evict the
                                                    pod from its node.
                                                  type: object
                                                  required:
                                                  - nodeSelectorTerms
                                                  properties:
                                                    nodeSelectorTerms:
                                                      description: Required. A list
                                                        of node selector terms. The
                                                        terms are ORed.
                                                      type: array
                                                      items:
                                                        description: A null or empty
                                                          node selector term matches
                                                          no objects. The requirements
                                                          of them are ANDed. The TopologySelectorTerm
                                                          type implements a subset
                                                          of the NodeSelectorTerm.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                        x-kubernetes-map-type: atomic
                                                  x-kubernetes-map-type: atomic
                                            podAffinity:
                                              description: Describes pod affinity
                                                scheduling rules (e.g. co-locate this
                                                pod in the same node, zone, etc. as
                                                some other pod(s)).
                                              type: object
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node has pods
                                                    which matches the corresponding
                                                    podAffinityTerm; the node(s) with
                                                    the highest sum are the most preferred.
                                                  type: array
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    type: object
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        type: object
                                                        required:
                                                        - topologyKey
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                            x-kubernetes-map-type: atomic
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                            x-kubernetes-map-type: atomic
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace".
                                                            type: array
                                                            items:
                                                              type: string
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        type: integer
                                                        format: int32
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to a pod
                                                    label update), the system may
                                                    or may not try to eventually evict
                                                    the pod from its node. When there
                                                    are multiple elements, the lists
                                                    of nodes corresponding to each
                                                    podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  type: array
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    type: object
                                                    required:
                                                    - topologyKey
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace".
                                                        type: array
                                                        items:
                                                          type: string
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                            podAntiAffinity:
                                              description: Describes pod anti-affinity
                                                scheduling rules (e.g. avoid putting
                                                this pod in the same node, zone, etc.
                                                as some other pod(s)).
                                              type: object
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the anti-affinity
                                                    expressions specified by this
                                                    field, but it may choose a node
                                                    that violates one or more of the
                                                    expressions. The node that is
                                                    most preferred is the one with
                                                    the greatest sum of weights, i.e.
                                                    for each node that meets all of
                                                    the scheduling requirements (resource
                                                    request, requiredDuringScheduling
                                                    anti-affinity expressions, etc.),
                                                    compute a sum by iterating through
                                                    the elements of this field and
                                                    adding "weight" to the sum if
                                                    the node has pods which matches
                                                    the corresponding podAffinityTerm;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  type: array
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    type: object
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        type: object
                                                        required:
                                                        - topologyKey
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                            x-kubernetes-map-type: atomic
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                            x-kubernetes-map-type: atomic
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace".
                                                            type: array
                                                            items:
                                                              type: string
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        type: integer
                                                        format: int32
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the anti-affinity
                                                    requirements specified by this
                                                    field are not met at scheduling
                                                    time, the pod will not be scheduled
                                                    onto the node. If the anti-affinity
                                                    requirements specified by this
                                                    field cease to be met at some
                                                    point during pod execution (e.g.
                                                    due to a pod label update), the
                                                    system may or may not try to eventually
                                                    evict the pod from its node. When
                                                    there are multiple elements, the
                                                    lists of nodes corresponding to
                                                    each podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  type: array
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    type: object
                                                    required:
                                                    - topologyKey
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace".
                                                        type: array
                                                        items:
                                                          type: string
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                        nodeSelector:
                                          description: 'NodeSelector is a selector
                                            which must be true for the pod to fit
                                            on a node. Selector which must match a
                                            node''s labels for the pod to be scheduled
                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                          type: object
                                          additionalProperties:
                                            type: string
                                        priorityClassName:
                                          description: If specified, the pod's priorityClassName.
                                          type: string
                                        serviceAccountName:
                                          description: If specified, the pod's service
                                            account
                                          type: string
                                        tolerations:
                                          description: If specified, the pod's tolerations.
                                          type: array
                                          items:
                                            description: The pod this Toleration is
                                              attached to tolerates any taint that
                                              matches the triple <key,value,effect>
                                              using the matching operator <operator>.
                                            type: object
                                            properties:
                                              effect:
                                                description: Effect indicates the
                                                  taint effect to match. Empty means
                                                  match all taint effects. When specified,
                                                  allowed values are NoSchedule, PreferNoSchedule
                                                  and NoExecute.
                                                type: string
                                              key:
                                                description: Key is the taint key
                                                  that the toleration applies to.
                                                  Empty means match all taint keys.
                                                  If the key is empty, operator must
                                                  be Exists; this combination means
                                                  to match all values and all keys.
                                                type: string
                                              operator:
                                                description: Operator represents a
                                                  key's relationship to the value.
                                                  Valid operators are Exists and Equal.
                                                  Defaults to Equal. Exists is equivalent
                                                  to wildcard for value, so that a
                                                  pod can tolerate all taints of a
                                                  particular category.
                                                type: string
                                              tolerationSeconds:
                                                description: TolerationSeconds represents
                                                  the period of time the toleration
                                                  (which must be of effect NoExecute,
                                                  otherwise this field is ignored)
                                                  tolerates the taint. By default,
                                                  it is not set, which means tolerate
                                                  the taint forever (do not evict).
                                                  Zero and negative values will be
                                                  treated as 0 (evict immediately)
                                                  by the system.
                                                type: integer
                                                format: int64
                                              value:
                                                description: Value is the taint value
                                                  the toleration matches to. If the
                                                  operator is Exists, the value should
                                                  be empty, otherwise just a regular
                                                  string.
                                                type: string
                                serviceType:
                                  description: Optional service type for Kubernetes
                                    solver service. Supported values are NodePort
                                    or ClusterIP. If unset, defaults to NodePort.
                                  type: string
                        selector:
                          description: Selector selects a set of DNSNames on the Certificate
                            resource that should be solved using this challenge solver.
                            If not specified, the solver will be treated as the 'default'
                            solver with the lowest priority, i.e. if any other solver
                            has a more specific match, it will be used instead.
                          type: object
                          properties:
                            dnsNames:
                              description: List of DNSNames that this solver will
                                be used to solve. If specified and a match is found,
                                a dnsNames selector will take precedence over a dnsZones
                                selector. If multiple solvers match with the same
                                dnsNames value, the solver with the most matching
                                labels in matchLabels will be selected. If neither
                                has more matches, the solver defined earlier in the
                                list will be selected.
                              type: array
                              items:
                                type: string
                            dnsZones:
                              description: List of DNSZones that this solver will
                                be used to solve. The most specific DNS zone match
                                specified here will take precedence over other DNS
                                zone matches, so a solver specifying sys.example.com
                                will be selected over one specifying example.com for
                                the domain www.sys.example.com. If multiple solvers
                                match with the same dnsZones value, the solver with
                                the most matching labels in matchLabels will be selected.
                                If neither has more matches, the solver defined earlier
                                in the list will be selected.
                              type: array
                              items:
                                type: string
                            matchLabels:
                              description: A label selector that is used to refine
                                the set of certificate's that this challenge solver
                                will apply to.
                              type: object
                              additionalProperties:
                                type: string
              ca:
                description: CA configures this issuer to sign certificates using
                  a signing CA keypair stored in a Secret resource. This is used to
                  build internal PKIs that are managed by cert-manager.
                type: object
                required:
                - secretName
                properties:
                  crlDistributionPoints:
                    description: The CRL distribution points is an X.509 v3 certificate
                      extension which identifies the location of the CRL from which
                      the revocation of this certificate can be checked. If not set,
                      certificates will be issued without distribution points set.
                    type: array
                    items:
                      type: string
                  ocspServers:
                    description: The OCSP server list is an X.509 v3 extension that
                      defines a list of URLs of OCSP responders. The OCSP responders
                      can be queried for the revocation status of an issued certificate.
                      If not set, the certificate will be issued with no OCSP servers
                      set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                    type: array
                    items:
                      type: string
                  secretName:
                    description: SecretName is the name of the secret used to sign
                      Certificates issued by this Issuer.
                    type: string
              selfSigned:
                description: SelfSigned configures this issuer to 'self sign' certificates
                  using the private key used to create the CertificateRequest object.
                type: object
                properties:
                  crlDistributionPoints:
                    description: The CRL distribution points is an X.509 v3 certificate
                      extension which identifies the location of the CRL from which
                      the revocation of this certificate can be checked. If not set
                      certificate will be issued without CDP. Values are strings.
                    type: array
                    items:
                      type: string
              vault:
                description: Vault configures this issuer to sign certificates using
                  a HashiCorp Vault PKI backend.
                type: object
                required:
                - auth
                - path
                - server
                properties:
                  auth:
                    description: Auth configures how cert-manager authenticates with
                      the Vault server.
                    type: object
                    properties:
                      appRole:
                        description: AppRole authenticates with Vault using the App
                          Role auth mechanism, with the role and secret stored in
                          a Kubernetes Secret resource.
                        type: object
                        required:
                        - path
                        - roleId
                        - secretRef
                        properties:
                          path:
                            description: 'Path where the App Role authentication backend
                              is mounted in Vault, e.g: "approle"'
                            type: string
                          roleId:
                            description: RoleID configured in the App Role authentication
                              backend when setting up the authentication backend in
                              Vault.
                            type: string
                          secretRef:
                            description: Reference to a key in a Secret that contains
                              the App Role secret used to authenticate with Vault.
                              The `key` field must be specified and denotes which
                              entry within the Secret resource is used as the app
                              role secret.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                      kubernetes:
                        description: Kubernetes authenticates with Vault by passing
                          the ServiceAccount token stored in the named Secret resource
                          to the Vault server.
                        type: object
                        required:
                        - role
                        - secretRef
                        properties:
                          mountPath:
                            description: The Vault mountPath here is the mount path
                              to use when authenticating with Vault. For example,
                              setting a value to `/v1/auth/foo`, will use the path
                              `/v1/auth/foo/login` to authenticate with Vault. If
                              unspecified, the default value "/v1/auth/kubernetes"
                              will be used.
                            type: string
                          role:
                            description: A required field containing the Vault Role
                              to assume. A Role binds a Kubernetes ServiceAccount
                              with a set of Vault policies.
                            type: string
                          secretRef:
                            description: The required Secret field containing a Kubernetes
                              ServiceAccount JWT used for authenticating with Vault.
                              Use of 'ambient credentials' is not supported.
                            type: object
                            required:
                            - name
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred
                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                      tokenSecretRef:
                        description: TokenSecretRef authenticates with Vault by presenting
                          a token.
                        type: object
                        required:
                        - name
                        properties:
                          key:
                            description: The key of the entry in the Secret resource's
                              `data` field to be used. Some instances of this field
                              may be defaulted, in others it may be required.
                            type: string
                          name:
                            description: 'Name of the resource being referred to.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                  caBundle:
                    description: Base64-encoded bundle of PEM CAs which will be used
                      to validate the certificate chain presented by Vault. Only used
                      if using HTTPS to connect to Vault and ignored for HTTP connections.
                      Mutually exclusive with CABundleSecretRef. If neither CABundle
                      nor CABundleSecretRef are defined, the certificate bundle in
                      the cert-manager controller container is used to validate the
                      TLS connection.
                    type: string
                    format: byte
                  caBundleSecretRef:
                    description: Reference to a Secret containing a bundle of PEM-encoded
                      CAs to use when verifying the certificate chain presented by
                      Vault when using HTTPS. Mutually exclusive with CABundle. If
                      neither CABundle nor CABundleSecretRef are defined, the certificate
                      bundle in the cert-manager controller container is used to validate
                      the TLS connection. If no key for the Secret is specified, cert-manager
                      will default to 'ca.crt'.
                    type: object
                    required:
                    - name
                    properties:
                      key:
                        description: The key of the entry in the Secret resource's
                          `data` field to be used. Some instances of this field may
                          be defaulted, in others it may be required.
                        type: string
                      name:
                        description: 'Name of the resource being referred to. More
                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                  namespace:
                    description: 'Name of the vault namespace. Namespaces is a set
                      of features within Vault Enterprise that allows Vault environments
                      to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                      can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                    type: string
                  path:
                    description: 'Path is the mount path of the Vault PKI backend''s
                      `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                    type: string
                  server:
                    description: 'Server is the connection address for the Vault server,
                      e.g: "https://vault.example.com:8200".'
                    type: string
              venafi:
                description: Venafi configures this issuer to sign certificates using
                  a Venafi TPP or Venafi Cloud policy zone.
                type: object
                required:
                - zone
                properties:
                  cloud:
                    description: Cloud specifies the Venafi cloud configuration settings.
                      Only one of TPP or Cloud may be specified.
                    type: object
                    required:
                    - apiTokenSecretRef
                    properties:
                      apiTokenSecretRef:
                        description: APITokenSecretRef is a secret key selector for
                          the Venafi Cloud API token.
                        type: object
                        required:
                        - name
                        properties:
                          key:
                            description: The key of the entry in the Secret resource's
                              `data` field to be used. Some instances of this field
                              may be defaulted, in others it may be required.
                            type: string
                          name:
                            description: 'Name of the resource being referred to.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                      url:
                        description: URL is the base URL for Venafi Cloud. Defaults
                          to "https://api.venafi.cloud/v1".
                        type: string
                  tpp:
                    description: TPP specifies Trust Protection Platform configuration
                      settings. Only one of TPP or Cloud may be specified.
                    type: object
                    required:
                    - credentialsRef
                    - url
                    properties:
                      caBundle:
                        description: Base64-encoded bundle of PEM CAs which will be
                          used to validate the certificate chain presented by the
                          TPP server. Only used if using HTTPS; ignored for HTTP.
                          If undefined, the certificate bundle in the cert-manager
                          controller container is used to validate the chain.
                        type: string
                        format: byte
                      credentialsRef:
                        description: CredentialsRef is a reference to a Secret containing
                          the username and password for the TPP server. The secret
                          must contain two keys, 'username' and 'password'.
                        type: object
                        required:
                        - name
                        properties:
                          name:
                            description: 'Name of the resource being referred to.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                      url:
                        description: 'URL is the base URL for the vedsdk endpoint
                          of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                        type: string
                  zone:
                    description: Zone is the Venafi Policy Zone to use for this issuer.
                      All requests made to the Venafi platform will be restricted
                      by the named zone policy. This field is required.
                    type: string
          status:
            description: Status of the Issuer. This is set and managed automatically.
            type: object
            properties:
              acme:
                description: ACME specific status options. This field should only
                  be set if the Issuer is configured to use an ACME server to issue
                  certificates.
                type: object
                properties:
                  lastRegisteredEmail:
                    description: LastRegisteredEmail is the email associated with
                      the latest registered ACME account, in order to track changes
                      made to registered account associated with the  Issuer
                    type: string
                  uri:
                    description: URI is the unique account identifier, which can also
                      be used to retrieve account details from the CA
                    type: string
              conditions:
                description: List of status conditions to indicate the status of a
                  CertificateRequest. Known condition types are `Ready`.
                type: array
                items:
                  description: IssuerCondition contains condition information for
                    an Issuer.
                  type: object
                  required:
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      type: string
                      format: date-time
                    message:
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the Issuer.
                      type: integer
                      format: int64
                    reason:
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of (`True`, `False`,
                        `Unknown`).
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: Type of the condition, known values are (`Ready`).
                      type: string
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: certificates.cert-manager.io
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
spec:
  group: cert-manager.io
  names:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    shortNames:
    - cert
    - certs
    singular: certificate
    categories:
    - cert-manager
  scope: Namespaced
  versions:
  - name: v1
    subresources:
      status: {}
    additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.secretName
      name: Secret
      type: string
    - jsonPath: .spec.issuerRef.name
      name: Issuer
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      description: CreationTimestamp is a timestamp representing the server time when
        this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC.
      name: Age
      type: date
    schema:
      openAPIV3Schema:
        description: "A Certificate resource should be created to ensure an up to\
          \ date and signed x509 certificate is stored in the Kubernetes Secret resource\
          \ named in `spec.secretName`. \n The stored certificate will be renewed\
          \ before it expires (as configured by `spec.renewBefore`)."
        type: object
        required:
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Desired state of the Certificate resource.
            type: object
            required:
            - issuerRef
            - secretName
            properties:
              additionalOutputFormats:
                description: AdditionalOutputFormats defines extra output formats
                  of the private key and signed certificate chain to be written to
                  this Certificate's target Secret. This is an Alpha Feature and is
                  only enabled with the `--feature-gates=AdditionalCertificateOutputFormats=true`
                  option on both the controller and webhook components.
                type: array
                items:
                  description: CertificateAdditionalOutputFormat defines an additional
                    output format of a Certificate resource. These contain supplementary
                    data formats of the signed certificate chain and paired private
                    key.
                  type: object
                  required:
                  - type
                  properties:
                    type:
                      description: Type is the name of the format type that should
                        be written to the Certificate's target Secret.
                      type: string
                      enum:
                      - DER
                      - CombinedPEM
              commonName:
                description: 'CommonName is a common name to be used on the Certificate.
                  The CommonName should have a length of 64 characters or fewer to
                  avoid generating invalid CSRs. This value is ignored by TLS clients
                  when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4'
                type: string
              dnsNames:
                description: DNSNames is a list of DNS subjectAltNames to be set on
                  the Certificate.
                type: array
                items:
                  type: string
              duration:
                description: The requested 'duration' (i.e. lifetime) of the Certificate.
                  This option may be ignored/overridden by some issuer types. If unset
                  this defaults to 90 days. Certificate will be renewed either 2/3
                  through its duration or `renewBefore` period before its expiry,
                  whichever is later. Minimum accepted duration is 1 hour. Value must
                  be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                type: string
              emailAddresses:
                description: EmailAddresses is a list of email subjectAltNames to
                  be set on the Certificate.
                type: array
                items:
                  type: string
              encodeUsagesInRequest:
                description: EncodeUsagesInRequest controls whether key usages should
                  be present in the CertificateRequest
                type: boolean
              ipAddresses:
                description: IPAddresses is a list of IP address subjectAltNames to
                  be set on the Certificate.
                type: array
                items:
                  type: string
              isCA:
                description: IsCA will mark this Certificate as valid for certificate
                  signing. This will automatically add the `cert sign` usage to the
                  list of `usages`.
                type: boolean
              issuerRef:
                description: IssuerRef is a reference to the issuer for this certificate.
                  If the `kind` field is not set, or set to `Issuer`, an Issuer resource
                  with the given name in the same namespace as the Certificate will
                  be used. If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer
                  with the provided name will be used. The `name` field in this stanza
                  is required at all times.
                type: object
                required:
                - name
                properties:
                  group:
                    description: Group of the resource being referred to.
                    type: string
                  kind:
                    description: Kind of the resource being referred to.
                    type: string
                  name:
                    description: Name of the resource being referred to.
                    type: string
              keystores:
                description: Keystores configures additional keystore output formats
                  stored in the `secretName` Secret resource.
                type: object
                properties:
                  jks:
                    description: JKS configures options for storing a JKS keystore
                      in the `spec.secretName` Secret resource.
                    type: object
                    required:
                    - create
                    - passwordSecretRef
                    properties:
                      create:
                        description: Create enables JKS keystore creation for the
                          Certificate. If true, a file named `keystore.jks` will be
                          created in the target Secret resource, encrypted using the
                          password stored in `passwordSecretRef`. The keystore file
                          will be updated immediately. A file named `truststore.jks`
                          will also be created in the target Secret resource, encrypted
                          using the password stored in `passwordSecretRef` containing
                          the issuing Certificate Authority
                        type: boolean
                      passwordSecretRef:
                        description: PasswordSecretRef is a reference to a key in
                          a Secret resource containing the password used to encrypt
                          the JKS keystore.
                        type: object
                        required:
                        - name
                        properties:
                          key:
                            description: The key of the entry in the Secret resource's
                              `data` field to be used. Some instances of this field
                              may be defaulted, in others it may be required.
                            type: string
                          name:
                            description: 'Name of the resource being referred to.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                  pkcs12:
                    description: PKCS12 configures options for storing a PKCS12 keystore
                      in the `spec.secretName` Secret resource.
                    type: object
                    required:
                    - create
                    - passwordSecretRef
                    properties:
                      create:
                        description: Create enables PKCS12 keystore creation for the
                          Certificate. If true, a file named `keystore.p12` will be
                          created in the target Secret resource, encrypted using the
                          password stored in `passwordSecretRef`. The keystore file
                          will be updated immediately. A file named `truststore.p12`
                          will also be created in the target Secret resource, encrypted
                          using the password stored in `passwordSecretRef` containing
                          the issuing Certificate Authority
                        type: boolean
                      passwordSecretRef:
                        description: PasswordSecretRef is a reference to a key in
                          a Secret resource containing the password used to encrypt
                          the PKCS12 keystore.
                        type: object
                        required:
                        - name
                        properties:
                          key:
                            description: The key of the entry in the Secret resource's
                              `data` field to be used. Some instances of this field
                              may be defaulted, in others it may be required.
                            type: string
                          name:
                            description: 'Name of the resource being referred to.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
              literalSubject:
                description: LiteralSubject is an LDAP formatted string that represents
                  the [X.509 Subject field](https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6).
                  Use this *instead* of the Subject field if you need to ensure the
                  correct ordering of the RDN sequence, such as when issuing certs
                  for LDAP authentication. See https://github.com/cert-manager/cert-manager/issues/3203,
                  https://github.com/cert-manager/cert-manager/issues/4424. This field
                  is alpha level and is only supported by cert-manager installations
                  where LiteralCertificateSubject feature gate is enabled on both
                  cert-manager controller and webhook.
                type: string
              privateKey:
                description: Options to control private keys used for the Certificate.
                type: object
                properties:
                  algorithm:
                    description: Algorithm is the private key algorithm of the corresponding
                      private key for this certificate. If provided, allowed values
                      are either `RSA`,`Ed25519` or `ECDSA` If `algorithm` is specified
                      and `size` is not provided, key size of 256 will be used for
                      `ECDSA` key algorithm and key size of 2048 will be used for
                      `RSA` key algorithm. key size is ignored when using the `Ed25519`
                      key algorithm.
                    type: string
                    enum:
                    - RSA
                    - ECDSA
                    - Ed25519
                  encoding:
                    description: The private key cryptography standards (PKCS) encoding
                      for this certificate's private key to be encoded in. If provided,
                      allowed values are `PKCS1` and `PKCS8` standing for PKCS#1 and
                      PKCS#8, respectively. Defaults to `PKCS1` if not specified.
                    type: string
                    enum:
                    - PKCS1
                    - PKCS8
                  rotationPolicy:
                    description: RotationPolicy controls how private keys should be
                      regenerated when a re-issuance is being processed. If set to
                      Never, a private key will only be generated if one does not
                      already exist in the target `spec.secretName`. If one does exists
                      but it does not have the correct algorithm or size, a warning
                      will be raised to await user intervention. If set to Always,
                      a private key matching the specified requirements will be generated
                      whenever a re-issuance occurs. Default is 'Never' for backward
                      compatibility.
                    type: string
                    enum:
                    - Never
                    - Always
                  size:
                    description: Size is the key bit size of the corresponding private
                      key for this certificate. If `algorithm` is set to `RSA`, valid
                      values are `2048`, `4096` or `8192`, and will default to `2048`
                      if not specified. If `algorithm` is set to `ECDSA`, valid values
                      are `256`, `384` or `521`, and will default to `256` if not
                      specified. If `algorithm` is set to `Ed25519`, Size is ignored.
                      No other values are allowed.
                    type: integer
              renewBefore:
                description: How long before the currently issued certificate's expiry
                  cert-manager should renew the certificate. The default is 2/3 of
                  the issued certificate's duration. Minimum accepted value is 5 minutes.
                  Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                type: string
              revisionHistoryLimit:
                description: revisionHistoryLimit is the maximum number of CertificateRequest
                  revisions that are maintained in the Certificate's history. Each
                  revision represents a single `CertificateRequest` created by this
                  Certificate, either when it was created, renewed, or Spec was changed.
                  Revisions will be removed by oldest first if the number of revisions
                  exceeds this number. If set, revisionHistoryLimit must be a value
                  of `1` or greater. If unset (`nil`), revisions will not be garbage
                  collected. Default value is `nil`.
                type: integer
                format: int32
              secretName:
                description: SecretName is the name of the secret resource that will
                  be automatically created and managed by this Certificate resource.
                  It will be populated with a private key and certificate, signed
                  by the denoted issuer.
                type: string
              secretTemplate:
                description: SecretTemplate defines annotations and labels to be copied
                  to the Certificate's Secret. Labels and annotations on the Secret
                  will be changed as they appear on the SecretTemplate when added
                  or removed. SecretTemplate annotations are added in conjunction
                  with, and cannot overwrite, the base set of annotations cert-manager
                  sets on the Certificate's Secret.
                type: object
                properties:
                  annotations:
                    description: Annotations is a key value map to be copied to the
                      target Kubernetes Secret.
                    type: object
                    additionalProperties:
                      type: string
                  labels:
                    description: Labels is a key value map to be copied to the target
                      Kubernetes Secret.
                    type: object
                    additionalProperties:
                      type: string
              subject:
                description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                type: object
                properties:
                  countries:
                    description: Countries to be used on the Certificate.
                    type: array
                    items:
                      type: string
                  localities:
                    description: Cities to be used on the Certificate.
                    type: array
                    items:
                      type: string
                  organizationalUnits:
                    description: Organizational Units to be used on the Certificate.
                    type: array
                    items:
                      type: string
                  organizations:
                    description: Organizations to be used on the Certificate.
                    type: array
                    items:
                      type: string
                  postalCodes:
                    description: Postal codes to be used on the Certificate.
                    type: array
                    items:
                      type: string
                  provinces:
                    description: State/Provinces to be used on the Certificate.
                    type: array
                    items:
                      type: string
                  serialNumber:
                    description: Serial number to be used on the Certificate.
                    type: string
                  streetAddresses:
                    description: Street addresses to be used on the Certificate.
                    type: array
                    items:
                      type: string
              uris:
                description: URIs is a list of URI subjectAltNames to be set on the
                  Certificate.
                type: array
                items:
                  type: string
              usages:
                description: Usages is the set of x509 usages that are requested for
                  the certificate. Defaults to `digital signature` and `key encipherment`
                  if not specified.
                type: array
                items:
                  description: "KeyUsage specifies valid usage contexts for keys.\
                    \ See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3 https://tools.ietf.org/html/rfc5280#section-4.2.1.12\
                    \ \n Valid KeyUsage values are as follows: \"signing\", \"digital\
                    \ signature\", \"content commitment\", \"key encipherment\", \"\
                    key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\"\
                    , \"encipher only\", \"decipher only\", \"any\", \"server auth\"\
                    , \"client auth\", \"code signing\", \"email protection\", \"\
                    s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\"\
                    , \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape\
                    \ sgc\""
                  type: string
                  enum:
                  - signing
                  - digital signature
                  - content commitment
                  - key encipherment
                  - key agreement
                  - data encipherment
                  - cert sign
                  - crl sign
                  - encipher only
                  - decipher only
                  - any
                  - server auth
                  - client auth
                  - code signing
                  - email protection
                  - s/mime
                  - ipsec end system
                  - ipsec tunnel
                  - ipsec user
                  - timestamping
                  - ocsp signing
                  - microsoft sgc
                  - netscape sgc
          status:
            description: Status of the Certificate. This is set and managed automatically.
            type: object
            properties:
              conditions:
                description: List of status conditions to indicate the status of certificates.
                  Known condition types are `Ready` and `Issuing`.
                type: array
                items:
                  description: CertificateCondition contains condition information
                    for an Certificate.
                  type: object
                  required:
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      type: string
                      format: date-time
                    message:
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the Certificate.
                      type: integer
                      format: int64
                    reason:
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of (`True`, `False`,
                        `Unknown`).
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: Type of the condition, known values are (`Ready`,
                        `Issuing`).
                      type: string
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              failedIssuanceAttempts:
                description: The number of continuous failed issuance attempts up
                  till now. This field gets removed (if set) on a successful issuance
                  and gets set to 1 if unset and an issuance has failed. If an issuance
                  has failed, the delay till the next issuance will be calculated
                  using formula time.Hour * 2 ^ (failedIssuanceAttempts - 1).
                type: integer
              lastFailureTime:
                description: LastFailureTime is the time as recorded by the Certificate
                  controller of the most recent failure to complete a CertificateRequest
                  for this Certificate resource. If set, cert-manager will not re-request
                  another Certificate until 1 hour has elapsed from this time.
                type: string
                format: date-time
              nextPrivateKeySecretName:
                description: The name of the Secret resource containing the private
                  key to be used for the next certificate iteration. The keymanager
                  controller will automatically set this field if the `Issuing` condition
                  is set to `True`. It will automatically unset this field when the
                  Issuing condition is not set or False.
                type: string
              notAfter:
                description: The expiration time of the certificate stored in the
                  secret named by this resource in `spec.secretName`.
                type: string
                format: date-time
              notBefore:
                description: The time after which the certificate stored in the secret
                  named by this resource in spec.secretName is valid.
                type: string
                format: date-time
              renewalTime:
                description: RenewalTime is the time at which the certificate will
                  be next renewed. If not set, no upcoming renewal is scheduled.
                type: string
                format: date-time
              revision:
                description: "The current 'revision' of the certificate as issued.\
                  \ \n When a CertificateRequest resource is created, it will have\
                  \ the `cert-manager.io/certificate-revision` set to one greater\
                  \ than the current value of this field. \n Upon issuance, this field\
                  \ will be set to the value of the annotation on the CertificateRequest\
                  \ resource used to issue the certificate. \n Persisting the value\
                  \ on the CertificateRequest resource allows the certificates controller\
                  \ to know whether a request is part of an old issuance or if it\
                  \ is part of the ongoing revision's issuance by checking if the\
                  \ revision value in the annotation is greater than this field."
                type: integer
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: orders.acme.cert-manager.io
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
spec:
  group: acme.cert-manager.io
  names:
    kind: Order
    listKind: OrderList
    plural: orders
    singular: order
    categories:
    - cert-manager
    - cert-manager-acme
  scope: Namespaced
  versions:
  - name: v1
    subresources:
      status: {}
    additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .spec.issuerRef.name
      name: Issuer
      priority: 1
      type: string
    - jsonPath: .status.reason
      name: Reason
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      description: CreationTimestamp is a timestamp representing the server time when
        this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC.
      name: Age
      type: date
    schema:
      openAPIV3Schema:
        description: Order is a type to represent an Order with an ACME server
        type: object
        required:
        - metadata
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
            - issuerRef
            - request
            properties:
              commonName:
                description: CommonName is the common name as specified on the DER
                  encoded CSR. If specified, this value must also be present in `dnsNames`
                  or `ipAddresses`. This field must match the corresponding field
                  on the DER encoded CSR.
                type: string
              dnsNames:
                description: DNSNames is a list of DNS names that should be included
                  as part of the Order validation process. This field must match the
                  corresponding field on the DER encoded CSR.
                type: array
                items:
                  type: string
              duration:
                description: Duration is the duration for the not after date for the
                  requested certificate. this is set on order creation as pe the ACME
                  spec.
                type: string
              ipAddresses:
                description: IPAddresses is a list of IP addresses that should be
                  included as part of the Order validation process. This field must
                  match the corresponding field on the DER encoded CSR.
                type: array
                items:
                  type: string
              issuerRef:
                description: IssuerRef references a properly configured ACME-type
                  Issuer which should be used to create this Order. If the Issuer
                  does not exist, processing will be retried. If the Issuer is not
                  an 'ACME' Issuer, an error will be returned and the Order will be
                  marked as failed.
                type: object
                required:
                - name
                properties:
                  group:
                    description: Group of the resource being referred to.
                    type: string
                  kind:
                    description: Kind of the resource being referred to.
                    type: string
                  name:
                    description: Name of the resource being referred to.
                    type: string
              request:
                description: Certificate signing request bytes in DER encoding. This
                  will be used when finalizing the order. This field must be set on
                  the order.
                type: string
                format: byte
          status:
            type: object
            properties:
              authorizations:
                description: Authorizations contains data returned from the ACME server
                  on what authorizations must be completed in order to validate the
                  DNS names specified on the Order.
                type: array
                items:
                  description: ACMEAuthorization contains data returned from the ACME
                    server on an authorization that must be completed in order validate
                    a DNS name on an ACME Order resource.
                  type: object
                  required:
                  - url
                  properties:
                    challenges:
                      description: Challenges specifies the challenge types offered
                        by the ACME server. One of these challenge types will be selected
                        when validating the DNS name and an appropriate Challenge
                        resource will be created to perform the ACME challenge process.
                      type: array
                      items:
                        description: Challenge specifies a challenge offered by the
                          ACME server for an Order. An appropriate Challenge resource
                          can be created to perform the ACME challenge process.
                        type: object
                        required:
                        - token
                        - type
                        - url
                        properties:
                          token:
                            description: Token is the token that must be presented
                              for this challenge. This is used to compute the 'key'
                              that must also be presented.
                            type: string
                          type:
                            description: Type is the type of challenge being offered,
                              e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is
                              the raw value retrieved from the ACME server. Only 'http-01'
                              and 'dns-01' are supported by cert-manager, other values
                              will be ignored.
                            type: string
                          url:
                            description: URL is the URL of this challenge. It can
                              be used to retrieve additional metadata about the Challenge
                              from the ACME server.
                            type: string
                    identifier:
                      description: Identifier is the DNS name to be validated as part
                        of this authorization
                      type: string
                    initialState:
                      description: InitialState is the initial state of the ACME authorization
                        when first fetched from the ACME server. If an Authorization
                        is already 'valid', the Order controller will not create a
                        Challenge resource for the authorization. This will occur
                        when working with an ACME server that enables 'authz reuse'
                        (such as Let's Encrypt's production endpoint). If not set
                        and 'identifier' is set, the state is assumed to be pending
                        and a Challenge will be created.
                      type: string
                      enum:
                      - valid
                      - ready
                      - pending
                      - processing
                      - invalid
                      - expired
                      - errored
                    url:
                      description: URL is the URL of the Authorization that must be
                        completed
                      type: string
                    wildcard:
                      description: Wildcard will be true if this authorization is
                        for a wildcard DNS name. If this is true, the identifier will
                        be the *non-wildcard* version of the DNS name. For example,
                        if '*.example.com' is the DNS name being validated, this field
                        will be 'true' and the 'identifier' field will be 'example.com'.
                      type: boolean
              certificate:
                description: Certificate is a copy of the PEM encoded certificate
                  for this Order. This field will be populated after the order has
                  been successfully finalized with the ACME server, and the order
                  has transitioned to the 'valid' state.
                type: string
                format: byte
              failureTime:
                description: FailureTime stores the time that this order failed. This
                  is used to influence garbage collection and back-off.
                type: string
                format: date-time
              finalizeURL:
                description: FinalizeURL of the Order. This is used to obtain certificates
                  for this order once it has been completed.
                type: string
              reason:
                description: Reason optionally provides more information about a why
                  the order is in the current state.
                type: string
              state:
                description: State contains the current state of this Order resource.
                  States 'success' and 'expired' are 'final'
                type: string
                enum:
                - valid
                - ready
                - pending
                - processing
                - invalid
                - expired
                - errored
              url:
                description: URL of the Order. This will initially be empty when the
                  resource is first created. The Order controller will populate this
                  field when the Order is first processed. This field will be immutable
                  after it is initially set.
                type: string
    served: true
    storage: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - get
  - create
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-controller-issuers
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  - issuers/status
  verbs:
  - update
  - patch
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-controller-clusterissuers
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - clusterissuers
  - clusterissuers/status
  verbs:
  - update
  - patch
- apiGroups:
  - cert-manager.io
  resources:
  - clusterissuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-controller-certificates
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificates/status
  - certificaterequests
  - certificaterequests/status
  verbs:
  - update
  - patch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - clusterissuers
  - issuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates/finalizers
  - certificaterequests/finalizers
  verbs:
  - update
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-controller-orders
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders
  - orders/status
  verbs:
  - update
  - patch
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders
  - challenges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - clusterissuers
  - issuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  verbs:
  - create
  - delete
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders/finalizers
  verbs:
  - update
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-controller-challenges
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  - challenges/status
  verbs:
  - update
  - patch
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  - clusterissuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ''
  resources:
  - pods
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
- apiGroups:
  - route.openshift.io
  resources:
  - routes/custom-host
  verbs:
  - create
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges/finalizers
  verbs:
  - update
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-controller-ingress-shim
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  verbs:
  - create
  - update
  - delete
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  - clusterissuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/finalizers
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  - httproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/finalizers
  - httproutes/finalizers
  verbs:
  - update
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-view
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
    rbac.authorization.k8s.io/aggregate-to-view: 'true'
    rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    rbac.authorization.k8s.io/aggregate-to-admin: 'true'
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  - orders
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-edit
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
    rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    rbac.authorization.k8s.io/aggregate-to-admin: 'true'
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - cert-manager.io
  resources:
  - certificates/status
  verbs:
  - update
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  - orders
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-controller-approve:cert-manager-io
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - signers
  verbs:
  - approve
  resourceNames:
  - issuers.cert-manager.io/*
  - clusterissuers.cert-manager.io/*
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-controller-certificatesigningrequests
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/status
  verbs:
  - update
  - patch
- apiGroups:
  - certificates.k8s.io
  resources:
  - signers
  resourceNames:
  - issuers.cert-manager.io/*
  - clusterissuers.cert-manager.io/*
  verbs:
  - sign
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-certmanager-webhook:subjectaccessreviews
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
  name: release-name-nginx-ingress
rules:
- apiGroups:
  - ''
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ''
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.18.0
    heritage: Helm
  name: release-name-prometheus-server
rules:
- apiGroups:
  - ''
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  - ingresses
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  - ingresses
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-certmanager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-certmanager-cainjector
subjects:
- name: release-name-certmanager-cainjector
  namespace: default
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-certmanager-controller-issuers
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-certmanager-controller-issuers
subjects:
- name: release-name-certmanager
  namespace: default
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-certmanager-controller-clusterissuers
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-certmanager-controller-clusterissuers
subjects:
- name: release-name-certmanager
  namespace: default
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-certmanager-controller-certificates
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-certmanager-controller-certificates
subjects:
- name: release-name-certmanager
  namespace: default
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-certmanager-controller-orders
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-certmanager-controller-orders
subjects:
- name: release-name-certmanager
  namespace: default
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-certmanager-controller-challenges
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-certmanager-controller-challenges
subjects:
- name: release-name-certmanager
  namespace: default
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-certmanager-controller-ingress-shim
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-certmanager-controller-ingress-shim
subjects:
- name: release-name-certmanager
  namespace: default
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-certmanager-controller-approve:cert-manager-io
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-certmanager-controller-approve:cert-manager-io
subjects:
- name: release-name-certmanager
  namespace: default
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-certmanager-controller-certificatesigningrequests
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-certmanager-controller-certificatesigningrequests
subjects:
- name: release-name-certmanager
  namespace: default
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-certmanager-webhook:subjectaccessreviews
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-certmanager-webhook:subjectaccessreviews
subjects:
- apiGroup: ''
  kind: ServiceAccount
  name: release-name-certmanager-webhook
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
  name: release-name-nginx-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-nginx-ingress
subjects:
- kind: ServiceAccount
  name: release-name-nginx-ingress
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.18.0
    heritage: Helm
  name: release-name-prometheus-server
subjects:
- kind: ServiceAccount
  name: release-name-prometheus-server
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-prometheus-server
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-certmanager-issuer
  namespace: default
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  verbs:
  - get
  - list
  - update
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-certmanager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  resourceNames:
  - cert-manager-cainjector-leader-election
  - cert-manager-cainjector-leader-election-core
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-certmanager:leaderelection
  namespace: kube-system
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  resourceNames:
  - cert-manager-controller
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-certmanager-webhook:dynamic-serving
  namespace: default
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
- apiGroups:
  - ''
  resources:
  - secrets
  resourceNames:
  - release-name-certmanager-webhook-ca
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-gitlab-runner
  labels:
    app: release-name-gitlab-runner
    chart: gitlab-runner-0.52.0
    release: release-name
    heritage: Helm
  namespace: default
rules:
- apiGroups:
  - ''
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-nginx-ingress
  namespace: default
rules:
- apiGroups:
  - ''
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ''
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - configmaps
  resourceNames:
  - ingress-controller-leader
  verbs:
  - get
  - update
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-certmanager-issuer
  namespace: default
  labels:
    app: certmanager-issuer
    chart: certmanager-issuer-0.1.0
    release: release-name
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-certmanager-issuer
subjects:
- kind: ServiceAccount
  name: release-name-certmanager-issuer
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-certmanager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-certmanager-cainjector:leaderelection
subjects:
- kind: ServiceAccount
  name: release-name-certmanager-cainjector
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-certmanager:leaderelection
  namespace: kube-system
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-certmanager:leaderelection
subjects:
- apiGroup: ''
  kind: ServiceAccount
  name: release-name-certmanager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-certmanager-webhook:dynamic-serving
  namespace: default
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-certmanager-webhook:dynamic-serving
subjects:
- apiGroup: ''
  kind: ServiceAccount
  name: release-name-certmanager-webhook
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-gitlab-runner
  labels:
    app: release-name-gitlab-runner
    chart: gitlab-runner-0.52.0
    release: release-name
    heritage: Helm
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-gitlab-runner
subjects:
- kind: ServiceAccount
  name: release-name-gitlab-runner
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-nginx-ingress
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-nginx-ingress
subjects:
- kind: ServiceAccount
  name: release-name-nginx-ingress
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-certmanager
  namespace: default
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 9402
    name: tcp-prometheus-servicemonitor
    targetPort: 9402
  selector:
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-certmanager-webhook
  namespace: default
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitaly
  namespace: default
  labels:
    app: gitaly
    chart: gitaly-7.0.3
    release: release-name
    heritage: Helm
  annotations: null
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 8075
    name: tcp-gitaly
    targetPort: grpc-gitaly
  - port: 9236
    name: http-metrics
    targetPort: http-metrics
  selector:
    app: gitaly
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitlab-exporter
  namespace: default
  labels:
    app: gitlab-exporter
    chart: gitlab-exporter-7.0.3
    release: release-name
    heritage: Helm
  annotations: null
spec:
  type: ClusterIP
  ports:
  - port: 9168
    targetPort: http-metrics
    protocol: TCP
    name: http-metrics
  selector:
    app: gitlab-exporter
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitlab-shell
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.0.3
    release: release-name
    heritage: Helm
  annotations: null
spec:
  type: ClusterIP
  ports:
  - port: 22
    targetPort: 2222
    protocol: TCP
    name: ssh
  selector:
    app: gitlab-shell
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-kas
  namespace: default
  labels:
    app: kas
    chart: kas-7.0.3
    release: release-name
    heritage: Helm
  annotations: null
spec:
  type: ClusterIP
  ports:
  - port: 8150
    targetPort: 8150
    protocol: TCP
    name: grpc-kas-external-api
  - port: 8153
    targetPort: 8153
    protocol: TCP
    name: grpc-kas-internal-api
  - port: 8154
    targetPort: 8154
    protocol: TCP
    name: grpc-kas-k8s-api
  - port: 8151
    targetPort: http-metrics
    protocol: TCP
    name: http-metrics
  selector:
    app: kas
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-webservice-default
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.0.3
    release: release-name
    heritage: Helm
    gitlab.com/webservice-name: default
  annotations: null
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http-webservice
    protocol: TCP
    name: http-webservice
  - port: 8181
    targetPort: http-workhorse
    protocol: TCP
    name: http-workhorse
  - port: 8083
    targetPort: http-metrics-ws
    protocol: TCP
    name: http-metrics-ws
  selector:
    app: webservice
    release: release-name
    gitlab.com/webservice-name: default
---
kind: Service
apiVersion: v1
metadata:
  name: release-name-minio-svc
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: release-name
    heritage: Helm
  annotations: null
spec:
  type: ClusterIP
  selector:
    app: minio
    release: release-name
    component: app
  ports:
  - name: http
    port: 9000
    targetPort: 9000
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    gitlab.com/prometheus_port: '10254'
    gitlab.com/prometheus_scrape: 'true'
    prometheus.io/port: '10254'
    prometheus.io/scrape: 'true'
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-nginx-ingress-controller-metrics
  namespace: default
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 10254
    protocol: TCP
    targetPort: metrics
  selector:
    app: nginx-ingress
    release: release-name
    component: controller
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-nginx-ingress-controller
  namespace: default
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ipFamilyPolicy: SingleStack
  ipFamilies:
  - IPv4
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  - name: gitlab-shell
    port: 22
    protocol: TCP
    targetPort: gitlab-shell
  selector:
    app: nginx-ingress
    release: release-name
    component: controller
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-metrics
  namespace: default
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.5.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
  annotations:
    gitlab.com/prometheus_port: '9187'
    gitlab.com/prometheus_scrape: 'true'
    prometheus.io/port: '9187'
    prometheus.io/scrape: 'true'
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: http-metrics
    port: 9187
    targetPort: http-metrics
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-hl
  namespace: default
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.5.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
    service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  namespace: default
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.5.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
    nodePort: null
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.18.0
    heritage: Helm
  name: release-name-prometheus-server
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 9090
  selector:
    component: server
    app: prometheus
    release: release-name
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis-headless
  namespace: default
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: tcp-redis
    port: 6379
    targetPort: redis
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis-master
  namespace: default
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ports:
  - name: tcp-redis
    port: 6379
    targetPort: redis
    nodePort: null
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: master
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis-metrics
  namespace: default
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
spec:
  type: ClusterIP
  ports:
  - name: http-metrics
    port: 9121
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-registry
  namespace: default
  labels:
    app: registry
    chart: registry-0.7.0
    release: release-name
    heritage: Helm
  annotations: null
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: http
    protocol: TCP
    name: http-registry
  selector:
    app: registry
    release: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-certmanager-cainjector
  namespace: test-ns
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: cainjector
  template:
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/version: v1.11.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: certmanager-v1.11.1
      annotations:
        container.apparmor.security.beta.kubernetes.io/certmanager-cainjector: runtime/default
    spec:
      serviceAccountName: release-name-certmanager-cainjector
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: certmanager-cainjector
        image: quay.io/jetstack/cert-manager-cainjector:v1.11.1
        imagePullPolicy: IfNotPresent
        args:
        - --v=2
        - --leader-election-namespace=kube-system
        env: []
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            cpu: 250m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 128Mi
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: secret-volume
        secret:
          secretName: my-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-certmanager
  namespace: test-ns
  labels:
    app: certmanager
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: certmanager
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app: certmanager
        app.kubernetes.io/name: certmanager
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: controller
        app.kubernetes.io/version: v1.11.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: certmanager-v1.11.1
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
        container.apparmor.security.beta.kubernetes.io/certmanager-controller: runtime/default
    spec:
      serviceAccountName: release-name-certmanager
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: certmanager-controller
        image: quay.io/jetstack/cert-manager-controller:v1.11.1
        imagePullPolicy: IfNotPresent
        args:
        - --v=2
        - --cluster-resource-namespace=$(POD_NAMESPACE)
        - --leader-election-namespace=kube-system
        - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.11.1
        - --max-concurrent-challenges=60
        ports:
        - containerPort: 9402
          name: http-metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
        env: []
        volumeMounts:
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            cpu: 250m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 128Mi
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: secret-volume
        secret:
          secretName: my-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-certmanager-webhook
  namespace: test-ns
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: webhook
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/name: webhook
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: webhook
        app.kubernetes.io/version: v1.11.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: certmanager-v1.11.1
      annotations:
        container.apparmor.security.beta.kubernetes.io/certmanager-webhook: runtime/default
    spec:
      serviceAccountName: release-name-certmanager-webhook
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: certmanager-webhook
        image: quay.io/jetstack/cert-manager-webhook:v1.11.1
        imagePullPolicy: IfNotPresent
        args:
        - --v=2
        - --secure-port=10250
        - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
        - --dynamic-serving-ca-secret-name=release-name-certmanager-webhook-ca
        - --dynamic-serving-dns-names=release-name-certmanager-webhook
        - --dynamic-serving-dns-names=release-name-certmanager-webhook.$(POD_NAMESPACE)
        - --dynamic-serving-dns-names=release-name-certmanager-webhook.$(POD_NAMESPACE).svc
        ports:
        - name: https
          protocol: TCP
          containerPort: 10250
        - name: healthcheck
          protocol: TCP
          containerPort: 6080
        livenessProbe:
          httpGet:
            path: /livez
            port: 6080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 6080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
        env: []
        volumeMounts:
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
        resources:
          requests:
            cpu: 250m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 128Mi
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: secret-volume
        secret:
          secretName: my-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-gitlab-runner
  namespace: test-ns
  labels:
    app: release-name-gitlab-runner
    chart: gitlab-runner-0.52.0
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: release-name-gitlab-runner
  template:
    metadata:
      labels:
        app: release-name-gitlab-runner
        chart: gitlab-runner-0.52.0
        release: release-name
        heritage: Helm
      annotations:
        checksum/configmap: 5a15f7e19f40d6edafb6fd95c4fe4eaa6ae16a72d7cf3051d71a878f725f52bc
        checksum/secrets: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        gitlab.com/prometheus_port: '9252'
        gitlab.com/prometheus_scrape: 'true'
        container.apparmor.security.beta.kubernetes.io/release-name-gitlab-runner: runtime/default
    spec:
      securityContext:
        fsGroup: 65533
        runAsUser: 25000
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 3600
      serviceAccountName: release-name-gitlab-runner
      containers:
      - name: release-name-gitlab-runner
        image: registry.gitlab.com/gitlab-org/gitlab-runner:alpine-v15.11.0
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 25000
        command:
        - /usr/bin/dumb-init
        - --
        - /bin/bash
        - /configmaps/entrypoint
        env:
        - name: CI_SERVER_URL
          value: https://gitlab.example.com
        - name: CLONE_URL
          value: ''
        - name: RUNNER_EXECUTOR
          value: kubernetes
        - name: REGISTER_LOCKED
          value: 'false'
        - name: RUNNER_TAG_LIST
          value: ''
        - name: KUBERNETES_NAMESPACE
          value: default
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - /configmaps/check-live
          initialDelaySeconds: 60
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /usr/bin/pgrep
            - gitlab.*runner
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        ports:
        - name: metrics
          containerPort: 9252
        volumeMounts:
        - name: projected-secrets
          mountPath: /secrets
        - name: etc-gitlab-runner
          mountPath: /home/gitlab-runner/.gitlab-runner
        - name: configmaps
          mountPath: /configmaps
        resources:
          requests:
            cpu: 250m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 128Mi
      volumes:
      - name: runner-secrets
        emptyDir:
          medium: Memory
      - name: etc-gitlab-runner
        emptyDir:
          medium: Memory
      - name: projected-secrets
        projected:
          sources:
          - secret:
              name: release-name-minio-secret
          - secret:
              name: release-name-gitlab-runner-secret
              items:
              - key: runner-registration-token
                path: runner-registration-token
              - key: runner-token
                path: runner-token
      - name: configmaps
        configMap:
          name: release-name-gitlab-runner
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-gitlab-exporter
  namespace: test-ns
  labels:
    app: gitlab-exporter
    chart: gitlab-exporter-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-exporter
      release: release-name
  template:
    metadata:
      labels:
        app: gitlab-exporter
        chart: gitlab-exporter-7.0.3
        release: release-name
        heritage: Helm
      annotations:
        checksum/config: 299dba0ffa0fc13a8e9c0a4347683a9d09453494bf2d50fc074fd632469ed40d
        gitlab.com/prometheus_scrape: 'true'
        gitlab.com/prometheus_port: '9168'
        gitlab.com/prometheus_path: /metrics
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9168'
        prometheus.io/path: /metrics
        container.apparmor.security.beta.kubernetes.io/gitlab-exporter: runtime/default
        container.apparmor.security.beta.kubernetes.io/certificates: runtime/default
        container.apparmor.security.beta.kubernetes.io/configure: runtime/default
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: gitlab-exporter
                  release: release-name
      automountServiceAccountToken: false
      initContainers:
      - name: certificates
        image: registry.gitlab.com/gitlab-org/build/cng/certificates:v16.0.3
        env:
        - name: MALLOC_CONF
          value: dirty_decay_ms:0,muzzy_decay_ms:0
        - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
          value: '0.111'
        - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
          value: '0.055'
        - name: RUBY_GC_HEAP_INIT_SLOTS
          value: '80000'
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: false
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      - name: configure
        command:
        - sh
        - /config/configure
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox:1-uclibc@sha256:3dcd6bcb75d6ca5b23642482809ea3dbba4de07d277326454f443b9dcb14b012
        env:
        - name: MALLOC_CONF
          value: dirty_decay_ms:0,muzzy_decay_ms:0
        - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
          value: '0.111'
        - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
          value: '0.055'
        - name: RUBY_GC_HEAP_INIT_SLOTS
          value: '80000'
        volumeMounts:
        - name: gitlab-exporter-config
          mountPath: /config
          readOnly: true
        - name: init-gitlab-exporter-secrets
          mountPath: /init-config
          readOnly: true
        - name: gitlab-exporter-secrets
          mountPath: /init-secrets
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      containers:
      - name: gitlab-exporter
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-exporter:13.0.0
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        env:
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab-exporter/templates
        - name: CONFIG_DIRECTORY
          value: /etc/gitlab-exporter
        - name: MALLOC_CONF
          value: dirty_decay_ms:0,muzzy_decay_ms:0
        - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
          value: '0.111'
        - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
          value: '0.055'
        - name: RUBY_GC_HEAP_INIT_SLOTS
          value: '80000'
        ports:
        - containerPort: 9168
          name: http-metrics
        volumeMounts:
        - name: gitlab-exporter-config
          mountPath: /var/opt/gitlab-exporter/templates/gitlab-exporter.yml.erb
          subPath: gitlab-exporter.yml.erb
        - name: gitlab-exporter-secrets
          mountPath: /etc/gitlab
          readOnly: true
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        livenessProbe:
          exec:
            command:
            - pgrep
            - -f
            - gitlab-exporter
        readinessProbe:
          exec:
            command:
            - pgrep
            - -f
            - gitlab-exporter
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - pkill -f 'gitlab-exporter'
        resources:
          requests:
            cpu: 75m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 75m
      volumes:
      - name: gitlab-exporter-config
        configMap:
          name: release-name-gitlab-exporter
      - name: init-gitlab-exporter-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: release-name-postgresql-password
              items:
              - key: postgresql-password
                path: postgres/psql-password-ci
          - secret:
              name: release-name-postgresql-password
              items:
              - key: postgresql-password
                path: postgres/psql-password-main
          - secret:
              name: release-name-redis-secret
              items:
              - key: secret
                path: redis/redis-password
      - name: gitlab-exporter-secrets
        emptyDir:
          medium: Memory
      - name: etc-ssl-certs
        emptyDir:
          medium: Memory
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: Memory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-gitlab-shell
  namespace: test-ns
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  selector:
    matchLabels:
      app: gitlab-shell
      release: release-name
  template:
    metadata:
      labels:
        app: gitlab-shell
        chart: gitlab-shell-7.0.3
        release: release-name
        heritage: Helm
      annotations:
        checksum/config: a05d60216578ecc23193175905bcf140fcf9bdf27ff33552cebae5f5ef68d55d
        checksum/config-sshd: 56b55f51f35c387fa90b2e0acc57a792f6b5495ce258e8999be7e2702dc1b7b7
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
        container.apparmor.security.beta.kubernetes.io/gitlab-shell: runtime/default
        container.apparmor.security.beta.kubernetes.io/certificates: runtime/default
        container.apparmor.security.beta.kubernetes.io/configure: runtime/default
    spec:
      initContainers:
      - name: certificates
        image: registry.gitlab.com/gitlab-org/build/cng/certificates:v16.0.3
        env: null
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: false
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      - name: configure
        command:
        - sh
        - /config/configure
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox:1-uclibc@sha256:3dcd6bcb75d6ca5b23642482809ea3dbba4de07d277326454f443b9dcb14b012
        env: null
        volumeMounts:
        - name: shell-config
          mountPath: /config
          readOnly: true
        - name: shell-init-secrets
          mountPath: /init-config
          readOnly: true
        - name: shell-secrets
          mountPath: /init-secrets
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: gitlab-shell
                  release: release-name
      automountServiceAccountToken: false
      containers:
      - name: gitlab-shell
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-shell:v14.20.0
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        ports:
        - containerPort: 2222
          name: ssh
        env:
        - name: GITALY_FEATURE_DEFAULT_ON
          value: '1'
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /etc/gitlab-shell
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab-shell
        - name: KEYS_DIRECTORY
          value: /etc/gitlab-secrets/ssh
        - name: SSH_DAEMON
          value: openssh
        volumeMounts:
        - name: shell-config
          mountPath: /etc/gitlab-shell
        - name: shell-secrets
          mountPath: /etc/gitlab-secrets
          readOnly: true
        - name: shell-config
          mountPath: /etc/krb5.conf
          subPath: krb5.conf
          readOnly: true
        - name: sshd-config
          mountPath: /etc/ssh/sshd_config
          subPath: sshd_config
          readOnly: true
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        livenessProbe:
          exec:
            command:
            - /scripts/healthcheck
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 2222
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 2
        resources:
          requests:
            cpu: 0
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: shell-config
        configMap:
          name: release-name-gitlab-shell
      - name: sshd-config
        configMap:
          name: release-name-gitlab-shell-sshd
      - name: shell-init-secrets
        projected:
          defaultMode: 288
          sources:
          - secret:
              name: release-name-gitlab-shell-host-keys
          - secret:
              name: release-name-gitlab-shell-secret
              items:
              - key: secret
                path: shell/.gitlab_shell_secret
      - name: shell-secrets
        emptyDir:
          medium: Memory
      - name: etc-ssl-certs
        emptyDir:
          medium: Memory
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: Memory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kas
  namespace: test-ns
  labels:
    app: kas
    chart: kas-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  selector:
    matchLabels:
      app: kas
      release: release-name
  template:
    metadata:
      labels:
        app: kas
        chart: kas-7.0.3
        release: release-name
        heritage: Helm
      annotations:
        checksum/config: c8fb16a8e34df6cee8d0f486eebfb5b782208a304294cd0c738dcc979b446289
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
        gitlab.com/prometheus_scrape: 'true'
        gitlab.com/prometheus_port: '8151'
        gitlab.com/prometheus_path: /metrics
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8151'
        prometheus.io/path: /metrics
        container.apparmor.security.beta.kubernetes.io/kas: runtime/default
        container.apparmor.security.beta.kubernetes.io/certificates: runtime/default
    spec:
      automountServiceAccountToken: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: kas
                  release: release-name
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      initContainers:
      - name: certificates
        image: registry.gitlab.com/gitlab-org/build/cng/certificates:v16.0.3
        env: null
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: false
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      containers:
      - name: kas
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:v16.0.1
        securityContext:
          runAsUser: 65532
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        args:
        - --configuration-file=/etc/kas/config.yaml
        env:
        - name: OWN_PRIVATE_API_HOST
          value: release-name-kas.default.svc
        - name: OWN_PRIVATE_API_URL
          value: grpc://$(POD_IP):8155
        ports:
        - containerPort: 8150
          name: kas
        - containerPort: 8154
          name: kas-k8s-api
        - containerPort: 8155
          name: kas-private-api
        - containerPort: 8151
          name: http-metrics
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8151
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /liveness
            port: 8151
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 100m
        volumeMounts:
        - name: init-etc-kas
          mountPath: /etc/kas
          readOnly: true
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
      terminationGracePeriodSeconds: 300
      volumes:
      - name: etc-ssl-certs
        emptyDir:
          medium: Memory
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: Memory
      - name: init-etc-kas
        projected:
          defaultMode: 288
          sources:
          - configMap:
              name: release-name-kas
          - secret:
              name: release-name-gitlab-kas-secret
              items:
              - key: kas_shared_secret
                path: .gitlab_kas_secret
          - secret:
              name: release-name-kas-private-api
              items:
              - key: kas_private_api_secret
                path: .gitlab_kas_private_api_secret
          - secret:
              name: release-name-redis-secret
              items:
              - key: secret
                path: redis/redis-password
      - name: secret-volume
        secret:
          secretName: my-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-sidekiq-all-in-1-v2
  namespace: test-ns
  labels:
    app: sidekiq
    chart: sidekiq-7.0.3
    release: release-name
    heritage: Helm
    queue-pod-name: all-in-1
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  selector:
    matchLabels:
      app: sidekiq
      release: release-name
      queue-pod-name: all-in-1
  template:
    metadata:
      labels:
        app: sidekiq
        chart: sidekiq-7.0.3
        release: release-name
        heritage: Helm
        queue-pod-name: all-in-1
      annotations:
        checksum/configmap: d9f6036a5655e17204e436912273af9437b10a11b71f8079bef43994c0fac08a
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
        gitlab.com/prometheus_scrape: 'true'
        gitlab.com/prometheus_port: '3807'
        gitlab.com/prometheus_path: /metrics
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3807'
        prometheus.io/path: /metrics
        container.apparmor.security.beta.kubernetes.io/sidekiq: runtime/default
        container.apparmor.security.beta.kubernetes.io/certificates: runtime/default
        container.apparmor.security.beta.kubernetes.io/configure: runtime/default
        container.apparmor.security.beta.kubernetes.io/dependencies: runtime/default
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: sidekiq
                  release: release-name
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: certificates
        image: registry.gitlab.com/gitlab-org/build/cng/certificates:v16.0.3
        env: null
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: false
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      - name: configure
        command:
        - sh
        - /config/configure
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox:1-uclibc@sha256:3dcd6bcb75d6ca5b23642482809ea3dbba4de07d277326454f443b9dcb14b012
        env: null
        volumeMounts:
        - name: sidekiq-config
          mountPath: /config
          readOnly: true
        - name: init-sidekiq-secrets
          mountPath: /init-config
          readOnly: true
        - name: sidekiq-secrets
          mountPath: /init-secrets
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      - name: dependencies
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v16.0.3
        args:
        - /scripts/wait-for-deps
        env:
        - name: GITALY_FEATURE_DEFAULT_ON
          value: '1'
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab/templates
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab/config
        - name: SIDEKIQ_CONCURRENCY
          value: '20'
        - name: SIDEKIQ_TIMEOUT
          value: '25'
        - name: ENABLE_BOOTSNAP
          value: '1'
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        - name: sidekiq-config
          mountPath: /var/opt/gitlab/templates
          readOnly: true
        - name: sidekiq-secrets
          mountPath: /etc/gitlab
          readOnly: true
        - name: sidekiq-secrets
          mountPath: /srv/gitlab/config/secrets.yml
          subPath: rails-secrets/secrets.yml
          readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      containers:
      - name: sidekiq
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v16.0.3
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        env:
        - name: prometheus_multiproc_dir
          value: /metrics
        - name: GITALY_FEATURE_DEFAULT_ON
          value: '1'
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab/templates
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab/config
        - name: SIDEKIQ_QUEUE_SELECTOR
          value: ''
        - name: SIDEKIQ_CONCURRENCY
          value: '20'
        - name: SIDEKIQ_TIMEOUT
          value: '25'
        - name: SIDEKIQ_QUEUES
          value: null
        - name: SIDEKIQ_NEGATE_QUEUES
          value: null
        - name: SIDEKIQ_DAEMON_MEMORY_KILLER
          value: '1'
        - name: SIDEKIQ_MEMORY_KILLER_CHECK_INTERVAL
          value: '3'
        - name: SIDEKIQ_MEMORY_KILLER_MAX_RSS
          value: '2000000'
        - name: SIDEKIQ_MEMORY_KILLER_GRACE_TIME
          value: '900'
        - name: SIDEKIQ_MEMORY_KILLER_SHUTDOWN_WAIT
          value: '30'
        - name: ENABLE_BOOTSNAP
          value: '1'
        ports:
        - containerPort: 3807
          name: http-metrics
        volumeMounts:
        - name: sidekiq-metrics
          mountPath: /metrics
        - name: sidekiq-config
          mountPath: /var/opt/gitlab/templates
          readOnly: true
        - name: sidekiq-secrets
          mountPath: /etc/gitlab
          readOnly: true
        - name: sidekiq-secrets
          mountPath: /srv/gitlab/config/secrets.yml
          subPath: rails-secrets/secrets.yml
        - name: sidekiq-config
          mountPath: /etc/krb5.conf
          subPath: krb5.conf
        - name: sidekiq-config
          mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
          subPath: smtp_settings.rb
        - name: sidekiq-config
          mountPath: /srv/gitlab/INSTALLATION_TYPE
          subPath: installation_type
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        livenessProbe:
          httpGet:
            path: /liveness
            port: 3808
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readiness
            port: 3808
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - pkill -f 'sidekiq'
        resources:
          requests:
            cpu: 900m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 900m
      volumes:
      - name: sidekiq-metrics
        emptyDir:
          medium: Memory
      - name: sidekiq-config
        projected:
          sources:
          - configMap:
              name: release-name-sidekiq
      - name: init-sidekiq-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: release-name-rails-secret
              items:
              - key: secrets.yml
                path: rails-secrets/secrets.yml
          - secret:
              name: release-name-gitaly-secret
              items:
              - key: token
                path: gitaly/gitaly_token
          - secret:
              name: release-name-redis-secret
              items:
              - key: secret
                path: redis/redis-password
          - secret:
              name: release-name-postgresql-password
              items:
              - key: postgresql-password
                path: postgres/psql-password-ci
          - secret:
              name: release-name-postgresql-password
              items:
              - key: postgresql-password
                path: postgres/psql-password-main
          - secret:
              name: release-name-registry-secret
              items:
              - key: registry-auth.key
                path: registry/gitlab-registry.key
          - secret:
              name: release-name-registry-notification
              items:
              - key: secret
                path: registry/notificationSecret
          - secret:
              name: release-name-gitlab-kas-secret
              items:
              - key: kas_shared_secret
                path: kas/.gitlab_kas_secret
          - secret:
              name: release-name-gitlab-suggested-reviewers
              items:
              - key: suggested_reviewers_secret
                path: suggested_reviewers/.gitlab_suggested_reviewers_secret
          - secret:
              name: release-name-minio-secret
              items:
              - key: accesskey
                path: minio/accesskey
              - key: secretkey
                path: minio/secretkey
      - name: sidekiq-secrets
        emptyDir:
          medium: Memory
      - name: etc-ssl-certs
        emptyDir:
          medium: Memory
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: Memory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-toolbox
  namespace: test-ns
  labels:
    app: toolbox
    chart: toolbox-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: toolbox
      release: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: toolbox
        chart: toolbox-7.0.3
        release: release-name
        heritage: Helm
      annotations:
        checksum/config: 0ac931e688c2462966913ada8408dc2d11135c1203ddf3aad81c640f0891d28e
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
        container.apparmor.security.beta.kubernetes.io/toolbox: runtime/default
        container.apparmor.security.beta.kubernetes.io/certificates: runtime/default
        container.apparmor.security.beta.kubernetes.io/configure: runtime/default
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      initContainers:
      - name: certificates
        image: registry.gitlab.com/gitlab-org/build/cng/certificates:v16.0.3
        env: null
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: false
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      - name: configure
        command:
        - sh
        - /config/configure
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox:1-uclibc@sha256:3dcd6bcb75d6ca5b23642482809ea3dbba4de07d277326454f443b9dcb14b012
        env: null
        volumeMounts:
        - name: toolbox-config
          mountPath: /config
          readOnly: true
        - name: init-toolbox-secrets
          mountPath: /init-config
          readOnly: true
        - name: toolbox-secrets
          mountPath: /init-secrets
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: gitaly
                  release: release-name
      containers:
      - name: toolbox
        args:
        - /bin/bash
        - -c
        - cp -v -r -L /etc/gitlab/.s3cfg $HOME/.s3cfg && while sleep 3600; do :; done
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee:v16.0.3
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        env:
        - name: ARTIFACTS_BUCKET_NAME
          value: gitlab-artifacts
        - name: REGISTRY_BUCKET_NAME
          value: registry
        - name: LFS_BUCKET_NAME
          value: git-lfs
        - name: UPLOADS_BUCKET_NAME
          value: gitlab-uploads
        - name: PACKAGES_BUCKET_NAME
          value: gitlab-packages
        - name: EXTERNAL_DIFFS_BUCKET_NAME
          value: gitlab-mr-diffs
        - name: TERRAFORM_STATE_BUCKET_NAME
          value: gitlab-terraform-state
        - name: CI_SECURE_FILES_BUCKET_NAME
          value: gitlab-ci-secure-files
        - name: BACKUP_BUCKET_NAME
          value: gitlab-backups
        - name: BACKUP_BACKEND
          value: s3
        - name: TMP_BUCKET_NAME
          value: tmp
        - name: PAGES_BUCKET_NAME
          value: gitlab-pages
        - name: GITALY_FEATURE_DEFAULT_ON
          value: '1'
        - name: ENABLE_BOOTSNAP
          value: '1'
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab/templates
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab/config
        volumeMounts:
        - name: toolbox-config
          mountPath: /var/opt/gitlab/templates
        - name: toolbox-config
          mountPath: /etc/krb5.conf
          subPath: krb5.conf
        - name: toolbox-config
          mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
          subPath: smtp_settings.rb
        - name: toolbox-secrets
          mountPath: /etc/gitlab
          readOnly: true
        - name: toolbox-secrets
          mountPath: /srv/gitlab/config/secrets.yml
          subPath: rails-secrets/secrets.yml
        - name: toolbox-tmp
          mountPath: /srv/gitlab/tmp
          readOnly: false
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: toolbox-config
        projected:
          sources:
          - configMap:
              name: release-name-toolbox
      - name: toolbox-tmp
        emptyDir: {}
      - name: init-toolbox-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: release-name-rails-secret
              items:
              - key: secrets.yml
                path: rails-secrets/secrets.yml
          - secret:
              name: release-name-gitlab-shell-secret
              items:
              - key: secret
                path: shell/.gitlab_shell_secret
          - secret:
              name: release-name-gitaly-secret
              items:
              - key: token
                path: gitaly/gitaly_token
          - secret:
              name: release-name-redis-secret
              items:
              - key: secret
                path: redis/redis-password
          - secret:
              name: release-name-postgresql-password
              items:
              - key: postgresql-password
                path: postgres/psql-password-ci
          - secret:
              name: release-name-postgresql-password
              items:
              - key: postgresql-password
                path: postgres/psql-password-main
          - secret:
              name: release-name-registry-secret
              items:
              - key: registry-auth.key
                path: registry/gitlab-registry.key
          - secret:
              name: release-name-registry-notification
              items:
              - key: secret
                path: registry/notificationSecret
          - secret:
              name: release-name-gitlab-kas-secret
              items:
              - key: kas_shared_secret
                path: kas/.gitlab_kas_secret
          - secret:
              name: release-name-gitlab-suggested-reviewers
              items:
              - key: suggested_reviewers_secret
                path: suggested_reviewers/.gitlab_suggested_reviewers_secret
          - secret:
              name: release-name-minio-secret
              items:
              - key: accesskey
                path: minio/accesskey
              - key: secretkey
                path: minio/secretkey
      - name: toolbox-secrets
        emptyDir:
          medium: Memory
      - name: etc-ssl-certs
        emptyDir:
          medium: Memory
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: Memory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-webservice-default
  namespace: test-ns
  labels:
    app: webservice
    chart: webservice-7.0.3
    release: release-name
    heritage: Helm
    gitlab.com/webservice-name: default
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  selector:
    matchLabels:
      app: webservice
      release: release-name
      gitlab.com/webservice-name: default
  template:
    metadata:
      labels:
        app: webservice
        chart: webservice-7.0.3
        release: release-name
        heritage: Helm
        gitlab.com/webservice-name: default
      annotations:
        checksum/config: 41031acc86fad565d101f9ece367bbda2bea1e4d064309844aa20d958c520656
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
        gitlab.com/prometheus_scrape: 'true'
        gitlab.com/prometheus_port: '8083'
        gitlab.com/prometheus_path: /metrics
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8083'
        prometheus.io/path: /metrics
        container.apparmor.security.beta.kubernetes.io/webservice: runtime/default
        container.apparmor.security.beta.kubernetes.io/gitlab-workhorse: runtime/default
        container.apparmor.security.beta.kubernetes.io/certificates: runtime/default
        container.apparmor.security.beta.kubernetes.io/configure: runtime/default
        container.apparmor.security.beta.kubernetes.io/dependencies: runtime/default
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: webservice
                  release: release-name
                  gitlab.com/webservice-name: default
      automountServiceAccountToken: false
      initContainers:
      - name: certificates
        image: registry.gitlab.com/gitlab-org/build/cng/certificates:v16.0.3
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: false
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      - name: configure
        command:
        - sh
        args:
        - -c
        - sh -x /config-webservice/configure ; sh -x /config-workhorse/configure ;
          mkdir -p -m 3770 /tmp/gitlab
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox:1-uclibc@sha256:3dcd6bcb75d6ca5b23642482809ea3dbba4de07d277326454f443b9dcb14b012
        volumeMounts:
        - name: webservice-config
          mountPath: /config-webservice
          readOnly: true
        - name: workhorse-config
          mountPath: /config-workhorse
          readOnly: true
        - name: init-webservice-secrets
          mountPath: /init-config
          readOnly: true
        - name: webservice-secrets
          mountPath: /init-secrets
          readOnly: false
        - name: workhorse-secrets
          mountPath: /init-secrets-workhorse
          readOnly: false
        - name: shared-tmp
          mountPath: /tmp
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      - name: dependencies
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v16.0.3
        args:
        - /scripts/wait-for-deps
        env:
        - name: GITALY_FEATURE_DEFAULT_ON
          value: '1'
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab/templates
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab/config
        - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
          value: '1'
        - name: ENABLE_BOOTSNAP
          value: '1'
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        - name: webservice-config
          mountPath: /var/opt/gitlab/templates
        - name: webservice-secrets
          mountPath: /etc/gitlab
          readOnly: true
        - name: webservice-secrets
          mountPath: /srv/gitlab/config/secrets.yml
          subPath: rails-secrets/secrets.yml
          readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      containers:
      - name: webservice
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v16.0.3
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        ports:
        - containerPort: 8080
          name: http-webservice
        - containerPort: 8083
          name: http-metrics-ws
        env:
        - name: GITLAB_WEBSERVER
          value: puma
        - name: TMPDIR
          value: /tmp/gitlab
        - name: GITALY_FEATURE_DEFAULT_ON
          value: '1'
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab/templates
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab/config
        - name: prometheus_multiproc_dir
          value: /metrics
        - name: ENABLE_BOOTSNAP
          value: '1'
        - name: WORKER_PROCESSES
          value: '2'
        - name: WORKER_TIMEOUT
          value: '60'
        - name: INTERNAL_PORT
          value: '8080'
        - name: PUMA_THREADS_MIN
          value: '4'
        - name: PUMA_THREADS_MAX
          value: '4'
        - name: PUMA_WORKER_MAX_MEMORY
          value: ''
        - name: DISABLE_PUMA_WORKER_KILLER
          value: 'true'
        - name: SHUTDOWN_BLACKOUT_SECONDS
          value: '10'
        - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
          value: 'true'
        volumeMounts:
        - name: webservice-metrics
          mountPath: /metrics
        - name: webservice-config
          mountPath: /var/opt/gitlab/templates
        - name: webservice-secrets
          mountPath: /etc/gitlab
          readOnly: true
        - name: webservice-secrets
          mountPath: /srv/gitlab/config/secrets.yml
          subPath: rails-secrets/secrets.yml
        - name: webservice-config
          mountPath: /etc/krb5.conf
          subPath: krb5.conf
        - name: webservice-config
          mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
          subPath: smtp_settings.rb
        - name: webservice-config
          mountPath: /srv/gitlab/INSTALLATION_TYPE
          subPath: installation_type
        - name: shared-upload-directory
          mountPath: /srv/gitlab/public/uploads/tmp
          readOnly: false
        - name: shared-tmp
          mountPath: /tmp
          readOnly: false
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        livenessProbe:
          httpGet:
            path: /-/liveness
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /-/readiness
            port: 8080
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 2
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - pkill -SIGINT -o ruby
        resources:
          requests:
            cpu: 300m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 300m
      - name: gitlab-workhorse
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee:v16.0.3
        ports:
        - containerPort: 8181
          name: http-workhorse
        env:
        - name: TMPDIR
          value: /tmp/gitlab
        - name: GITLAB_WORKHORSE_AUTH_BACKEND
          value: http://localhost:8080
        - name: GITLAB_WORKHORSE_EXTRA_ARGS
          value: ''
        - name: GITLAB_WORKHORSE_LISTEN_PORT
          value: '8181'
        - name: GITLAB_WORKHORSE_LOG_FORMAT
          value: json
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab/templates
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab/config
        - name: SHUTDOWN_BLACKOUT_SECONDS
          value: '10'
        volumeMounts:
        - name: workhorse-config
          mountPath: /var/opt/gitlab/templates
        - name: workhorse-secrets
          mountPath: /etc/gitlab
          readOnly: true
        - name: shared-upload-directory
          mountPath: /srv/gitlab/public/uploads/tmp
          readOnly: false
        - name: shared-tmp
          mountPath: /tmp
          readOnly: false
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - sleep $SHUTDOWN_BLACKOUT_SECONDS
        livenessProbe:
          exec:
            command:
            - /scripts/healthcheck
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /scripts/healthcheck
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 100m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      volumes:
      - name: shared-tmp
        emptyDir: {}
      - name: webservice-metrics
        emptyDir:
          medium: Memory
      - name: webservice-config
        configMap:
          name: release-name-webservice
      - name: workhorse-config
        configMap:
          name: release-name-workhorse-default
      - name: init-webservice-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: release-name-rails-secret
              items:
              - key: secrets.yml
                path: rails-secrets/secrets.yml
          - secret:
              name: release-name-gitlab-shell-secret
              items:
              - key: secret
                path: shell/.gitlab_shell_secret
          - secret:
              name: release-name-gitaly-secret
              items:
              - key: token
                path: gitaly/gitaly_token
          - secret:
              name: release-name-redis-secret
              items:
              - key: secret
                path: redis/redis-password
          - secret:
              name: release-name-postgresql-password
              items:
              - key: postgresql-password
                path: postgres/psql-password-ci
          - secret:
              name: release-name-postgresql-password
              items:
              - key: postgresql-password
                path: postgres/psql-password-main
          - secret:
              name: release-name-registry-secret
              items:
              - key: registry-auth.key
                path: registry/gitlab-registry.key
          - secret:
              name: release-name-registry-notification
              items:
              - key: secret
                path: registry/notificationSecret
          - secret:
              name: release-name-gitlab-workhorse-secret
              items:
              - key: shared_secret
                path: gitlab-workhorse/secret
          - secret:
              name: release-name-gitlab-kas-secret
              items:
              - key: kas_shared_secret
                path: kas/.gitlab_kas_secret
          - secret:
              name: release-name-gitlab-suggested-reviewers
              items:
              - key: suggested_reviewers_secret
                path: suggested_reviewers/.gitlab_suggested_reviewers_secret
          - secret:
              name: release-name-minio-secret
              items:
              - key: accesskey
                path: minio/accesskey
              - key: secretkey
                path: minio/secretkey
      - name: webservice-secrets
        emptyDir:
          medium: Memory
      - name: workhorse-secrets
        emptyDir:
          medium: Memory
      - name: shared-upload-directory
        emptyDir: {}
      - name: etc-ssl-certs
        emptyDir:
          medium: Memory
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: Memory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-minio
  namespace: test-ns
  labels:
    app: minio
    chart: minio-0.4.3
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  selector:
    matchLabels:
      app: minio
      release: release-name
      component: app
  strategy:
    type: Recreate
  template:
    metadata:
      name: release-name-minio
      labels:
        component: app
        app: minio
        chart: minio-0.4.3
        release: release-name
        heritage: Helm
      annotations:
        container.apparmor.security.beta.kubernetes.io/minio: runtime/default
        container.apparmor.security.beta.kubernetes.io/configure: runtime/default
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: podinfo
        downwardAPI:
          items:
          - path: labels
            fieldRef:
              fieldPath: metadata.labels
      - name: export
        persistentVolumeClaim:
          claimName: release-name-minio
      - name: minio-configuration
        projected:
          sources:
          - configMap:
              name: release-name-minio-config-cm
          - secret:
              name: release-name-minio-secret
      - name: minio-server-config
        emptyDir:
          medium: Memory
      initContainers:
      - name: configure
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox:1-uclibc@sha256:3dcd6bcb75d6ca5b23642482809ea3dbba4de07d277326454f443b9dcb14b012
        command:
        - sh
        - /config/configure
        volumeMounts:
        - name: minio-configuration
          mountPath: /config
        - name: minio-server-config
          mountPath: /minio
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      containers:
      - name: minio
        image: minio/minio:RELEASE.2017-12-28T01-21-00Z
        args:
        - -C
        - /tmp/.minio
        - --quiet
        - server
        - /export
        volumeMounts:
        - name: export
          mountPath: /export
        - name: minio-server-config
          mountPath: /tmp/.minio
        - name: podinfo
          mountPath: /podinfo
          readOnly: false
        ports:
        - name: service
          containerPort: 9000
        livenessProbe:
          tcpSocket:
            port: 9000
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 100m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-nginx-ingress-controller
  namespace: test-ns
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  selector:
    matchLabels:
      app: nginx-ingress
      release: release-name
      component: controller
  replicas: 1
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app: nginx-ingress
        release: release-name
        component: controller
      annotations:
        container.apparmor.security.beta.kubernetes.io/controller: runtime/default
    spec:
      dnsPolicy: ClusterFirst
      containers:
      - name: controller
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/ingress-nginx/controller:v1.2.1@sha256:5516d103a9c2ecc4f026efbd4b40662ce22dc1f824fb129ed121460aaa5c47f8
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/release-name-nginx-ingress-controller
        - --election-id=ingress-controller-leader
        - --controller-class=k8s.io/ingress-nginx
        - --configmap=$(POD_NAMESPACE)/release-name-nginx-ingress-controller
        - --tcp-services-configmap=default/release-name-nginx-ingress-tcp
        - --watch-namespace=$(POD_NAMESPACE)
        securityContext:
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
          runAsUser: 25000
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
        env:
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        - name: metrics
          containerPort: 10254
          protocol: TCP
        - name: gitlab-shell
          containerPort: 22
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            memory: 100Mi
            cpu: 100m
        volumeMounts:
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
      serviceAccountName: release-name-nginx-ingress
      terminationGracePeriodSeconds: 300
      volumes:
      - name: secret-volume
        secret:
          secretName: my-secret
      securityContext:
        runAsUser: 25000
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.18.0
    heritage: Helm
  name: release-name-prometheus-server
  namespace: test-ns
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  selector:
    matchLabels:
      component: server
      app: prometheus
      release: release-name
  replicas: 1
  strategy:
    type: Recreate
    rollingUpdate: null
  template:
    metadata:
      labels:
        component: server
        app: prometheus
        release: release-name
        chart: prometheus-15.18.0
        heritage: Helm
      annotations:
        container.apparmor.security.beta.kubernetes.io/prometheus-server-configmap-reload: runtime/default
        container.apparmor.security.beta.kubernetes.io/prometheus-server: runtime/default
    spec:
      enableServiceLinks: true
      serviceAccountName: release-name-prometheus-server
      containers:
      - name: prometheus-server-configmap-reload
        image: jimmidyson/configmap-reload:v0.5.0
        imagePullPolicy: IfNotPresent
        args:
        - --volume-dir=/etc/config
        - --webhook-url=http://127.0.0.1:9090/-/reload
        resources:
          requests:
            cpu: 250m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 128Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      - name: prometheus-server
        image: quay.io/prometheus/prometheus:v2.38.0
        imagePullPolicy: IfNotPresent
        args:
        - --storage.tsdb.retention.time=15d
        - --config.file=/etc/config/prometheus.yml
        - --storage.tsdb.path=/data
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --web.enable-lifecycle
        ports:
        - containerPort: 9090
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            cpu: 250m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 128Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: storage-volume
          mountPath: /data
          subPath: ''
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 300
      volumes:
      - name: config-volume
        configMap:
          name: release-name-prometheus-server
      - name: storage-volume
        persistentVolumeClaim:
          claimName: release-name-prometheus-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-registry
  namespace: test-ns
  labels:
    app: registry
    chart: registry-0.7.0
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  selector:
    matchLabels:
      app: registry
      release: release-name
  template:
    metadata:
      labels:
        app: registry
        chart: registry-0.7.0
        release: release-name
        heritage: Helm
      annotations:
        checksum/configmap: e33fd0be2f3ecafcebe1e28c00f2e25d2e40b4140c8b9816519a5bb49bbae05f
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
        container.apparmor.security.beta.kubernetes.io/registry: runtime/default
        container.apparmor.security.beta.kubernetes.io/certificates: runtime/default
        container.apparmor.security.beta.kubernetes.io/configure: runtime/default
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: registry
                  release: release-name
      automountServiceAccountToken: false
      initContainers:
      - name: certificates
        image: registry.gitlab.com/gitlab-org/build/cng/certificates:v16.0.3
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: false
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      - name: configure
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox:1-uclibc@sha256:3dcd6bcb75d6ca5b23642482809ea3dbba4de07d277326454f443b9dcb14b012
        command:
        - sh
        - /config/configure
        volumeMounts:
        - name: registry-secrets
          mountPath: /config
        - name: registry-server-config
          mountPath: /registry
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        env: null
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      containers:
      - name: registry
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-container-registry:v3.73.1-gitlab
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        env: null
        volumeMounts:
        - name: registry-server-config
          mountPath: /etc/docker/registry/
          readOnly: true
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        ports:
        - containerPort: 5000
          name: http
        - containerPort: 5001
          name: debug
        livenessProbe:
          httpGet:
            path: /debug/health
            port: debug
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /debug/health
            port: debug
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - sleep 5
      terminationGracePeriodSeconds: 30
      volumes:
      - name: registry-server-config
        emptyDir:
          medium: Memory
      - name: registry-secrets
        projected:
          sources:
          - configMap:
              name: release-name-registry
          - secret:
              name: release-name-registry-secret
              items:
              - key: registry-auth.crt
                path: certificate.crt
          - secret:
              name: release-name-registry-httpsecret
              items:
              - key: secret
                path: httpSecret
          - secret:
              name: release-name-minio-secret
      - name: etc-ssl-certs
        emptyDir:
          medium: Memory
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: Memory
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-gitlab-shell
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.0.3
    release: release-name
    heritage: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-gitlab-shell
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageValue: 100m
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-kas
  namespace: default
  labels:
    app: kas
    chart: kas-7.0.3
    release: release-name
    heritage: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-kas
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageValue: 100m
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-sidekiq-all-in-1-v2
  namespace: default
  labels:
    app: sidekiq
    chart: sidekiq-7.0.3
    release: release-name
    heritage: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-sidekiq-all-in-1-v2
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageValue: 350m
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-webservice-default
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.0.3
    release: release-name
    heritage: Helm
    gitlab.com/webservice-name: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-webservice-default
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageValue: 1
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-registry
  namespace: default
  labels:
    app: registry
    chart: registry-0.7.0
    release: release-name
    heritage: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-registry
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 75
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-gitaly
  namespace: test-ns
  labels:
    app: gitaly
    chart: gitaly-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  selector:
    matchLabels:
      app: gitaly
      release: release-name
  serviceName: release-name-gitaly
  replicas: 1
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: gitaly
        chart: gitaly-7.0.3
        release: release-name
        heritage: Helm
      annotations:
        checksum/config: 76ffb493937aac69a44af72bfdd72e8fba066e25ff148db2be18bcf08bc20833
        gitlab.com/prometheus_scrape: 'true'
        gitlab.com/prometheus_port: '9236'
        gitlab.com/prometheus_path: /metrics
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9236'
        prometheus.io/path: /metrics
        container.apparmor.security.beta.kubernetes.io/gitaly: runtime/default
        container.apparmor.security.beta.kubernetes.io/certificates: runtime/default
        container.apparmor.security.beta.kubernetes.io/configure: runtime/default
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: certificates
        image: registry.gitlab.com/gitlab-org/build/cng/certificates:v16.0.3
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: false
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      - name: configure
        command:
        - sh
        - /config/configure
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox:1-uclibc@sha256:3dcd6bcb75d6ca5b23642482809ea3dbba4de07d277326454f443b9dcb14b012
        volumeMounts:
        - name: gitaly-config
          mountPath: /config
          readOnly: true
        - name: init-gitaly-secrets
          mountPath: /init-config
          readOnly: true
        - name: gitaly-secrets
          mountPath: /init-secrets
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: gitaly
                  release: release-name
      automountServiceAccountToken: false
      containers:
      - name: gitaly
        image: registry.gitlab.com/gitlab-org/build/cng/gitaly:v16.0.3
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        ports:
        - containerPort: 8075
          name: grpc-gitaly
        - containerPort: 9236
          name: http-metrics
        env:
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /etc/gitaly/templates
        - name: CONFIG_DIRECTORY
          value: /etc/gitaly
        - name: GITALY_CONFIG_FILE
          value: /etc/gitaly/config.toml
        - name: SSL_CERT_DIR
          value: /etc/ssl/certs
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        - name: gitaly-config
          mountPath: /etc/gitaly/templates
        - name: gitaly-secrets
          mountPath: /etc/gitlab-secrets
          readOnly: true
        - name: repo-data
          mountPath: /home/git/repositories
        livenessProbe:
          exec:
            command:
            - /scripts/healthcheck
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /scripts/healthcheck
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 100m
      volumes:
      - name: gitaly-config
        configMap:
          name: release-name-gitaly
      - name: gitaly-secrets
        emptyDir:
          medium: Memory
      - name: init-gitaly-secrets
        projected:
          defaultMode: 288
          sources:
          - secret:
              name: release-name-gitaly-secret
              items:
              - key: token
                path: gitaly_token
          - secret:
              name: release-name-gitlab-shell-secret
              items:
              - key: secret
                path: .gitlab_shell_secret
      - name: etc-ssl-certs
        emptyDir:
          medium: Memory
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: Memory
  volumeClaimTemplates:
  - metadata:
      name: repo-data
      labels:
        app: gitaly
        release: release-name
      annotations: null
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      selector: null
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  namespace: test-ns
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.5.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  serviceName: release-name-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-12.5.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
      annotations:
        postgresql.gitlab/init-revision: '1'
        container.apparmor.security.beta.kubernetes.io/postgresql: runtime/default
        container.apparmor.security.beta.kubernetes.io/metrics: runtime/default
    spec:
      serviceAccountName: default
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: postgresql
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: primary
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      hostNetwork: false
      hostIPC: false
      containers:
      - name: postgresql
        image: docker.io/bitnami/postgresql:14.8.0
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1001
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: POSTGRESQL_PORT_NUMBER
          value: '5432'
        - name: POSTGRESQL_VOLUME_DIR
          value: /bitnami/postgresql
        - name: PGDATA
          value: /bitnami/postgresql/data
        - name: POSTGRES_USER
          value: gitlab
        - name: POSTGRES_DB
          value: gitlabhq_production
        - name: POSTGRESQL_ENABLE_LDAP
          value: 'no'
        - name: POSTGRESQL_ENABLE_TLS
          value: 'no'
        - name: POSTGRESQL_LOG_HOSTNAME
          value: 'false'
        - name: POSTGRESQL_LOG_CONNECTIONS
          value: 'false'
        - name: POSTGRESQL_LOG_DISCONNECTIONS
          value: 'false'
        - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
          value: 'off'
        - name: POSTGRESQL_CLIENT_MIN_MESSAGES
          value: error
        - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
          value: pgaudit
        ports:
        - name: tcp-postgresql
          containerPort: 5432
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "gitlab" -d "dbname=gitlabhq_production" -h 127.0.0.1
              -p 5432
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - 'exec pg_isready -U "gitlab" -d "dbname=gitlabhq_production" -h 127.0.0.1
              -p 5432

              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized
              ]

              '
        resources:
          limits:
            memory: 128Mi
            cpu: 250m
          requests:
            cpu: 250m
            memory: 128Mi
        volumeMounts:
        - name: custom-init-scripts
          mountPath: /docker-entrypoint-initdb.d/
        - name: dshm
          mountPath: /dev/shm
        - name: data
          mountPath: /bitnami/postgresql
        - mountPath: /docker-entrypoint-preinitdb.d/init_revision.sh
          name: custom-init-scripts
          subPath: init_revision.sh
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
      - name: metrics
        image: docker.io/bitnami/postgres-exporter:0.12.0-debian-11-r86
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        env:
        - name: DATA_SOURCE_URI
          value: 127.0.0.1:5432/gitlabhq_production?sslmode=disable
        - name: DATA_SOURCE_USER
          value: gitlab
        ports:
        - name: http-metrics
          containerPort: 9187
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          httpGet:
            path: /
            port: http-metrics
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          httpGet:
            path: /
            port: http-metrics
        volumeMounts:
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
        resources:
          limits:
            memory: 128Mi
            cpu: 250m
          requests:
            cpu: 250m
            memory: 128Mi
      volumes:
      - name: custom-init-scripts
        configMap:
          name: release-name-postgresql-init-db
      - name: dshm
        emptyDir:
          medium: Memory
      - name: secret-volume
        secret:
          secretName: my-secret
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-redis-master
  namespace: test-ns
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: master
  serviceName: release-name-redis-headless
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-16.13.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: master
      annotations:
        checksum/configmap: 169c8c0e9c586b7a35477e1358014305b8d2a661cb4fdba43d68220318b3d0a4
        checksum/health: 59d784a388edd40d5b42dd66eceeac59b980f4596412d919a63fe1ebbf800744
        checksum/scripts: 5d76d31d95ad16c2fb9c4ed3447880ecf0d3a75a961c9e5a415d53e869fb86d1
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        prometheus.io/port: '9121'
        prometheus.io/scrape: 'true'
        container.apparmor.security.beta.kubernetes.io/redis: runtime/default
        container.apparmor.security.beta.kubernetes.io/metrics: runtime/default
    spec:
      securityContext:
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: release-name-redis
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: redis
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: master
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      terminationGracePeriodSeconds: 30
      containers:
      - name: redis
        image: docker.io/bitnami/redis:6-alpine3.18@sha256:f9fd65500e22bff9ebcd214268f3f03b80a45cffa91d24d7313b242d6750bebc
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1001
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        command:
        - /bin/bash
        args:
        - -c
        - /opt/bitnami/scripts/start-scripts/start-master.sh
        env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: ALLOW_EMPTY_PASSWORD
          value: 'no'
        - name: REDIS_PASSWORD_FILE
          value: /opt/bitnami/redis/secrets/redis-password
        - name: REDIS_TLS_ENABLED
          value: 'no'
        - name: REDIS_PORT
          value: '6379'
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          limits:
            memory: 128Mi
            cpu: 250m
          requests:
            cpu: 250m
            memory: 128Mi
        volumeMounts:
        - name: start-scripts
          mountPath: /opt/bitnami/scripts/start-scripts
        - name: health
          mountPath: /health
        - name: redis-password
          mountPath: /opt/bitnami/redis/secrets/
        - name: redis-data
          mountPath: /data
          subPath: null
        - name: config
          mountPath: /opt/bitnami/redis/mounted-etc
        - name: redis-tmp-conf
          mountPath: /opt/bitnami/redis/etc/
        - name: tmp
          mountPath: /tmp
      - name: metrics
        image: docker.io/bitnami/redis-exporter:1.43.0-debian-11-r4
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1001
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        command:
        - /bin/bash
        - -c
        - 'if [[ -f ''/secrets/redis-password'' ]]; then

          export REDIS_PASSWORD=$(cat /secrets/redis-password)

          fi

          redis_exporter

          '
        env:
        - name: REDIS_ALIAS
          value: release-name-redis
        - name: REDIS_USER
          value: default
        ports:
        - name: metrics
          containerPort: 9121
        resources:
          limits:
            memory: 128Mi
            cpu: 250m
          requests:
            cpu: 250m
            memory: 128Mi
        volumeMounts:
        - name: redis-password
          mountPath: /secrets/
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: start-scripts
        configMap:
          name: release-name-redis-scripts
          defaultMode: 493
      - name: health
        configMap:
          name: release-name-redis-health
          defaultMode: 493
      - name: redis-password
        secret:
          secretName: release-name-redis-secret
          items:
          - key: secret
            path: redis-password
      - name: config
        configMap:
          name: release-name-redis-configuration
      - name: redis-tmp-conf
        emptyDir: {}
      - name: tmp
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-issuer-1
  namespace: test-ns
  labels:
    app: certmanager-issuer
    chart: certmanager-issuer-0.1.0
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  activeDeadlineSeconds: 300
  template:
    metadata:
      labels:
        app: certmanager-issuer
        release: release-name
      annotations:
        container.apparmor.security.beta.kubernetes.io/create-issuer: runtime/default
    spec:
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: release-name-certmanager-issuer
      restartPolicy: OnFailure
      containers:
      - name: create-issuer
        image: registry.gitlab.com/gitlab-org/build/cng/kubectl:v16.0.3
        command:
        - /bin/bash
        - /scripts/create-issuer
        - /scripts/issuer.yml
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: scripts
        configMap:
          name: release-name-certmanager-issuer-certmanager
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-migrations-1
  namespace: test-ns
  labels:
    app: migrations
    chart: migrations-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 6
  template:
    metadata:
      labels:
        app: migrations
        chart: migrations-7.0.3
        release: release-name
        heritage: Helm
      annotations:
        container.apparmor.security.beta.kubernetes.io/migrations: runtime/default
        container.apparmor.security.beta.kubernetes.io/certificates: runtime/default
        container.apparmor.security.beta.kubernetes.io/configure: runtime/default
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      initContainers:
      - name: certificates
        image: registry.gitlab.com/gitlab-org/build/cng/certificates:v16.0.3
        env: null
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: false
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      - name: configure
        command:
        - sh
        - /config/configure
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox:1-uclibc@sha256:3dcd6bcb75d6ca5b23642482809ea3dbba4de07d277326454f443b9dcb14b012
        env: null
        volumeMounts:
        - name: migrations-config
          mountPath: /config
          readOnly: true
        - name: init-migrations-secrets
          mountPath: /init-config
          readOnly: true
        - name: migrations-secrets
          mountPath: /init-secrets
          readOnly: false
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      restartPolicy: OnFailure
      containers:
      - name: migrations
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee:v16.0.3
        args:
        - /scripts/wait-for-deps
        - /scripts/db-migrate
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        env:
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab/templates
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab/config
        - name: BYPASS_SCHEMA_VERSION
          value: 'true'
        - name: ENABLE_BOOTSNAP
          value: '1'
        volumeMounts:
        - name: migrations-config
          mountPath: /var/opt/gitlab/templates
        - name: migrations-secrets
          mountPath: /etc/gitlab
          readOnly: true
        - name: migrations-secrets
          mountPath: /srv/gitlab/config/secrets.yml
          subPath: rails-secrets/secrets.yml
        - name: migrations-secrets
          mountPath: /srv/gitlab/config/initial_root_password
          subPath: migrations/initial_root_password
        - name: migrations-secrets
          mountPath: /srv/gitlab/config/gitlab_shared_runners_registration_token
          subPath: migrations/gitlab_shared_runners_registration_token
        - name: etc-ssl-certs
          mountPath: /etc/ssl/certs/
          readOnly: true
        - name: etc-pki-ca-trust-extracted-pem
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        resources:
          requests:
            cpu: 250m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 250m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: migrations-config
        configMap:
          name: release-name-migrations
      - name: init-migrations-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: release-name-rails-secret
              items:
              - key: secrets.yml
                path: rails-secrets/secrets.yml
          - secret:
              name: release-name-gitaly-secret
              items:
              - key: token
                path: gitaly/gitaly_token
          - secret:
              name: release-name-redis-secret
              items:
              - key: secret
                path: redis/redis-password
          - secret:
              name: release-name-postgresql-password
              items:
              - key: postgresql-password
                path: postgres/psql-password-ci
          - secret:
              name: release-name-postgresql-password
              items:
              - key: postgresql-password
                path: postgres/psql-password-main
          - secret:
              name: release-name-gitlab-initial-root-password
              items:
              - key: password
                path: migrations/initial_root_password
          - secret:
              name: release-name-gitlab-runner-secret
              items:
              - key: runner-registration-token
                path: migrations/gitlab_shared_runners_registration_token
      - name: migrations-secrets
        emptyDir:
          medium: Memory
      - name: etc-ssl-certs
        emptyDir:
          medium: Memory
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: Memory
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-minio-create-buckets-1
  namespace: test-ns
  labels:
    app: minio
    chart: minio-0.4.3
    release: release-name
    heritage: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  activeDeadlineSeconds: 600
  template:
    metadata:
      labels:
        component: create-buckets
        app: minio
        chart: minio-0.4.3
        release: release-name
        heritage: Helm
      annotations:
        container.apparmor.security.beta.kubernetes.io/minio-mc: runtime/default
    spec:
      automountServiceAccountToken: false
      restartPolicy: OnFailure
      volumes:
      - name: minio-configuration
        projected:
          sources:
          - configMap:
              name: release-name-minio-config-cm
          - secret:
              name: release-name-minio-secret
      containers:
      - name: minio-mc
        image: minio/mc:RELEASE.2018-07-13T00-53-22Z
        command:
        - /bin/sh
        - /config/initialize
        env:
        - name: MINIO_ENDPOINT
          value: release-name-minio-svc.default.svc
        - name: MINIO_PORT
          value: '9000'
        volumeMounts:
        - name: minio-configuration
          mountPath: /config
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      securityContext:
        runAsNonRoot: true
        runAsUser: 25000
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-4.0.6
    release: release-name
    heritage: Helm
    component: controller
    helm.sh/chart: nginx-ingress-4.0.6
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-nginx
spec:
  controller: k8s.io/ingress-nginx
---
apiVersion: apps/v1
kind: Ingress
metadata:
  name: release-name-kas
  namespace: default
  labels:
    app: kas
    chart: kas-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    kubernetes.io/ingress.class: release-name-nginx
    kubernetes.io/ingress.provider: nginx
    nginx.ingress.kubernetes.io/proxy-buffering: 'off'
    nginx.ingress.kubernetes.io/custom-http-errors: ''
    cert-manager.io/issuer: release-name-issuer
    acme.cert-manager.io/http01-edit-in-place: 'true'
spec:
  rules:
  - host: kas.example.com
    http:
      paths:
      - path: /k8s-proxy/
        backend:
          serviceName: release-name-kas
          servicePort: 8154
      - path: /
        backend:
          serviceName: release-name-kas
          servicePort: 8150
  tls:
  - hosts:
    - kas.example.com
    secretName: release-name-kas-tls
---
apiVersion: apps/v1
kind: Ingress
metadata:
  name: release-name-webservice-default
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.0.3
    release: release-name
    heritage: Helm
    gitlab.com/webservice-name: default
  annotations:
    kubernetes.io/ingress.class: release-name-nginx
    kubernetes.io/ingress.provider: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    nginx.ingress.kubernetes.io/proxy-read-timeout: '600'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '15'
    cert-manager.io/issuer: release-name-issuer
    acme.cert-manager.io/http01-edit-in-place: 'true'
    nginx.ingress.kubernetes.io/service-upstream: 'true'
spec:
  rules:
  - host: gitlab.example.com
    http:
      paths:
      - path: /
        backend:
          serviceName: release-name-webservice-default
          servicePort: 8181
  tls:
  - hosts:
    - gitlab.example.com
    secretName: release-name-gitlab-tls
---
apiVersion: apps/v1
kind: Ingress
metadata:
  name: release-name-minio
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: release-name
    heritage: Helm
  annotations:
    kubernetes.io/ingress.class: release-name-nginx
    kubernetes.io/ingress.provider: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '900'
    nginx.ingress.kubernetes.io/proxy-request-buffering: 'off'
    nginx.ingress.kubernetes.io/proxy-buffering: 'off'
    cert-manager.io/issuer: release-name-issuer
    acme.cert-manager.io/http01-edit-in-place: 'true'
spec:
  rules:
  - host: minio.example.com
    http:
      paths:
      - path: /
        backend:
          serviceName: release-name-minio-svc
          servicePort: 9000
  tls:
  - hosts:
    - minio.example.com
    secretName: release-name-minio-tls
---
apiVersion: apps/v1
kind: Ingress
metadata:
  name: release-name-registry
  namespace: default
  labels:
    app: registry
    chart: registry-0.7.0
    release: release-name
    heritage: Helm
  annotations:
    kubernetes.io/ingress.class: release-name-nginx
    kubernetes.io/ingress.provider: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '900'
    nginx.ingress.kubernetes.io/proxy-request-buffering: 'off'
    nginx.ingress.kubernetes.io/proxy-buffering: 'off'
    cert-manager.io/issuer: release-name-issuer
    acme.cert-manager.io/http01-edit-in-place: 'true'
spec:
  rules:
  - host: registry.example.com
    http:
      paths:
      - path: /
        backend:
          serviceName: release-name-registry
          servicePort: 5000
  tls:
  - hosts:
    - registry.example.com
    secretName: release-name-registry-tls
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-certmanager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
  annotations:
    cert-manager.io/inject-ca-from-secret: default/release-name-certmanager-webhook-ca
webhooks:
- name: webhook.cert-manager.io
  rules:
  - apiGroups:
    - cert-manager.io
    - acme.cert-manager.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - '*/*'
  admissionReviewVersions:
  - v1
  matchPolicy: Equivalent
  timeoutSeconds: 10
  failurePolicy: Fail
  sideEffects: None
  clientConfig:
    service:
      name: release-name-certmanager-webhook
      namespace: default
      path: /mutate
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-certmanager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
  annotations:
    cert-manager.io/inject-ca-from-secret: default/release-name-certmanager-webhook-ca
webhooks:
- name: webhook.cert-manager.io
  namespaceSelector:
    matchExpressions:
    - key: cert-manager.io/disable-validation
      operator: NotIn
      values:
      - 'true'
    - key: name
      operator: NotIn
      values:
      - default
  rules:
  - apiGroups:
    - cert-manager.io
    - acme.cert-manager.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - '*/*'
  admissionReviewVersions:
  - v1
  matchPolicy: Equivalent
  timeoutSeconds: 10
  failurePolicy: Fail
  sideEffects: None
  clientConfig:
    service:
      name: release-name-certmanager-webhook
      namespace: default
      path: /validate
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: release-name-certmanager-startupapicheck
  namespace: default
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '-5'
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: startupapicheck
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-shared-secrets
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: '-5'
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-shared-secrets
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: '-3'
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
data:
  generate-secrets: "# vim: set filetype=sh:\n\nnamespace=default\nrelease=release-name\n\
    env=production\n\npushd $(mktemp -d)\n\n# Args pattern, length\nfunction gen_random(){\n\
    \  head -c 4096 /dev/urandom | LC_CTYPE=C tr -cd $1 | head -c $2\n}\n\n# Args:\
    \ yaml file, search path\nfunction fetch_rails_value(){\n  local value=$(yq \"\
    .${2}\" $1)\n\n  # Don't return null values\n  if [ \"${value}\" != \"null\" ];\
    \ then echo \"${value}\"; fi\n}\n\n# Args: secretname\nfunction label_secret(){\n\
    \  local secret_name=$1\n# Remove application labels if they exist\n  kubectl\
    \ --namespace=$namespace label \\\n    secret $secret_name $(echo 'app.kubernetes.io/name=release-name'\
    \ | sed -E 's/=[^ ]*/-/g')\n\n  kubectl --namespace=$namespace label \\\n    --overwrite\
    \ \\\n    secret $secret_name app=gitlab chart=gitlab-7.0.3 release=release-name\
    \ heritage=Helm \n}\n\n# Args: secretname, args\nfunction generate_secret_if_needed(){\n\
    \  local secret_args=( \"${@:2}\")\n  local secret_name=$1\n\n  if ! $(kubectl\
    \ --namespace=$namespace get secret $secret_name > /dev/null 2>&1); then\n   \
    \ kubectl --namespace=$namespace create secret generic $secret_name ${secret_args[@]}\n\
    \  else\n    echo \"secret \\\"$secret_name\\\" already exists.\"\n\n    for arg\
    \ in \"${secret_args[@]}\"; do\n      local from=$(echo -n ${arg} | cut -d '='\
    \ -f1)\n\n      if [ -z \"${from##*literal*}\" ]; then\n        local key=$(echo\
    \ -n ${arg} | cut -d '=' -f2)\n        local desiredValue=$(echo -n ${arg} | cut\
    \ -d '=' -f3-)\n        local flags=\"--namespace=$namespace --allow-missing-template-keys=false\"\
    \n\n        if ! $(kubectl $flags get secret $secret_name -ojsonpath=\"{.data.${key}}\"\
    \ > /dev/null 2>&1); then\n          echo \"key \\\"${key}\\\" does not exist.\
    \ patching it in.\"\n\n          if [ \"${desiredValue}\" != \"\" ]; then\n  \
    \          desiredValue=$(echo -n \"${desiredValue}\" | base64 -w 0)\n       \
    \   fi\n\n          kubectl --namespace=$namespace patch secret ${secret_name}\
    \ -p \"{\\\"data\\\":{\\\"$key\\\":\\\"${desiredValue}\\\"}}\"\n        fi\n \
    \     fi\n    done\n  fi\n\n  label_secret $secret_name\n}\n\n# Initial root password\n\
    generate_secret_if_needed \"release-name-gitlab-initial-root-password\" --from-literal=\"\
    password\"=$(gen_random 'a-zA-Z0-9' 64)\n\n\n# Redis password\ngenerate_secret_if_needed\
    \ \"release-name-redis-secret\" --from-literal=\"secret\"=$(gen_random 'a-zA-Z0-9'\
    \ 64)\n\n\n# Postgres password\ngenerate_secret_if_needed \"release-name-postgresql-password\"\
    \ --from-literal=\"postgresql-password\"=$(gen_random 'a-zA-Z0-9' 64) --from-literal=postgresql-postgres-password=$(gen_random\
    \ 'a-zA-Z0-9' 64)\n\n\n# Gitlab shell\ngenerate_secret_if_needed \"release-name-gitlab-shell-secret\"\
    \ --from-literal=\"secret\"=$(gen_random 'a-zA-Z0-9' 64)\n\n# Gitaly secret\n\
    generate_secret_if_needed \"release-name-gitaly-secret\" --from-literal=\"token\"\
    =$(gen_random 'a-zA-Z0-9' 64)\n\n# Minio secret\ngenerate_secret_if_needed \"\
    release-name-minio-secret\" --from-literal=accesskey=$(gen_random 'a-zA-Z0-9'\
    \ 64) --from-literal=secretkey=$(gen_random 'a-zA-Z0-9' 64)\n\n\n# Gitlab runner\
    \ secret\ngenerate_secret_if_needed \"release-name-gitlab-runner-secret\" --from-literal=runner-registration-token=$(gen_random\
    \ 'a-zA-Z0-9' 64) --from-literal=runner-token=\"\"\n\n# GitLab Pages API secret\n\
    \n\n# GitLab Pages auth secret for hashing cookie store when using access control\n\
    \n\n# GitLab Pages OAuth secret\n\n\n# Gitlab-kas secret\ngenerate_secret_if_needed\
    \ \"release-name-gitlab-kas-secret\" --from-literal=\"kas_shared_secret\"=$(gen_random\
    \ 'a-zA-Z0-9' 32 | base64)\n\n# Gitlab-kas private API secret\ngenerate_secret_if_needed\
    \ \"release-name-kas-private-api\" --from-literal=\"kas_private_api_secret\"=$(gen_random\
    \ 'a-zA-Z0-9' 32 | base64)\n\n\n# Gitlab-suggested-reviewers secret\ngenerate_secret_if_needed\
    \ \"release-name-gitlab-suggested-reviewers\" --from-literal=\"suggested_reviewers_secret\"\
    =$(gen_random 'a-zA-Z0-9' 32 | base64)\n\n\n\n\n\n# Registry certificates\nmkdir\
    \ -p certs\nopenssl req -new -newkey rsa:4096 -subj \"/CN=gitlab-issuer\" -nodes\
    \ -x509 -keyout certs/registry-example-com.key -out certs/registry-example-com.crt\
    \ -days 3650\ngenerate_secret_if_needed \"release-name-registry-secret\" --from-file=registry-auth.key=certs/registry-example-com.key\
    \ --from-file=registry-auth.crt=certs/registry-example-com.crt\n\n# config/secrets.yaml\n\
    if [ -n \"$env\" ]; then\n  rails_secret=\"release-name-rails-secret\"\n\n  #\
    \ Fetch the values from the existing secret if it exists\n  if $(kubectl --namespace=$namespace\
    \ get secret $rails_secret > /dev/null 2>&1); then\n    kubectl --namespace=$namespace\
    \ get secret $rails_secret -o jsonpath=\"{.data.secrets\\.yml}\" | base64 --decode\
    \ > secrets.yml\n    secret_key_base=$(fetch_rails_value secrets.yml \"${env}.secret_key_base\"\
    )\n    otp_key_base=$(fetch_rails_value secrets.yml \"${env}.otp_key_base\")\n\
    \    db_key_base=$(fetch_rails_value secrets.yml \"${env}.db_key_base\")\n   \
    \ openid_connect_signing_key=$(fetch_rails_value secrets.yml \"${env}.openid_connect_signing_key\"\
    )\n    ci_jwt_signing_key=$(fetch_rails_value secrets.yml \"${env}.ci_jwt_signing_key\"\
    )\n    encrypted_settings_key_base=$(fetch_rails_value secrets.yml \"${env}.encrypted_settings_key_base\"\
    )\n  fi;\n\n  # Generate defaults for any unset secrets\n  secret_key_base=\"\
    ${secret_key_base:-$(gen_random 'a-f0-9' 128)}\" # equavilent to secureRandom.hex(64)\n\
    \  otp_key_base=\"${otp_key_base:-$(gen_random 'a-f0-9' 128)}\" # equavilent to\
    \ secureRandom.hex(64)\n  db_key_base=\"${db_key_base:-$(gen_random 'a-f0-9' 128)}\"\
    \ # equavilent to secureRandom.hex(64)\n  openid_connect_signing_key=\"${openid_connect_signing_key:-$(openssl\
    \ genrsa 2048)}\"\n  ci_jwt_signing_key=\"${ci_jwt_signing_key:-$(openssl genrsa\
    \ 2048)}\"\n  encrypted_settings_key_base=\"${encrypted_settings_key_base:-$(gen_random\
    \ 'a-f0-9' 128)}\" # equavilent to secureRandom.hex(64)\n\n  # Update the existing\
    \ secret\n  cat << EOF > rails-secrets.yml\napiVersion: v1\nkind: Secret\nmetadata:\n\
    \  name: $rails_secret\ntype: Opaque\nstringData:\n  secrets.yml: |-\n    $env:\n\
    \      secret_key_base: $secret_key_base\n      otp_key_base: $otp_key_base\n\
    \      db_key_base: $db_key_base\n      encrypted_settings_key_base: $encrypted_settings_key_base\n\
    \      openid_connect_signing_key: |\n$(echo \"${openid_connect_signing_key}\"\
    \ | awk '{print \"        \" $0}')\n      ci_jwt_signing_key: |\n$(echo \"${ci_jwt_signing_key}\"\
    \ | awk '{print \"        \" $0}')\nEOF\n  kubectl --validate=false --namespace=$namespace\
    \ apply -f rails-secrets.yml\n  label_secret $rails_secret\nfi\n\n# Shell ssh\
    \ host keys\nssh-keygen -A\nmkdir -p host_keys\ncp /etc/ssh/ssh_host_* host_keys/\n\
    generate_secret_if_needed \"release-name-gitlab-shell-host-keys\" --from-file\
    \ host_keys\n\n# Gitlab-workhorse secret\ngenerate_secret_if_needed \"release-name-gitlab-workhorse-secret\"\
    \ --from-literal=\"shared_secret\"=$(gen_random 'a-zA-Z0-9' 32 | base64)\n\n#\
    \ Registry http.secret secret\ngenerate_secret_if_needed \"release-name-registry-httpsecret\"\
    \ --from-literal=\"secret\"=$(gen_random 'a-z0-9' 128 | base64 -w 0)\n\n# Container\
    \ Registry notification_secret\ngenerate_secret_if_needed \"release-name-registry-notification\"\
    \ --from-literal=\"secret\"=[\\\"$(gen_random 'a-zA-Z0-9' 32)\\\"]\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-gitlab-upgrade-check
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: '-11'
    helm.sh/hook-delete-policy: before-hook-creation
data:
  runcheck: "#!/bin/sh\n\nset -e\n\nnotify() {\n  echo \"$1\"\n  echo -n \"$1 \" >>\
    \ /dev/termination-log\n}\n\ngreater_version()\n{\n  test \"$(printf '%s\\n' \"\
    $@\" | sort -V | tail -n 1)\" = \"$1\";\n}\n\n# For the PostgreSQL upgrade, you\
    \ either need both secrets, or no secrets.\n# If there are no secrets, we will\
    \ create them for you.\n# If the secrets aren't in either of these states, we\
    \ assume you are upgrading from an older version\n# This is running ahead of version\
    \ checks to ensure this always runs. This is to account for\n# installations outside\
    \ of the official helm repo.\nsecrets_dir=\"/etc/secrets/postgresql\"\nif [ -d\
    \ \"${secrets_dir}\" ]; then\n  if [ ! \"$(ls -A ${secrets_dir}/..data/)\" = \"\
    \" ]; then\n    if [ ! -f \"${secrets_dir}/postgresql-postgres-password\" ] ||\
    \ [ ! -f \"${secrets_dir}/postgresql-password\" ]; then\n      notify \"You seem\
    \ to be upgrading from a previous version of GitLab using the bundled PostgreSQL\
    \ chart\"\n      notify \"There are some manual steps which need to be performed\
    \ in order to upgrade the database\"\n      notify \"Please see the upgrade documentation\
    \ for instructions on how to proceed:\"\n      notify \"https://docs.gitlab.com/charts/installation/upgrade.html\"\
    \n      exit 1\n    fi\n  fi\nfi\nMIN_VERSION=15.11\nCHART_MIN_VERSION=6.11\n\n\
    # Only run check for semver releases\nif ! awk 'BEGIN{exit(!(ARGV[1] ~ /^[0-9]{1,3}\\\
    .[0-9]{1,3}\\.[0-9]{1,3}/))}' \"$GITLAB_VERSION\"; then\n  exit 0\nfi\n\nNEW_MAJOR_VERSION=$(echo\
    \ $GITLAB_VERSION | awk -F \".\" '{print $1}')\nNEW_MINOR_VERSION=$(echo $GITLAB_VERSION\
    \ | awk -F \".\" '{print $1\".\"$2}')\n\nNEW_CHART_MAJOR_VERSION=$(echo $CHART_VERSION\
    \ | awk -F \".\" '{print $1}')\nNEW_CHART_MINOR_VERSION=$(echo $CHART_VERSION\
    \ | awk -F \".\" '{print $1\".\"$2}')\n\nif [ ! -f /chart-info/gitlabVersion ];\
    \ then\n  notify \"It seems you are attempting an unsupported upgrade path.\"\n\
    \  notify \"Please follow the upgrade documentation at https://docs.gitlab.com/ee/update/#upgrade-paths\"\
    \n  exit 1\nfi\n\nOLD_VERSION_STRING=$(cat /chart-info/gitlabVersion)\nOLD_CHART_VERSION_STRING=$(cat\
    \ /chart-info/gitlabChartVersion)\n\n# Skip check if old version wasn't semver\n\
    if ! awk 'BEGIN{exit(!(ARGV[1] ~ /^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/))}' \"\
    $OLD_VERSION_STRING\"; then\n  exit 0\nfi\n\nOLD_MAJOR_VERSION=$(echo $OLD_VERSION_STRING\
    \ | awk -F \".\" '{print $1}')\nOLD_MINOR_VERSION=$(echo $OLD_VERSION_STRING |\
    \ awk -F \".\" '{print $1\".\"$2}')\nOLD_CHART_MAJOR_VERSION=$(echo $OLD_CHART_VERSION_STRING\
    \ | awk -F \".\" '{print $1}')\nOLD_CHART_MINOR_VERSION=$(echo $OLD_CHART_VERSION_STRING\
    \ | awk -F \".\" '{print $1\".\"$2}')\n\n# Checking Version\n# (i) if it is a\
    \ major version jump\n# (ii) if existing version is less than required minimum\
    \ version\nif [ ${OLD_MAJOR_VERSION} -lt ${NEW_MAJOR_VERSION} ] || [ ${OLD_CHART_MAJOR_VERSION}\
    \ -lt ${NEW_CHART_MAJOR_VERSION} ]; then\n  if ( ! greater_version $OLD_MINOR_VERSION\
    \ $MIN_VERSION ) || ( ! greater_version $OLD_CHART_MINOR_VERSION $CHART_MIN_VERSION\
    \ ); then\n    notify \"It seems you are upgrading the GitLab Helm Chart from\
    \ ${OLD_CHART_VERSION_STRING} (GitLab ${OLD_VERSION_STRING}) to ${CHART_VERSION}\
    \ (GitLab ${GITLAB_VERSION}).\"\n    notify \"It is required to upgrade to the\
    \ latest ${CHART_MIN_VERSION}.x version first before proceeding.\"\n    notify\
    \ \"Please follow the upgrade documentation at https://docs.gitlab.com/charts/releases/7_0.html\"\
    \n    notify \"and upgrade to GitLab Helm Chart version ${CHART_MIN_VERSION}.x\
    \ before upgrading to ${CHART_VERSION}.\"\n    exit 1\n  fi\nfi\n"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-certmanager-startupapicheck:create-cert
  namespace: default
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: startupapicheck
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '-5'
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - create
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-shared-secrets
  namespace: default
  labels:
    app: shared-secrets
    chart: shared-secrets-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: '-5'
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
rules:
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get
  - list
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-certmanager-startupapicheck:create-cert
  namespace: default
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: startupapicheck
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '-5'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-certmanager-startupapicheck:create-cert
subjects:
- kind: ServiceAccount
  name: release-name-certmanager-startupapicheck
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-shared-secrets
  namespace: default
  labels:
    app: shared-secrets
    chart: shared-secrets-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: '-5'
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-shared-secrets
subjects:
- kind: ServiceAccount
  name: release-name-shared-secrets
  namespace: default
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-webservice-test-runner-t8yp6
  namespace: test-ns
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,hook-failed,before-hook-creation
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
    container.apparmor.security.beta.kubernetes.io/test-runner: runtime/default
  labels:
    app: webservice
    chart: webservice-7.0.3
    release: release-name
    heritage: Helm
spec:
  containers:
  - name: test-runner
    image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v16.0.3
    command:
    - sh
    - /tests/test_login
    volumeMounts:
    - name: tests
      mountPath: /tests
    - name: root-password
      readOnly: true
      mountPath: /initial_root_password
      subPath: initial_root_password
    readinessProbe:
      exec:
        command:
        - ls
        - /
      initialDelaySeconds: 30
      periodSeconds: 10
    resources:
      requests:
        cpu: 250m
        memory: 128Mi
      limits:
        cpu: 250m
        memory: 128Mi
    securityContext:
      runAsNonRoot: true
      runAsUser: 25000
      runAsGroup: 25000
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
    livenessProbe:
      exec:
        command:
        - ls
        - /
      initialDelaySeconds: 30
      periodSeconds: 10
  volumes:
  - name: tests
    configMap:
      name: release-name-webservice-tests
  - name: root-password
    secret:
      secretName: release-name-gitlab-initial-root-password
      items:
      - key: password
        path: initial_root_password
  restartPolicy: Never
  securityContext:
    runAsNonRoot: true
    runAsUser: 25000
    runAsGroup: 25000
    seccompProfile:
      type: RuntimeDefault
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-certmanager-startupapicheck
  namespace: test-ns
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: startupapicheck
    app.kubernetes.io/version: v1.11.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '1'
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  backoffLimit: 4
  template:
    metadata:
      labels:
        app: startupapicheck
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: startupapicheck
        app.kubernetes.io/version: v1.11.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: certmanager-v1.11.1
      annotations:
        container.apparmor.security.beta.kubernetes.io/certmanager-startupapicheck: runtime/default
    spec:
      restartPolicy: OnFailure
      serviceAccountName: release-name-certmanager-startupapicheck
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: certmanager-startupapicheck
        image: quay.io/jetstack/cert-manager-ctl:v1.11.1
        imagePullPolicy: IfNotPresent
        args:
        - check
        - api
        - --wait=1m
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            cpu: 250m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 128Mi
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-shared-secrets-1-vmm
  namespace: test-ns
  labels:
    app: gitlab
    chart: gitlab-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  template:
    metadata:
      labels:
        app: gitlab
        chart: gitlab-7.0.3
        release: release-name
        heritage: Helm
      annotations:
        container.apparmor.security.beta.kubernetes.io/gitlab: runtime/default
    spec:
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: release-name-shared-secrets
      restartPolicy: Never
      containers:
      - name: gitlab
        image: registry.gitlab.com/gitlab-org/build/cng/kubectl:v16.0.3
        command:
        - /bin/bash
        - /scripts/generate-secrets
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        - name: ssh
          mountPath: /etc/ssh
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: scripts
        configMap:
          name: release-name-shared-secrets
      - name: ssh
        emptyDir: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-gitlab-upgrade-check
  namespace: test-ns
  labels:
    app: gitlab
    chart: gitlab-7.0.3
    release: release-name
    heritage: Helm
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: '-10'
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  backoffLimit: 2
  template:
    metadata:
      labels:
        app: gitlab
        release: release-name
      annotations:
        container.apparmor.security.beta.kubernetes.io/run-check: runtime/default
    spec:
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
        runAsNonRoot: true
        runAsGroup: 25000
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: Never
      containers:
      - name: run-check
        image: registry.gitlab.com/gitlab-org/cloud-native/mirror/images/busybox:1-uclibc@sha256:3dcd6bcb75d6ca5b23642482809ea3dbba4de07d277326454f443b9dcb14b012
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - /scripts/runcheck
        env:
        - name: GITLAB_VERSION
          value: 16.0.3
        - name: CHART_VERSION
          value: 7.0.3
        volumeMounts:
        - name: chart-info
          mountPath: /chart-info
        - name: scripts
          mountPath: /scripts
        - name: postgresql-secret
          mountPath: /etc/secrets/postgresql
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 25000
          runAsGroup: 25000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: chart-info
        configMap:
          name: release-name-gitlab-chart-info
          optional: true
      - name: scripts
        configMap:
          name: release-name-gitlab-upgrade-check
      - name: postgresql-secret
        secret:
          secretName: release-name-postgresql-password
          optional: true
