apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
automountServiceAccountToken: false
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: dVQ4QkRxVE9kRQ==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: '[mysqld]

    skip-name-resolve

    explicit_defaults_for_timestamp

    basedir=/opt/bitnami/mariadb

    plugin_dir=/opt/bitnami/mariadb/plugin

    port=3306

    socket=/opt/bitnami/mariadb/tmp/mysql.sock

    tmpdir=/opt/bitnami/mariadb/tmp

    max_allowed_packet=16M

    bind-address=*

    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

    log-error=/opt/bitnami/mariadb/logs/mysqld.log

    character-set-server=UTF8

    collation-server=utf8_general_ci

    slow_query_log=0

    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log

    long_query_time=10.0


    [client]

    port=3306

    socket=/opt/bitnami/mariadb/tmp/mysql.sock

    default-character-set=UTF8

    plugin_dir=/opt/bitnami/mariadb/plugin


    [manager]

    port=3306

    socket=/opt/bitnami/mariadb/tmp/mysql.sock

    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid'
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: mysql
    nodePort: null
  selector:
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mariadb
  namespace: test-ns
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: release-name-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: b65ed00d5d96d498636a909c36819a102a503f1ff51a50daf9803302c5c92919
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-12.2.5
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: release-name-mariadb
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: mariadb
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: primary
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
        runAsUser: 25000
      containers:
      - name: mariadb
        image: docker.io/bitnami/mariadb:10.11.4-debian-11-r0
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          runAsUser: 25000
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: MARIADB_DATABASE
          value: my_database
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\n\
              fi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\n\
              fi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
        resources:
          limits:
            memory: 128Mi
          requests:
            memory: 128Mi
        volumeMounts:
        - name: data
          mountPath: /bitnami/mariadb
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
      volumes:
      - name: config
        configMap:
          name: release-name-mariadb
      - name: secret-volume
        secret:
          secretName: my-secret
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: primary
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
