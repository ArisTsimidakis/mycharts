apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: nfs-server-provisioner
    chart: nfs-server-provisioner-1.4.0
    heritage: Helm
    release: release-name
  name: release-name-nfs-server-provisioner
  namespace: test-ns
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: nfs
  labels:
    app: nfs-server-provisioner
    chart: nfs-server-provisioner-1.4.0
    heritage: Helm
    release: release-name
provisioner: cluster.local/release-name-nfs-server-provisioner
reclaimPolicy: Delete
allowVolumeExpansion: true
mountOptions:
- vers=3
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-nfs-server-provisioner
  labels:
    app: nfs-server-provisioner
    chart: nfs-server-provisioner-1.4.0
    heritage: Helm
    release: release-name
rules:
- apiGroups:
  - ''
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - ''
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ''
  resources:
  - services
  - endpoints
  verbs:
  - get
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - nfs-provisioner
  verbs:
  - use
- apiGroups:
  - ''
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: nfs-server-provisioner
    chart: nfs-server-provisioner-1.4.0
    heritage: Helm
    release: release-name
  name: release-name-nfs-server-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-nfs-server-provisioner
subjects:
- kind: ServiceAccount
  name: release-name-nfs-server-provisioner
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-nfs-server-provisioner
  labels:
    app: nfs-server-provisioner
    chart: nfs-server-provisioner-1.4.0
    heritage: Helm
    release: release-name
  namespace: test-ns
spec:
  type: ClusterIP
  ports:
  - port: 2049
    targetPort: nfs
    protocol: TCP
    name: nfs
  - port: 2049
    targetPort: nfs-udp
    protocol: UDP
    name: nfs-udp
  - port: 32803
    targetPort: nlockmgr
    protocol: TCP
    name: nlockmgr
  - port: 32803
    targetPort: nlockmgr-udp
    protocol: UDP
    name: nlockmgr-udp
  - port: 20048
    targetPort: mountd
    protocol: TCP
    name: mountd
  - port: 20048
    targetPort: mountd-udp
    protocol: UDP
    name: mountd-udp
  - port: 875
    targetPort: rquotad
    protocol: TCP
    name: rquotad
  - port: 875
    targetPort: rquotad-udp
    protocol: UDP
    name: rquotad-udp
  - port: 111
    targetPort: rpcbind
    protocol: TCP
    name: rpcbind
  - port: 111
    targetPort: rpcbind-udp
    protocol: UDP
    name: rpcbind-udp
  - port: 662
    targetPort: statd
    protocol: TCP
    name: statd
  - port: 662
    targetPort: statd-udp
    protocol: UDP
    name: statd-udp
  selector:
    app: nfs-server-provisioner
    release: release-name
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-nfs-server-provisioner
  labels:
    app: nfs-server-provisioner
    chart: nfs-server-provisioner-1.4.0
    heritage: Helm
    release: release-name
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  namespace: test-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server-provisioner
      release: release-name
  serviceName: release-name-nfs-server-provisioner
  template:
    metadata:
      labels:
        app: nfs-server-provisioner
        chart: nfs-server-provisioner-1.4.0
        heritage: Helm
        release: release-name
    spec:
      terminationGracePeriodSeconds: 100
      serviceAccountName: release-name-nfs-server-provisioner
      containers:
      - name: nfs-server-provisioner
        image: k8s.gcr.io/sig-storage/nfs-provisioner:v3.0.0
        imagePullPolicy: Always
        ports:
        - name: nfs
          containerPort: 2049
          protocol: TCP
        - name: nfs-udp
          containerPort: 2049
          protocol: UDP
        - name: nlockmgr
          containerPort: 32803
          protocol: TCP
        - name: nlockmgr-udp
          containerPort: 32803
          protocol: UDP
        - name: mountd
          containerPort: 20048
          protocol: TCP
        - name: mountd-udp
          containerPort: 20048
          protocol: UDP
        - name: rquotad
          containerPort: 875
          protocol: TCP
        - name: rquotad-udp
          containerPort: 875
          protocol: UDP
        - name: rpcbind
          containerPort: 111
          protocol: TCP
        - name: rpcbind-udp
          containerPort: 111
          protocol: UDP
        - name: statd
          containerPort: 662
          protocol: TCP
        - name: statd-udp
          containerPort: 662
          protocol: UDP
        securityContext:
          capabilities:
            drop:
            - ALL
          allowPrivilegeEscalation: false
          runAsUser: 25000
          readOnlyRootFilesystem: true
        args:
        - -provisioner=cluster.local/release-name-nfs-server-provisioner
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_NAME
          value: release-name-nfs-server-provisioner
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: data
          mountPath: /export
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: 128Mi
            cpu: 250m
          limits:
            memory: 128Mi
            cpu: 250m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: data
        emptyDir: {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsUser: 25000
        runAsNonRoot: true
        runAsGroup: 25000
      automountServiceAccountToken: false
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-network-policy
spec:
  podSelector: {}
  ingress:
  - {}
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-network-policy
  namespace: test-ns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - ipBlock:
        cidr: 172.17.0.0/16
        except:
        - 172.17.1.0/24
    - namespaceSelector:
        matchLabels:
          project: myproject
    - podSelector:
        matchLabels:
          role: frontend
    ports:
    - protocol: TCP
      port: 6379
  egress:
  - to:
    - ipBlock:
        cidr: 10.0.0.0/24
    ports:
    - protocol: TCP
      port: 5978
