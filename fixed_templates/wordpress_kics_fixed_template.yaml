apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mariadb
  namespace: test-ns
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
automountServiceAccountToken: false
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mariadb
  namespace: test-ns
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: NDZCdmlTSXhsMw==
  mariadb-password: cUVMeEhSckh6eg==
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-wordpress
  namespace: test-ns
  labels:
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-16.1.13
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  wordpress-password: ZmZxWldEZ3paZA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mariadb
  namespace: test-ns
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: '[mysqld]

    skip-name-resolve

    explicit_defaults_for_timestamp

    basedir=/opt/bitnami/mariadb

    plugin_dir=/opt/bitnami/mariadb/plugin

    port=3306

    socket=/opt/bitnami/mariadb/tmp/mysql.sock

    tmpdir=/opt/bitnami/mariadb/tmp

    max_allowed_packet=16M

    bind-address=*

    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

    log-error=/opt/bitnami/mariadb/logs/mysqld.log

    character-set-server=UTF8

    collation-server=utf8_general_ci

    slow_query_log=0

    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log

    long_query_time=10.0


    [client]

    port=3306

    socket=/opt/bitnami/mariadb/tmp/mysql.sock

    default-character-set=UTF8

    plugin_dir=/opt/bitnami/mariadb/plugin


    [manager]

    port=3306

    socket=/opt/bitnami/mariadb/tmp/mysql.sock

    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid'
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-wordpress
  namespace: default
  labels:
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-16.1.13
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  namespace: test-ns
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: mysql
    nodePort: null
  selector:
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-wordpress
  namespace: test-ns
  labels:
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-16.1.13
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    networking.gke.io/load-balancer-type: Internal
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  sessionAffinity: None
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-wordpress
  namespace: test-ns
  labels:
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-16.1.13
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: wordpress
      app.kubernetes.io/instance: release-name
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wordpress
        helm.sh/chart: wordpress-16.1.13
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
        container.apparmor.security.beta.kubernetes.io/wordpress: runtime/default
    spec:
      hostAliases:
      - hostnames:
        - status.localhost
        ip: 127.0.0.1
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: wordpress
                  app.kubernetes.io/instance: release-name
              topologyKey: kubernetes.io/hostname
            weight: 1
      securityContext:
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
        runAsUser: 25000
      serviceAccountName: default
      containers:
      - name: wordpress
        image: docker.io/bitnami/wordpress:beta-php8.0-fpm@sha256:f19d72ed781b6fccc7b72cc8dd33739e04e5d1e73c2e03a41c8a4b89d4b18a5f
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 25000
        env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: ALLOW_EMPTY_PASSWORD
          value: 'yes'
        - name: MARIADB_HOST
          value: release-name-mariadb
        - name: MARIADB_PORT_NUMBER
          value: '3306'
        - name: WORDPRESS_DATABASE_NAME
          value: bitnami_wordpress
        - name: WORDPRESS_DATABASE_USER
          value: bn_wordpress
        - name: WORDPRESS_USERNAME
          value: user
        - name: WORDPRESS_EMAIL
          value: user@example.com
        - name: WORDPRESS_FIRST_NAME
          value: FirstName
        - name: WORDPRESS_LAST_NAME
          value: LastName
        - name: WORDPRESS_HTACCESS_OVERRIDE_NONE
          value: 'no'
        - name: WORDPRESS_ENABLE_HTACCESS_PERSISTENCE
          value: 'no'
        - name: WORDPRESS_BLOG_NAME
          value: User's Blog!
        - name: WORDPRESS_SKIP_BOOTSTRAP
          value: 'no'
        - name: WORDPRESS_TABLE_PREFIX
          value: wp_
        - name: WORDPRESS_SCHEME
          value: http
        - name: WORDPRESS_EXTRA_WP_CONFIG_CONTENT
          value: ''
        - name: WORDPRESS_PLUGINS
          value: none
        - name: APACHE_HTTP_PORT_NUMBER
          value: '8080'
        - name: APACHE_HTTPS_PORT_NUMBER
          value: '8443'
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        livenessProbe:
          failureThreshold: 6
          httpGet:
            httpHeaders: []
            path: /wp-admin/install.php
            port: http
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 6
          httpGet:
            httpHeaders: []
            path: /wp-login.php
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 300m
            memory: 512Mi
          requests:
            cpu: 300m
            memory: 512Mi
        volumeMounts:
        - mountPath: /bitnami/wordpress
          name: wordpress-data
          subPath: wordpress
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
      volumes:
      - name: wordpress-data
        persistentVolumeClaim:
          claimName: release-name-wordpress
      - name: secret-volume
        secret:
          secretName: my-secret
      - name: secret-volume
        secret:
          secretName: my-secret
      automountServiceAccountToken: false
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mariadb
  namespace: test-ns
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: release-name-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: d2f5c4809b5c00987540b2c6835358b4a0aa090f4a77c426016b7b500d8ff3cd
        container.apparmor.security.beta.kubernetes.io/mariadb: runtime/default
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-12.2.4
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: release-name-mariadb
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: mariadb
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: primary
              topologyKey: kubernetes.io/hostname
            weight: 1
      securityContext:
        fsGroup: 1001
        runAsUser: 25000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: mariadb
        image: docker.io/bitnami/mariadb:11.0.2@sha256:c57215c3aabbdb96353ce8b89a7bd6be089f49a4d6bb37f199288a1bf0438a02
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          runAsUser: 25000
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: MARIADB_USER
          value: bn_wordpress
        - name: MARIADB_DATABASE
          value: bitnami_wordpress
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\n\
              fi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\n\
              fi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 128Mi
        volumeMounts:
        - name: data
          mountPath: /bitnami/mariadb
        - name: config
          mountPath: /opt/bitnami/mariadb/conf/my.cnf
          subPath: my.cnf
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
      volumes:
      - name: config
        configMap:
          name: release-name-mariadb
      - name: secret-volume
        secret:
          secretName: my-secret
      - name: secret-volume
        secret:
          secretName: my-secret
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: primary
    spec:
      accessModes:
      - ReadWriteOnce
      resources: {}
---
apiVersion: v1
kind: LimitRange
metadata:
  name: cpu-min-max-demo-lr
  namespace: test-ns
spec:
  limits:
  - max:
      cpu: 800m
    min:
      cpu: 250m
    type: Container
---
apiVersion: v1
kind: LimitRange
metadata:
  name: cpu-min-max-demo-lr
  namespace: default
spec:
  limits:
  - max:
      cpu: 800m
    min:
      cpu: 250m
    type: Container
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: pods-high
  namespace: test-ns
spec:
  hard:
    cpu: '1000'
    memory: 200Gi
    pods: '10'
  scopeSelector:
    matchExpressions:
    - operator: In
      scopeName: PriorityClass
      values:
      - high
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: pods-high
  namespace: default
spec:
  hard:
    cpu: '1000'
    memory: 200Gi
    pods: '10'
  scopeSelector:
    matchExpressions:
    - operator: In
      scopeName: PriorityClass
      values:
      - high
