apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-nginx-ingress
  namespace: default
  labels:
    helm.sh/chart: nginx-ingress-0.17.1
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.1.1
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nginx-ingress
  namespace: default
  labels:
    helm.sh/chart: nginx-ingress-0.17.1
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.1.1
    app.kubernetes.io/managed-by: Helm
data: null
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nginx-ingress-leader-election
  namespace: default
  labels:
    helm.sh/chart: nginx-ingress-0.17.1
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.1.1
    app.kubernetes.io/managed-by: Helm
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-nginx-ingress
  labels:
    helm.sh/chart: nginx-ingress-0.17.1
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.1.1
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - ''
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ''
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
  - list
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - k8s.nginx.org
  resources:
  - virtualservers
  - virtualserverroutes
  - globalconfigurations
  - transportservers
  - policies
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - k8s.nginx.org
  resources:
  - virtualservers/status
  - virtualserverroutes/status
  - policies/status
  - transportservers/status
  verbs:
  - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-nginx-ingress
  labels:
    helm.sh/chart: nginx-ingress-0.17.1
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.1.1
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-name-nginx-ingress
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-nginx-ingress
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-nginx-ingress-controller
  namespace: default
  labels:
    helm.sh/chart: nginx-ingress-0.17.1
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.1.1
    app.kubernetes.io/managed-by: Helm
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nginx-ingress-controller
  namespace: test-ns
  labels:
    helm.sh/chart: nginx-ingress-0.17.1
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.1.1
    app.kubernetes.io/managed-by: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-ingress
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-ingress
        app.kubernetes.io/instance: release-name
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9113'
        prometheus.io/scheme: http
        container.apparmor.security.beta.kubernetes.io/nginx-ingress: runtime/default
    spec:
      serviceAccountName: release-name-nginx-ingress
      automountServiceAccountToken: false
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsUser: 25000
      terminationGracePeriodSeconds: 30
      hostNetwork: false
      dnsPolicy: ClusterFirst
      containers:
      - image: nginx/nginx-ingress:3.1.1
        name: nginx-ingress
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: prometheus
          containerPort: 9113
        - name: readiness-port
          containerPort: 8081
        readinessProbe:
          httpGet:
            path: /nginx-ready
            port: readiness-port
          periodSeconds: 1
          initialDelaySeconds: 0
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            memory: 128Mi
            cpu: 100m
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 25000
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        env: []
        args:
        - -nginx-plus=false
        - -nginx-reload-timeout=60000
        - -enable-app-protect=false
        - -enable-app-protect-dos=false
        - -nginx-configmaps=$(POD_NAMESPACE)/release-name-nginx-ingress
        - -ingress-class=nginx
        - -health-status=false
        - -health-status-uri=/nginx-health
        - -nginx-debug=false
        - -v=1
        - -nginx-status=true
        - -nginx-status-port=8080
        - -nginx-status-allow-cidrs=127.0.0.1
        - -report-ingress-status
        - -external-service=release-name-nginx-ingress-controller
        - -enable-leader-election=true
        - -leader-election-lock-name=release-name-nginx-ingress-leader-election
        - -enable-prometheus-metrics=true
        - -prometheus-metrics-listen-port=9113
        - -prometheus-tls-secret=
        - -enable-service-insight=false
        - -service-insight-listen-port=9114
        - -service-insight-tls-secret=
        - -enable-custom-resources=true
        - -enable-snippets=false
        - -include-year=false
        - -disable-ipv6=false
        - -enable-tls-passthrough=false
        - -enable-preview-policies=false
        - -enable-cert-manager=false
        - -enable-oidc=false
        - -enable-external-dns=false
        - -ready-status=true
        - -ready-status-port=8081
        - -enable-latency-metrics=false
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: secret-volume
          readOnly: true
          mountPath: /etc/secret-volume
      volumes:
      - name: secret-volume
        secret:
          secretName: my-secret
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx
  labels:
    helm.sh/chart: nginx-ingress-0.17.1
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.1.1
    app.kubernetes.io/managed-by: Helm
spec:
  controller: nginx.org/ingress-controller
