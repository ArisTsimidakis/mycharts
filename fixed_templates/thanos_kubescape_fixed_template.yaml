apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-thanos-query-frontend
  namespace: default
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-12.6.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
  annotations: null
automountServiceAccountToken: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-thanos-query
  namespace: default
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-12.6.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query
  annotations: null
automountServiceAccountToken: true
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-thanos-query-frontend
  namespace: default
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-12.6.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
  annotations: null
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: http
    protocol: TCP
    name: http
    nodePort: null
  selector:
    app.kubernetes.io/name: thanos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-thanos-query-grpc
  namespace: default
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-12.6.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query
  annotations: null
spec:
  type: ClusterIP
  ports:
  - port: 10901
    targetPort: grpc
    protocol: TCP
    name: grpc
    nodePort: null
  selector:
    app.kubernetes.io/name: thanos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-thanos-query
  namespace: default
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-12.6.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query
  annotations: null
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: http
    protocol: TCP
    name: http
    nodePort: null
  selector:
    app.kubernetes.io/name: thanos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-thanos-query-frontend
  namespace: test-ns
  labels:
    app.kubernetes.io/name: MyApp
    helm.sh/chart: thanos-12.6.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
    app: MyApp
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: query-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: MyApp
        helm.sh/chart: thanos-12.6.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: query-frontend
        app: MyApp
      annotations:
        container.apparmor.security.beta.kubernetes.io/query-frontend: runtime/default
    spec:
      serviceAccountName: release-name-thanos-query-frontend
      automountServiceAccountToken: true
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: thanos
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: query-frontend
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: query-frontend
        image: docker.io/bitnami/thanos:0.31.0-scratch-r5
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        args:
        - query-frontend
        - --log.level=info
        - --log.format=logfmt
        - --http-address=0.0.0.0:10902
        - --query-frontend.downstream-url=http://release-name-thanos-query:9090
        ports:
        - name: http
          containerPort: 10902
          protocol: TCP
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
          httpGet:
            path: /-/healthy
            port: http
            scheme: HTTP
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
          httpGet:
            path: /-/ready
            port: http
            scheme: HTTP
        resources:
          limits:
            memory: 128Mi
            cpu: 250m
          requests: {}
        volumeMounts: null
      volumes: null
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-thanos-query
  namespace: test-ns
  labels:
    app.kubernetes.io/name: MyApp
    helm.sh/chart: thanos-12.6.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query
    app: MyApp
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: query
  template:
    metadata:
      labels:
        app.kubernetes.io/name: MyApp
        helm.sh/chart: thanos-12.6.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: query
        app: MyApp
      annotations:
        container.apparmor.security.beta.kubernetes.io/query: runtime/default
    spec:
      serviceAccountName: release-name-thanos-query
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: thanos
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: query
              topologyKey: kubernetes.io/hostname
            weight: 1
      securityContext:
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: query
        image: docker.io/bitnami/thanos:0.31.0-scratch-r5
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        args:
        - query
        - --log.level=info
        - --log.format=logfmt
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --query.replica-label=replica
        ports:
        - name: http
          containerPort: 10902
          protocol: TCP
        - name: grpc
          containerPort: 10901
          protocol: TCP
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
          httpGet:
            path: /-/healthy
            port: http
            scheme: HTTP
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
          httpGet:
            path: /-/ready
            port: http
            scheme: HTTP
        resources:
          limits:
            memory: 128Mi
            cpu: 250m
          requests:
            memory: 128Mi
            cpu: 250m
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-network-policy
spec:
  podSelector: {}
  ingress:
  - {}
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-network-policy
  namespace: test-ns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - ipBlock:
        cidr: 172.17.0.0/16
        except:
        - 172.17.1.0/24
    - namespaceSelector:
        matchLabels:
          project: myproject
    - podSelector:
        matchLabels:
          role: frontend
    ports:
    - protocol: TCP
      port: 6379
  egress:
  - to:
    - ipBlock:
        cidr: 10.0.0.0/24
    ports:
    - protocol: TCP
      port: 5978
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-network-policy
spec:
  podSelector: {}
  ingress:
  - {}
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-network-policy
  namespace: test-ns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - ipBlock:
        cidr: 172.17.0.0/16
        except:
        - 172.17.1.0/24
    - namespaceSelector:
        matchLabels:
          project: myproject
    - podSelector:
        matchLabels:
          role: frontend
    ports:
    - protocol: TCP
      port: 6379
  egress:
  - to:
    - ipBlock:
        cidr: 10.0.0.0/24
    ports:
    - protocol: TCP
      port: 5978
