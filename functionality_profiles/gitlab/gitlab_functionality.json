{
  "helmchart_name": "mycharts/gitlab",
  "release_name": "gitlab",
  "temp_name": "gitlab",
  "loc_helm_chart": "/home/clinton/functionality_oracle/artifacts/helm_charts/mycharts_gitlab.yml",
  "tool": "self",
  "pods": [
    {
      "pod_name": "gitlab-webservice-default",
      "type_pod": "Deployment",
      "containers": [
        {
          "cont_name": "webservice",
          "functionalities": {
            "check_34": {
              "add": [],
              "drop": [
                "CHOWN",
                "DAC_OVERRIDE",
                "FOWNER",
                "FSETID",
                "KILL",
                "SETGID",
                "SETUID",
                "SETPCAP",
                "SETFCAP",
                "NET_BIND_SERVICE",
                "NET_RAW",
                "SYS_CHROOT",
                "MKNOD",
                "AUDIT_WRITE"
              ],
              "description": "Minimize the admission of containers with capabilities assigned",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0"
            },
            "check_1": {
              "description": "Ensure each container has a configured memory request",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": "2.5G"
            },
            "check_2": {
              "description": "Ensure each container has a configured memory limit",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": "2.5G"
            },
            "check_4": {
              "description": "Ensure each container has a configured CPU request",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": "300m"
            },
            "check_5": {
              "description": "Ensure each container has a configured CPU limit",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": "300m"
            },
            "check_3": {
              "description": "Container Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_6": {
              "description": "Container CPU Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_10": {
              "description": "Prevent containers from sharing the host's PID namespace",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "",
              "value": true
            },
            "check_11": {
              "description": "Prevent containers from sharing the host's IPC namespace",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "",
              "value": true
            },
            "check_12": {
              "description": "Prevent containers from sharing the host's network namespace",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "",
              "value": true
            },
            "check_13": {
              "description": "Prevent containers from accessing host files by using high UIDs",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_14": {
              "description": "Prevent containers from accessing host files by using high GIDs",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_15": {
              "description": "Prevent containers from mounting Docker socket",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "",
              "value": true
            },
            "check_21": {
              "description": "Container should not be privileged",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_22": {
              "description": "Containers should not run with allowPrivilegeEscalation",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_27": {
              "description": "Use read-only filesystem for containers where possible",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_28": {
              "description": "Containers should not run as root",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_35": {
              "description": "Ensure that Service Account Tokens are only mounted where necessary",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "",
              "value": true
            },
            "check_36": {
              "description": "Ensure that default service accounts are not actively used",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "",
              "value": true
            },
            "check_37": {
              "description": "Ensure that the Service Account Name Undefined Or Empty",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "",
              "value": true
            },
            "check_41": {
              "description": "Cluster Allows Unsafe Sysctls",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "",
              "value": true
            },
            "check_47": {
              "description": "Prevent containers from accessing the underlying host",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "",
              "value": true
            },
            "check_31": {
              "description": "Ensure that the seccomp profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "",
              "value": "RuntimeDefault"
            },
            "check_32": {
              "description": "Ensure that the AppArmor profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-webservice-default",
              "obj_path": "spec/template/spec/containers/0",
              "value": "runtime/default"
            }
          }
        }
      ]
    },
    {
      "pod_name": "gitlab-gitlab-runner",
      "type_pod": "Deployment",
      "containers": [
        {
          "cont_name": "release-name-gitlab-runner",
          "functionalities": {
            "check_34": {
              "add": ["SETUID"],
              "drop": [
                "CHOWN",
                "DAC_OVERRIDE",
                "FOWNER",
                "FSETID",
                "KILL",
                "SETGID",
                "SETPCAP",
                "SETFCAP",
                "NET_BIND_SERVICE",
                "NET_RAW",
                "SYS_CHROOT",
                "MKNOD",
                "AUDIT_WRITE"
              ],
              "description": "Minimize the admission of containers with capabilities assigned",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0"
            },
            "check_1": {
              "description": "Ensure each container has a configured memory request",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": "1Gi"
            },
            "check_2": {
              "description": "Ensure each container has a configured memory limit",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": "1Gi"
            },
            "check_4": {
              "description": "Ensure each container has a configured CPU request",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": "2000m"
            },
            "check_5": {
              "description": "Ensure each container has a configured CPU limit",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": "2000m"
            },
            "check_3": {
              "description": "Container Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_6": {
              "description": "Container CPU Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_10": {
              "description": "Prevent containers from sharing the host's PID namespace",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "",
              "value": true
            },
            "check_11": {
              "description": "Prevent containers from sharing the host's IPC namespace",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "",
              "value": true
            },
            "check_12": {
              "description": "Prevent containers from sharing the host's network namespace",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_13": {
              "description": "Prevent containers from accessing host files by using high UIDs",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_14": {
              "description": "Prevent containers from accessing host files by using high GIDs",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_15": {
              "description": "Prevent containers from mounting Docker socket",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "",
              "value": true
            },
            "check_21": {
              "description": "Container should not be privileged",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_22": {
              "description": "Containers should not run with allowPrivilegeEscalation",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_27": {
              "description": "Use read-only filesystem for containers where possible",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_28": {
              "description": "Containers should not run as root",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_35": {
              "description": "Ensure that Service Account Tokens are only mounted where necessary",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "",
              "value": true
            },
            "check_36": {
              "description": "Ensure that default service accounts are not actively used",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "",
              "value": true
            },
            "check_37": {
              "description": "Ensure that the Service Account Name Undefined Or Empty",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "",
              "value": true
            },
            "check_41": {
              "description": "Cluster Allows Unsafe Sysctls",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "",
              "value": true
            },
            "check_47": {
              "description": "Prevent containers from accessing the underlying host",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "",
              "value": true
            },
            "check_31": {
              "description": "Ensure that the seccomp profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "",
              "value": "RuntimeDefault"
            },
            "check_32": {
              "description": "Ensure that the AppArmor profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-gitlab-runner",
              "obj_path": "spec/template/spec/containers/0",
              "value": "runtime/default"
            }
          }
        }
      ]
    },
    {
      "pod_name": "gitlab-gitlab-exporter",
      "type_pod": "Deployment",
      "containers": [
        {
          "cont_name": "gitlab-exporter",
          "functionalities": {
            "check_34": {
              "add": [],
              "drop": [
                "CHOWN",
                "DAC_OVERRIDE",
                "FOWNER",
                "FSETID",
                "KILL",
                "SETGID",
                "SETUID",
                "SETPCAP",
                "SETFCAP",
                "NET_BIND_SERVICE",
                "NET_RAW",
                "SYS_CHROOT",
                "MKNOD",
                "AUDIT_WRITE"
              ],
              "description": "Minimize the admission of containers with capabilities assigned",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0"
            },
            "check_1": {
              "description": "Ensure each container has a configured memory request",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": "100M"
            },
            "check_2": {
              "description": "Ensure each container has a configured memory limit",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": "100M"
            },
            "check_4": {
              "description": "Ensure each container has a configured CPU request",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": "75m"
            },
            "check_5": {
              "description": "Ensure each container has a configured CPU limit",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": "75m"
            },
            "check_3": {
              "description": "Container Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_6": {
              "description": "Container CPU Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_10": {
              "description": "Prevent containers from sharing the host's PID namespace",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "",
              "value": true
            },
            "check_11": {
              "description": "Prevent containers from sharing the host's IPC namespace",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "",
              "value": true
            },
            "check_12": {
              "description": "Prevent containers from sharing the host's network namespace",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "",
              "value": true
            },
            "check_13": {
              "description": "Prevent containers from accessing host files by using high UIDs",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_14": {
              "description": "Prevent containers from accessing host files by using high GIDs",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_15": {
              "description": "Prevent containers from mounting Docker socket",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "",
              "value": true
            },
            "check_21": {
              "description": "Container should not be privileged",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_22": {
              "description": "Containers should not run with allowPrivilegeEscalation",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_27": {
              "description": "Use read-only filesystem for containers where possible",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_28": {
              "description": "Containers should not run as root",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_35": {
              "description": "Ensure that Service Account Tokens are only mounted where necessary",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "",
              "value": true
            },
            "check_36": {
              "description": "Ensure that default service accounts are not actively used",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "",
              "value": true
            },
            "check_37": {
              "description": "Ensure that the Service Account Name Undefined Or Empty",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "",
              "value": true
            },
            "check_41": {
              "description": "Cluster Allows Unsafe Sysctls",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "",
              "value": true
            },
            "check_47": {
              "description": "Prevent containers from accessing the underlying host",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "",
              "value": true
            },
            "check_31": {
              "description": "Ensure that the seccomp profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "",
              "value": "RuntimeDefault"
            },
            "check_32": {
              "description": "Ensure that the AppArmor profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-gitlab-exporter",
              "obj_path": "spec/template/spec/containers/0",
              "value": "runtime/default"
            }
          }
        }
      ]
    },
    {
      "pod_name": "gitlab-gitlab-shell",
      "type_pod": "Deployment",
      "containers": [
        {
          "cont_name": "gitlab-shell",
          "functionalities": {
            "check_34": {
              "add": [],
              "drop": [
                "CHOWN",
                "DAC_OVERRIDE",
                "FOWNER",
                "FSETID",
                "KILL",
                "SETGID",
                "SETUID",
                "SETPCAP",
                "SETFCAP",
                "NET_BIND_SERVICE",
                "NET_RAW",
                "SYS_CHROOT",
                "MKNOD",
                "AUDIT_WRITE"
              ],
              "description": "Minimize the admission of containers with capabilities assigned",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0"
            },
            "check_1": {
              "description": "Ensure each container has a configured memory request",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": "6M"
            },
            "check_2": {
              "description": "Ensure each container has a configured memory limit",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": "6M"
            },
            "check_4": {
              "description": "Ensure each container has a configured CPU request",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": "2000m"
            },
            "check_5": {
              "description": "Ensure each container has a configured CPU limit",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": "2000m"
            },
            "check_3": {
              "description": "Container Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_6": {
              "description": "Container CPU Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_10": {
              "description": "Prevent containers from sharing the host's PID namespace",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "",
              "value": true
            },
            "check_11": {
              "description": "Prevent containers from sharing the host's IPC namespace",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "",
              "value": true
            },
            "check_12": {
              "description": "Prevent containers from sharing the host's network namespace",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "",
              "value": true
            },
            "check_13": {
              "description": "Prevent containers from accessing host files by using high UIDs",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_14": {
              "description": "Prevent containers from accessing host files by using high GIDs",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_15": {
              "description": "Prevent containers from mounting Docker socket",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "",
              "value": true
            },
            "check_21": {
              "description": "Container should not be privileged",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_22": {
              "description": "Containers should not run with allowPrivilegeEscalation",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_27": {
              "description": "Use read-only filesystem for containers where possible",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_28": {
              "description": "Containers should not run as root",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_35": {
              "description": "Ensure that Service Account Tokens are only mounted where necessary",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "",
              "value": true
            },
            "check_36": {
              "description": "Ensure that default service accounts are not actively used",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "",
              "value": true
            },
            "check_37": {
              "description": "Ensure that the Service Account Name Undefined Or Empty",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "",
              "value": true
            },
            "check_41": {
              "description": "Cluster Allows Unsafe Sysctls",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "",
              "value": true
            },
            "check_47": {
              "description": "Prevent containers from accessing the underlying host",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "",
              "value": true
            },
            "check_31": {
              "description": "Ensure that the seccomp profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "",
              "value": "RuntimeDefault"
            },
            "check_32": {
              "description": "Ensure that the AppArmor profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-gitlab-shell",
              "obj_path": "spec/template/spec/containers/0",
              "value": "runtime/default"
            }
          }
        }
      ]
    },
    {
      "pod_name": "gitlab-kas",
      "type_pod": "Deployment",
      "containers": [
        {
          "cont_name": "kas",
          "functionalities": {
            "check_34": {
              "add": [],
              "drop": [
                "CHOWN",
                "DAC_OVERRIDE",
                "FOWNER",
                "FSETID",
                "KILL",
                "SETGID",
                "SETUID",
                "SETPCAP",
                "SETFCAP",
                "NET_BIND_SERVICE",
                "NET_RAW",
                "SYS_CHROOT",
                "MKNOD",
                "AUDIT_WRITE"
              ],
              "description": "Minimize the admission of containers with capabilities assigned",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0"
            },
            "check_1": {
              "description": "Ensure each container has a configured memory request",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": "100M"
            },
            "check_2": {
              "description": "Ensure each container has a configured memory limit",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": "100M"
            },
            "check_4": {
              "description": "Ensure each container has a configured CPU request",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": "100m"
            },
            "check_5": {
              "description": "Ensure each container has a configured CPU limit",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": "100m"
            },
            "check_3": {
              "description": "Container Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_6": {
              "description": "Container CPU Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_10": {
              "description": "Prevent containers from sharing the host's PID namespace",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "",
              "value": true
            },
            "check_11": {
              "description": "Prevent containers from sharing the host's IPC namespace",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "",
              "value": true
            },
            "check_12": {
              "description": "Prevent containers from sharing the host's network namespace",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "",
              "value": true
            },
            "check_13": {
              "description": "Prevent containers from accessing host files by using high UIDs",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_14": {
              "description": "Prevent containers from accessing host files by using high GIDs",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_15": {
              "description": "Prevent containers from mounting Docker socket",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "",
              "value": true
            },
            "check_21": {
              "description": "Container should not be privileged",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_22": {
              "description": "Containers should not run with allowPrivilegeEscalation",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_27": {
              "description": "Use read-only filesystem for containers where possible",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_28": {
              "description": "Containers should not run as root",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_35": {
              "description": "Ensure that Service Account Tokens are only mounted where necessary",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "",
              "value": true
            },
            "check_36": {
              "description": "Ensure that default service accounts are not actively used",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "",
              "value": true
            },
            "check_37": {
              "description": "Ensure that the Service Account Name Undefined Or Empty",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "",
              "value": true
            },
            "check_41": {
              "description": "Cluster Allows Unsafe Sysctls",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "",
              "value": true
            },
            "check_47": {
              "description": "Prevent containers from accessing the underlying host",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "",
              "value": true
            },
            "check_31": {
              "description": "Ensure that the seccomp profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "",
              "value": "RuntimeDefault"
            },
            "check_32": {
              "description": "Ensure that the AppArmor profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-kas",
              "obj_path": "spec/template/spec/containers/0",
              "value": "runtime/default"
            }
          }
        }
      ]
    },
    {
      "pod_name": "gitlab-sidekiq-all-in-1-v2",
      "type_pod": "Deployment",
      "containers": [
        {
          "cont_name": "sidekiq",
          "functionalities": {
            "check_34": {
              "add": [],
              "drop": [
                "CHOWN",
                "DAC_OVERRIDE",
                "FOWNER",
                "FSETID",
                "KILL",
                "SETGID",
                "SETUID",
                "SETPCAP",
                "SETFCAP",
                "NET_BIND_SERVICE",
                "NET_RAW",
                "SYS_CHROOT",
                "MKNOD",
                "AUDIT_WRITE"
              ],
              "description": "Minimize the admission of containers with capabilities assigned",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0"
            },
            "check_1": {
              "description": "Ensure each container has a configured memory request",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": "2G"
            },
            "check_2": {
              "description": "Ensure each container has a configured memory limit",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": "2G"
            },
            "check_4": {
              "description": "Ensure each container has a configured CPU request",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": "900m"
            },
            "check_5": {
              "description": "Ensure each container has a configured CPU limit",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": "900m"
            },
            "check_3": {
              "description": "Container Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_6": {
              "description": "Container CPU Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_10": {
              "description": "Prevent containers from sharing the host's PID namespace",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "",
              "value": true
            },
            "check_11": {
              "description": "Prevent containers from sharing the host's IPC namespace",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "",
              "value": true
            },
            "check_12": {
              "description": "Prevent containers from sharing the host's network namespace",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "",
              "value": true
            },
            "check_13": {
              "description": "Prevent containers from accessing host files by using high UIDs",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_14": {
              "description": "Prevent containers from accessing host files by using high GIDs",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_15": {
              "description": "Prevent containers from mounting Docker socket",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "",
              "value": true
            },
            "check_21": {
              "description": "Container should not be privileged",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_22": {
              "description": "Containers should not run with allowPrivilegeEscalation",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_27": {
              "description": "Use read-only filesystem for containers where possible",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_28": {
              "description": "Containers should not run as root",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_35": {
              "description": "Ensure that Service Account Tokens are only mounted where necessary",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "",
              "value": true
            },
            "check_36": {
              "description": "Ensure that default service accounts are not actively used",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "",
              "value": true
            },
            "check_37": {
              "description": "Ensure that the Service Account Name Undefined Or Empty",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "",
              "value": true
            },
            "check_41": {
              "description": "Cluster Allows Unsafe Sysctls",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "",
              "value": true
            },
            "check_47": {
              "description": "Prevent containers from accessing the underlying host",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "",
              "value": true
            },
            "check_31": {
              "description": "Ensure that the seccomp profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "",
              "value": "RuntimeDefault"
            },
            "check_32": {
              "description": "Ensure that the AppArmor profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-sidekiq-all-in-1-v2",
              "obj_path": "spec/template/spec/containers/0",
              "value": "runtime/default"
            }
          }
        }
      ]
    },
    {
      "pod_name": "gitlab-registry",
      "type_pod": "Deployment",
      "containers": [
        {
          "cont_name": "registry",
          "functionalities": {
            "check_34": {
              "add": [],
              "drop": [
                "CHOWN",
                "DAC_OVERRIDE",
                "FOWNER",
                "FSETID",
                "KILL",
                "SETGID",
                "SETUID",
                "SETPCAP",
                "SETFCAP",
                "NET_BIND_SERVICE",
                "NET_RAW",
                "SYS_CHROOT",
                "MKNOD",
                "AUDIT_WRITE"
              ],
              "description": "Minimize the admission of containers with capabilities assigned",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0"
            },
            "check_1": {
              "description": "Ensure each container has a configured memory request",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": "32Mi"
            },
            "check_2": {
              "description": "Ensure each container has a configured memory limit",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": "32Mi"
            },
            "check_4": {
              "description": "Ensure each container has a configured CPU request",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": "50m"
            },
            "check_5": {
              "description": "Ensure each container has a configured CPU limit",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": "50m"
            },
            "check_3": {
              "description": "Container Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_6": {
              "description": "Container CPU Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_10": {
              "description": "Prevent containers from sharing the host's PID namespace",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "",
              "value": true
            },
            "check_11": {
              "description": "Prevent containers from sharing the host's IPC namespace",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "",
              "value": true
            },
            "check_12": {
              "description": "Prevent containers from sharing the host's network namespace",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "",
              "value": true
            },
            "check_13": {
              "description": "Prevent containers from accessing host files by using high UIDs",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_14": {
              "description": "Prevent containers from accessing host files by using high GIDs",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_15": {
              "description": "Prevent containers from mounting Docker socket",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "",
              "value": true
            },
            "check_21": {
              "description": "Container should not be privileged",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_22": {
              "description": "Containers should not run with allowPrivilegeEscalation",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_27": {
              "description": "Use read-only filesystem for containers where possible",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_28": {
              "description": "Containers should not run as root",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_35": {
              "description": "Ensure that Service Account Tokens are only mounted where necessary",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "",
              "value": true
            },
            "check_36": {
              "description": "Ensure that default service accounts are not actively used",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "",
              "value": true
            },
            "check_37": {
              "description": "Ensure that the Service Account Name Undefined Or Empty",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "",
              "value": true
            },
            "check_41": {
              "description": "Cluster Allows Unsafe Sysctls",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "",
              "value": true
            },
            "check_47": {
              "description": "Prevent containers from accessing the underlying host",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "",
              "value": true
            },
            "check_31": {
              "description": "Ensure that the seccomp profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "",
              "value": "RuntimeDefault"
            },
            "check_32": {
              "description": "Ensure that the AppArmor profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-registry",
              "obj_path": "spec/template/spec/containers/0",
              "value": "runtime/default"
            }
          }
        }
      ]
    },
    {
      "pod_name": "gitlab-toolbox",
      "type_pod": "Deployment",
      "containers": [
        {
          "cont_name": "toolbox",
          "functionalities": {
            "check_34": {
              "add": [],
              "drop": [
                "CHOWN",
                "DAC_OVERRIDE",
                "FOWNER",
                "FSETID",
                "KILL",
                "SETGID",
                "SETUID",
                "SETPCAP",
                "SETFCAP",
                "NET_BIND_SERVICE",
                "NET_RAW",
                "SYS_CHROOT",
                "MKNOD",
                "AUDIT_WRITE"
              ],
              "description": "Minimize the admission of containers with capabilities assigned",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0"
            },
            "check_1": {
              "description": "Ensure each container has a configured memory request",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": "350M"
            },
            "check_2": {
              "description": "Ensure each container has a configured memory limit",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": "350M"
            },
            "check_4": {
              "description": "Ensure each container has a configured CPU request",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": "50m"
            },
            "check_5": {
              "description": "Ensure each container has a configured CPU limit",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": "50m"
            },
            "check_3": {
              "description": "Container Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_6": {
              "description": "Container CPU Requests Not Equal To It's Limits",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_10": {
              "description": "Prevent containers from sharing the host's PID namespace",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "",
              "value": true
            },
            "check_11": {
              "description": "Prevent containers from sharing the host's IPC namespace",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "",
              "value": true
            },
            "check_12": {
              "description": "Prevent containers from sharing the host's network namespace",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "",
              "value": true
            },
            "check_13": {
              "description": "Prevent containers from accessing host files by using high UIDs",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_14": {
              "description": "Prevent containers from accessing host files by using high GIDs",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_15": {
              "description": "Prevent containers from mounting Docker socket",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "",
              "value": true
            },
            "check_21": {
              "description": "Container should not be privileged",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_22": {
              "description": "Containers should not run with allowPrivilegeEscalation",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_27": {
              "description": "Use read-only filesystem for containers where possible",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_28": {
              "description": "Containers should not run as root",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_35": {
              "description": "Ensure that Service Account Tokens are only mounted where necessary",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "",
              "value": true
            },
            "check_36": {
              "description": "Ensure that default service accounts are not actively used",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "",
              "value": true
            },
            "check_37": {
              "description": "Ensure that the Service Account Name Undefined Or Empty",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "",
              "value": true
            },
            "check_41": {
              "description": "Cluster Allows Unsafe Sysctls",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "",
              "value": true
            },
            "check_47": {
              "description": "Prevent containers from accessing the underlying host",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "",
              "value": true
            },
            "check_31": {
              "description": "Ensure that the seccomp profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "",
              "value": "RuntimeDefault"
            },
            "check_32": {
              "description": "Ensure that the AppArmor profile is set to docker/default or runtime/default",
              "resource_path": "Deployment/default/release-name-toolbox",
              "obj_path": "spec/template/spec/containers/0",
              "value": "runtime/default"
            }
          }
        }
      ]
    }
  ]
}
