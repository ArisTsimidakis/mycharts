{
  "helmchart_name": "mycharts/nfs-server-provisioner",
  "release_name": "nfs-server-provisioner",
  "temp_name": "nfs-server-provisioner",
  "loc_helm_chart": "/home/clinton/functionality_oracle/artifacts/helm_charts/mycharts_nfs-server-provisioner.yml",
  "tool": "self",
  "pods": [
    {
      "pod_name": "nfs-server-provisioner",
      "type_pod": "StatefulSet",
      "containers": [
        {
          "cont_name": "nfs-server-provisioner",
          "functionalities": {
            "check_34": {
              "add": [
                "DAC_OVERRIDE",
                "SETGID",
                "SETUID",
                "SETPCAP",
                "NET_BIND_SERVICE"
              ],
              "drop": [
                "CHOWN",
                "FOWNER",
                "FSETID",
                "KILL",
                "SETFCAP",
                "NET_RAW",
                "SYS_CHROOT",
                "MKNOD",
                "AUDIT_WRITE"
              ],
              "description": "Minimize the admission of containers with capabilities assigned",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0"
            },
            "check_1": {
              "description": "Ensure each container has a configured memory request",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": "1024Mi"
            },
            "check_2": {
              "description": "Ensure each container has a configured memory limit",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": "1024Mi"
            },
            "check_4": {
              "description": "Ensure each container has a configured CPU request",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": "1000m"
            },
            "check_5": {
              "description": "Ensure each container has a configured CPU limit",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": "1000m"
            },
            "check_3": {
              "description": "Container Requests Not Equal To It's Limits",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_6": {
              "description": "Container CPU Requests Not Equal To It's Limits",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_10": {
              "description": "Prevent containers from sharing the host's PID namespace",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "",
              "value": true
            },
            "check_11": {
              "description": "Prevent containers from sharing the host's IPC namespace",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "",
              "value": true
            },
            "check_12": {
              "description": "Prevent containers from sharing the host's network namespace",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "",
              "value": true
            },
            "check_13": {
              "description": "Prevent containers from accessing host files by using high UIDs",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_14": {
              "description": "Prevent containers from accessing host files by using high GIDs",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_15": {
              "description": "Prevent containers from mounting Docker socket",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "",
              "value": true
            },
            "check_21": {
              "description": "Container should not be privileged",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_22": {
              "description": "Containers should not run with allowPrivilegeEscalation",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": true
            },
            "check_27": {
              "description": "Use read-only filesystem for containers where possible",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_28": {
              "description": "Containers should not run as root",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_35": {
              "description": "Ensure that Service Account Tokens are only mounted where necessary",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "",
              "value": false,
              "failed_check": "test_case_1"
            },
            "check_36": {
              "description": "Ensure that default service accounts are not actively used",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "",
              "value": true
            },
            "check_37": {
              "description": "Ensure that the Service Account Name Undefined Or Empty",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "",
              "value": true
            },
            "check_41": {
              "description": "Cluster Allows Unsafe Sysctls",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "",
              "value": true
            },
            "check_48": {
              "description": "Prevent containers from accessing the underlying host",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "",
              "value": true
            },
            "check_31": {
              "description": "Ensure that the seccomp profile is set to docker/default or runtime/default",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "",
              "value": "RuntimeDefault"
            },
            "check_32": {
              "description": "Ensure that the AppArmor profile is set to docker/default or runtime/default",
              "resource_path": "StatefulSet/default/release-name-nfs-server-provisioner",
              "obj_path": "spec/template/spec/containers/0",
              "value": "runtime/default"
            }
          },
          "appArmorProfile": "profile-nfs-server-provisioner_nfs-server-provisioner"
        }
      ]
    }
  ]
}
